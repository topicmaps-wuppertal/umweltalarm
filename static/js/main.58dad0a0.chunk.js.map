{"version":3,"sources":["version.js","components/MenuFooter.js","components/Menu.js","Crosshair.js","md5Fetching.js","search.js","components/InfoBox.js","components/SecondaryInfo.js","UmweltalarmMap.js","components/LoginForm.js","components/Waiting.js","components/TitleControl.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["APPERSION","Footer","setAppMenuActiveMenuSection","useContext","UIDispatchContext","style","fontSize","className","onClick","scroller","scrollTo","containerId","document","title","href","target","reactCismapVersion","rel","MyMenu","ModalApplicationMenu","menuIcon","menuTitle","menuIntroduction","menuSections","DefaultSettingsPanel","skipFilterTitleSettings","skipClusteringSettings","skipSymbolsizeSetting","Section","sectionKey","sectionTitle","sectionBsStyle","sectionContent","ConfigurableDocBlocks","configs","getSimpleHelpForTM","undefined","menuFooter","MenuFooter","Comp","windowSize","ResponsiveTopicMapContext","position","top","height","width","backgroundColor","zIndex","pointerEvents","left","borderRadius","md5ActionFetchDAQ4Dexie","prefix","apiUrl","jwt","daqKey","db","a","table","get","name","allObjects","md5InCache","md5","console","log","taskParameters","parameters","fd","FormData","append","Blob","JSON","stringify","type","time","Promise","resolve","reject","data","fetch","method","headers","Authorization","body","response","status","json","content","res","result","parse","newData","update","id","add","geojson","indexGeometries","desc","exception","index","Flatbush","length","tableObject","clear","el","geo","getBoundsFromArea","i","push","bulkPut","finish","changes","indexAnsprechpartner","indexAnsprechpartnerZustaendigkeit","tabelle","referenz","referenzfeld","area","bboxArray","turf","bbox","nameMapping","daqTableMapping","searchForFeatures","daqKeys","geom","hits","geomBounds","ansprechpartner","ansprechpartnerZustaendigkeit","trinkwasserbrunnen","trinkwasserbrunnenDist","key","metaTable","tableObjects","otable","serIndex","pol_index","from","indizes","search","o","obj","geoj","booleanIntersects","geomCoords","geometry","coordinates","transformedGeom","proj4","defs","brunnenCenter","turfCenter","brunnenCoords","transformedBrunnen","dist","turfDistance","unit","distanceInMeters","addAnsprechpartner","Math","round","dataObject","keys","Object","found","anprechreferenz","anspr","offlineDataAvailable","lastTime","InfoBox","collapsedInfoBox","UIContext","setCollapsedInfoBox","setSecondaryInfoVisible","hitsObject","Array","isArray","typ","brunnen","bimsch","strassenmeisterei","schutzgebiete","autobahnmeisterei","wasserschutzgebiete","verbaende","stoerfallbetriebe","stadtFlurstuecke","header","textAlign","verticalAlign","background","color","opacity","paddingLeft","paddingTop","paddingBottom","alwaysVisibleDiv","activeStyle","border","borderStyle","inactiveStyle","subtextStyle","minHeight","collapsibleDiv","paddingRight","active","spinner","text","display","gridGap","gridTemplateColumns","icon","faFaucet","abstand","faRoad","default_name","faIndustry","faHandHoldingWater","faWater","faExclamationCircle","faCity","faTree","ResponsiveInfoBox","panelClick","pixelwidth","isCollapsible","handleResponsiveDesign","infoStyle","padding","secondaryInfoBoxElements","fixedRow","InfoPanel","subSections","value","valFunc","join","URLSearchParams","window","location","SecondaryInfoPanelSection","bsStyle","SecondaryInfo","titleIconName","mainSection","nummer","bezeichnung","groesse","toLocaleString","stadtbezirke","sb","quartiere","q","eigentuemer","e","host","getData","setGazData","setInfoData","sources","md5FetchText","adressen","bezirke","pois","kitas","gazData","getGazDataForTopicIds","UmweltalarmMap","useState","setHits","useEffect","Crosshair","TopicMapComponent","modalMenu","homeZoom","maxZoom","secondaryInfo","mappingBoundsChanged","boundingBox","bottom","right","bbPoly","bboxPolygon","center","then","dayjs","extend","customParseFormat","LoginForm","setJWT","loginInfo","setLoginInfo","setMetaInformation","FeatureCollectionDispatchContext","pwFieldRef","useRef","userFieldRef","modalBodyStyle","overflowY","overflowX","maxHeight","user","_setUser","pw","setPw","cacheDataAvailable","setCacheDataAvailable","localforage","setUser","setItem","appKey","getItem","userInCache","dataValueInCache","toDate","current","focus","select","login","btoa","responseWithJWT","setTimeout","catch","err","Modal","size","show","keyboard","Header","Title","Icon","Body","Form","Group","controlId","Label","Control","ref","onChange","onKeyPress","event","placeholder","alignItems","flexDirection","justifyContent","margin","maxWidth","flexShrink","Button","CACHE_JWT","marginTop","variant","Waiting","waiting","selectedFeature","FeatureCollectionContext","properties","marginLeft","dateInfo","jwtPayload","actiontext","logout","metaInformation","t","Date","atob","split","sub","titleContent","float","Dexie","schema","version","stores","initTables","App","backgroundModes","_setJWT","loggedOut","setLoggedOut","jwtInCache","stoerfallResult","problem","getInternetExplorerVersion","mode","layerKey","baseLayerConf","defaultLayerConf","namedLayers","cismetLight","pane","cismetText","TopicMapContextProvider","persistenceSettings","ui","featureCollection","responsive","styling","additionalLayerConfiguration","initialActive","layer","MapLibreLayer","style_","kanal","gewaesser","backgroundConfigurations","lbk","layerkey","layerkey_","src","stadtplan","vector","referenceSystem","MappingConstants","crs3857","mapEPSGCode","referenceSystemDefinition","proj4crs3857def","maskingPolygon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.58dad0a0.chunk.js","sourcesContent":["const APPERSION = \"0.7.0\";\nconst APPHASH = \"#9adfe4b0141db7e1e8c135f049d0aa5454d36924\";\n\nexport const getApplicationVersion = () => {\n  /*eslint-disable no-useless-concat*/\n  if (APPERSION === \"%APPLICATION\" + \"_\" + \"VERSION%\") {\n    return \"dev-hot-reload\";\n  } else {\n    return APPERSION;\n  }\n};\nexport const getApplicationHash = () => {\n  if (APPHASH === \"%APPLICATION\" + \"_\" + \"HASH%\") {\n    return \"#dev-hot-reload\";\n  } else {\n    return APPHASH;\n  }\n};\n","import { useContext } from \"react\";\nimport { UIDispatchContext } from \"react-cismap/contexts/UIContextProvider\";\nimport { version as reactCismapVersion } from \"react-cismap/meta\";\nimport { scroller } from \"react-scroll\";\nimport { getApplicationVersion } from \"../version\";\n\nconst Footer = () => {\n  const { setAppMenuActiveMenuSection } = useContext(UIDispatchContext);\n\n  return (\n    <div style={{ fontSize: \"11px\" }}>\n      <b>Hintergrundkarten</b>: Stadtkarte 2.0 © RVR | True Orthophoto 2020 © Stadt Wuppertal |\n      Openmaptiles basierte Vectorkarte (hosted by cismet){\" \"}\n      <a\n        className='pleaseRenderAsLink'\n        onClick={() => {\n          setAppMenuActiveMenuSection(\"help\");\n          scroller.scrollTo(\"Datengrundlage\", { containerId: \"myMenu\" });\n        }}\n      >\n        (Details und Nutzungsbedingungen)\n      </a>\n      <br />\n      <div>\n        <b>\n          {document.title} v{getApplicationVersion()}\n        </b>\n        :{\" \"}\n        <a href='https://cismet.de/' target='_cismet'>\n          cismet GmbH\n        </a>{\" \"}\n        auf Basis von{\" \"}\n        <a href='http://leafletjs.com/' target='_more'>\n          Leaflet\n        </a>{\" \"}\n        und{\" \"}\n        <a href='https://cismet.de/#refs' target='_cismet'>\n          cids | react-cismap v{reactCismapVersion}\n        </a>{\" \"}\n        |{\" \"}\n        <a\n          target='_blank'\n          rel='noopener noreferrer'\n          href='https://cismet.de/datenschutzerklaerung.html'\n        >\n          Datenschutzerklärung (Privacy Policy)\n        </a>\n      </div>\n    </div>\n  );\n};\nexport default Footer;\n","import { useContext } from \"react\";\nimport { UIDispatchContext } from \"react-cismap/contexts/UIContextProvider\";\nimport { getSimpleHelpForTM } from \"react-cismap/tools/uiHelper\";\nimport ConfigurableDocBlocks from \"react-cismap/topicmaps/ConfigurableDocBlocks\";\nimport DefaultSettingsPanel from \"react-cismap/topicmaps/menu/DefaultSettingsPanel\";\nimport ModalApplicationMenu from \"react-cismap/topicmaps/menu/ModalApplicationMenu\";\nimport Section from \"react-cismap/topicmaps/menu/Section\";\nimport MenuFooter from \"./MenuFooter\";\n\nconst MyMenu = () => {\n  const { setAppMenuActiveMenuSection } = useContext(UIDispatchContext);\n  const simpleHelp = undefined;\n  return (\n    <ModalApplicationMenu\n      menuIcon={\"bars\"}\n      menuTitle={\"Einstellungen und Kompaktanleitung\"}\n      menuIntroduction={\n        <span>\n          Über <strong>Einstellungen</strong> können Sie die Darstellung der Hintergrundkarte und\n          der Objekte an Ihre Vorlieben anpassen. Wählen Sie <strong>Kompaktanleitung</strong> für\n          detailliertere Bedienungsinformationen.enungsinformationen.\n        </span>\n      }\n      menuSections={[\n        <DefaultSettingsPanel\n          key='settings'\n          skipFilterTitleSettings={true}\n          skipClusteringSettings={true}\n          skipSymbolsizeSetting={true}\n        />,\n\n        <Section\n          key='help'\n          sectionKey='help'\n          sectionTitle='Kompaktanleitung'\n          sectionBsStyle='default'\n          sectionContent={\n            <ConfigurableDocBlocks configs={getSimpleHelpForTM(document.title, simpleHelp)} />\n          }\n        />,\n      ]}\n      menuFooter={<MenuFooter />}\n    />\n  );\n};\nexport default MyMenu;\n","import { useContext } from \"react\";\n\nimport { ResponsiveTopicMapContext } from \"react-cismap/contexts/ResponsiveTopicMapContextProvider\";\n\nconst Comp = () => {\n  const { windowSize } = useContext(ResponsiveTopicMapContext);\n\n  return (\n    <div>\n      <div\n        style={{\n          position: \"absolute\",\n          top: (windowSize?.height || 500) / 2 - 1,\n          width: windowSize?.width || \"100%\",\n          height: \"2px\",\n          backgroundColor: \"#00000023\",\n          zIndex: \"100000\",\n          pointerEvents: \"none\",\n        }}\n      ></div>\n      <div\n        style={{\n          position: \"absolute\",\n          left: (windowSize?.width || 500) / 2 - 1,\n          height: windowSize?.height || \"100%\",\n          width: \"2px\",\n          backgroundColor: \"#00000023\",\n          zIndex: \"100000\",\n          pointerEvents: \"none\",\n        }}\n      ></div>\n      <div\n        style={{\n          borderRadius: \"50%\",\n          position: \"absolute\",\n          left: (windowSize?.width || 500) / 2 - 10,\n          top: (windowSize?.height || 500) / 2 - 10,\n          height: \"20px\",\n          width: \"20px\",\n          backgroundColor: \"#00000023\",\n          zIndex: \"100000\",\n          pointerEvents: \"none\",\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default Comp;\n","import Dexie from 'dexie';\nimport Flatbush from 'flatbush';\nimport turf from 'turf';\n\nexport const CACHE_JWT = \"--cached--data--\";\n\nexport const initTables = (prefix, daqKeys) => {\n    var db = new Dexie(prefix);\n    var schema = {};\n    for (const key of daqKeys) {\n        schema[key] = \"gid\";\n    }\n    schema['daq_meta'] = \"++id,name,md5,time\";\n    schema['anprechp'] = \"id\";\n    schema['zustaendigkeit'] = \"id,tabelle,referenzfeld,referenz,[tabelle+referenzfeld+referenz]\";\n\n    db.version(10).stores(schema);\n\n    return db;\n}\n\nexport const md5ActionFetchDAQ4Dexie = async (prefix, apiUrl, jwt, daqKey, db) => {\n    const allObjects = await db.table('daq_meta').get({name: daqKey});\n    var md5InCache = null;\n\n    if (allObjects != null) {\n        md5InCache = allObjects.md5;\n    }\n  \n    console.log(\"DAQ for \" + daqKey);\n\n    let taskParameters = {\n      parameters: {\n        daqKey,\n        md5: md5InCache || \"-\",\n      },\n    };\n  \n    let fd = new FormData();\n    fd.append(\n      \"taskparams\",\n      new Blob([JSON.stringify(taskParameters)], {\n        type: \"application/json\",\n      })\n    );\n  \n    if (jwt === CACHE_JWT) {\n      const data = 'data retrieved';\n      \n      //go for result.time after the new version of the action is live\n      const time = allObjects.time;\n      return new Promise((resolve, reject) => {\n        resolve({ data, time });\n      });\n    } else {\n      const response = await fetch(\n        apiUrl + \"/actions/WUNDA_BLAU.dataAquisition/tasks?resultingInstanceType=result\",\n        {\n          method: \"POST\",\n          // method: \"GET\",\n          headers: {\n            Authorization: \"Bearer \" + jwt,\n            // \"Content-Type\": \"application/json\",\n            // Accept: \"application/json\",\n          },\n          body: fd,\n        }\n      );\n  \n      if (response.status >= 200 && response.status < 300) {\n        const content = await response.json();\n        if (content.res) {\n          try {\n            const result = JSON.parse(content.res);\n            let status = result.status;\n            let data, time;\n  \n            if (status === 200) {\n              console.log(\"DAQ cache miss for \" + daqKey);\n  \n              data = JSON.parse(result.content);\n              time = result.time;\n              var newData = {};\n              newData['md5'] = result.md5;\n              newData['time'] = time;\n              newData['name'] = daqKey;\n              console.log('new md5: ' + newData.md5);\n\n              if (allObjects != null) {\n                await db.table('daq_meta').update(allObjects.id, newData);\n              } else {\n                db.table('daq_meta').add(newData);\n              } \n//              console.time(\"index time\"+daqKey)\n              if (data && data[0] && data[0].geojson) {\n                await indexGeometries(data, daqKey, prefix, db);\n              }\n//              console.timeEnd(\"index time\"+daqKey)\n            } else if (status === 304) {\n              console.log(\"DAQ cache hit for \" + daqKey);\n              //go for result.time after the new version of the action is live\n\n              if (allObjects != null) {\n                time = allObjects.time;\n                data = 'data retrieved';\n              }\n            }\n  \n            return new Promise((resolve, reject) => {\n              resolve({ data, time });\n            });\n          } catch (e) {\n            return new Promise((resolve, reject) => {\n              reject({\n                status: 500,\n                desc:\n                  \"error when parsing the server result. probably the content has the wrong structure\",\n                content,\n                exception: e,\n              });\n            });\n          }\n        } else {\n          return new Promise((resolve, reject) => {\n            reject({\n              status: 500,\n              desc: \"error when parsing the server result.\",\n              content,\n            });\n          });\n        }\n      } else if (response.status === 401) {\n        return new Promise((resolve, reject) => {\n          reject({ status: response.status, desc: \"unauthorized\" });\n        });\n      } else {\n        return new Promise((resolve, reject) => {\n          reject({ status: response.status, desc: \"unknown\" });\n        });\n      }\n    }\n  };\n  \n\n  export const indexGeometries = async (content, table, prefix, db) => {\n    const index = new Flatbush(content.length);\n    const tableObject = db.table(table);\n    await tableObject.clear();\n\n    const data=[];\n\n    for (const el of content) {\n      const geo = getBoundsFromArea(el.geojson);\n      var i = index.add(geo[0][1], geo[0][0], geo[1][1], geo[1][0]);\n      var newData = {};\n      newData['gid'] = i;\n      newData['data'] = el;\n      data.push(newData);\n    }\n\n    await tableObject.bulkPut(data);\n    index.finish();\n    \n    const allObjects = await db.table('daq_meta').get({name: table});\n    var changes = {};\n    changes['pol_index'] = index.data;\n    await db.table('daq_meta').update(allObjects.id, changes);\n  }\n\n  export const indexAnsprechpartner = async (content, table, db) => {\n    const tableObject = db.table('anprechp');\n    await tableObject.clear();\n\n    const data=[];\n    var i = 0;\n\n    for (const el of content) {\n      var newData = {};\n      newData['id'] = el.id;\n      newData['data'] = el;\n      data.push(newData);\n    }\n\n    await tableObject.bulkPut(data);\n  }\n\n  export const indexAnsprechpartnerZustaendigkeit = async (content, table, db) => {\n    const tableObject = db.table('zustaendigkeit');\n    await tableObject.clear();\n\n    const data=[];\n    var i = 0;\n\n    for (const el of content) {\n      var newData = {};\n      newData['id'] = el.id;\n      newData['tabelle'] = el.tabelle;\n      newData['referenz'] = el.referenz;\n      newData['referenzfeld'] = el.referenzfeld;\n      newData['data'] = el;\n      data.push(newData);\n    }\n\n    await tableObject.bulkPut(data);\n  }\n\n  export const getBoundsFromArea = (area) => {\n    const bboxArray = turf.bbox(area);\n    const corner1 = [bboxArray[1], bboxArray[0]];\n    const corner2 = [bboxArray[3], bboxArray[2]];\n    var bounds = [corner1, corner2];\n\n    return bounds;\n  }","import Flatbush from 'flatbush';\nimport {getBoundsFromArea} from \"./md5Fetching\";\nimport booleanIntersects from \"@turf/boolean-intersects\";\nimport turfDistance from \"@turf/distance\";\nimport turfCenter from \"@turf/center\";\nimport proj4 from \"proj4\";\n\nexport const nameMapping = {};\nnameMapping['StoerfallBetriebeKlasse1']='betrieb';\nnameMapping['StoerfallBetriebeKlasse2']='betrieb';\nnameMapping['wasserverbaende']='name';\nnameMapping['wasserschutzgebiete']='zone';\nnameMapping['autobahnmeisterei']='bezirk';\nnameMapping['landschaftsschutzgebiete']='sg_typ';\nnameMapping['naturschutzgebiete']='sg_typ';\nnameMapping['strassenmeisterei']='bezirk';\nnameMapping['bimschNrw']='astnr';\nnameMapping['bimschWuppertal']='astnr';\nnameMapping['trinkwasserbrunnen']='str_name';\nnameMapping['stadtFlurstuecke']='flurstueck';\n\nexport const daqTableMapping = {};\ndaqTableMapping['StoerfallBetriebeKlasse1']='stoerfallbetriebe_klasse1';\ndaqTableMapping['StoerfallBetriebeKlasse2']='stoerfallbetriebe_klasse2';\ndaqTableMapping['wasserverbaende']='wasserverbaende';\ndaqTableMapping['wasserschutzgebiete']='wasserschutzgebiete';\ndaqTableMapping['autobahnmeisterei']='autobahnmeisterei';\ndaqTableMapping['landschaftsschutzgebiete']='landschaftsschutzgebiete';\ndaqTableMapping['naturschutzgebiete']='sg_naturschutzgebietetyp';\ndaqTableMapping['strassenmeisterei']='strassenmeisterei';\ndaqTableMapping['bimschNrw']='bimsch_nrw';\ndaqTableMapping['bimschWuppertal']='bimsch_wuppertal';\ndaqTableMapping['trinkwasserbrunnen']='trinkwasserbrunnen';\ndaqTableMapping['stadtFlurstuecke']='stadt_flurstuecke';\n\nexport const searchForFeatures = async (db, daqKeys, geom) => {\n    var hits = [];\n    const geomBounds = getBoundsFromArea(geom);\n    var ansprechpartner = db.table('anprechp');\n    var ansprechpartnerZustaendigkeit = db.table('zustaendigkeit');\n    var trinkwasserbrunnen = null;\n    var trinkwasserbrunnenDist = null;\n\n    for (const key of daqKeys) {\n        const metaTable = await db.table('daq_meta');\n\n        if (metaTable) {\n            const tableObjects = await metaTable.get({name: key});\n            const otable  = await db.table(key);\n\n            if (tableObjects) {\n                var serIndex = tableObjects.pol_index;\n\n                if (serIndex != null) {\n                    const index = Flatbush.from(serIndex);\n                    var indizes = index.search(geomBounds[0][1], geomBounds[0][0], geomBounds[1][1], geomBounds[1][0]);\n\n                    if (indizes != null) {\n                        for (var i of indizes) {\n                            var o = await otable.get(i);\n\n                            if (o != null) {\n                                var obj = o.data;\n                                obj['typ'] = key;\n                                obj['default_name'] = obj[nameMapping[key]];\n                                var geoj = obj.geojson;\n                            \n                                if (booleanIntersects(geoj, geom)) {\n                                    if (key === 'trinkwasserbrunnen') {\n                                        var geomCoords = [geom.geometry.coordinates[0], geom.geometry.coordinates[1]];\n                                        var transformedGeom = proj4(proj4.defs(\"EPSG:3857\"), proj4.defs(\"EPSG:4326\"), geomCoords);\n                                        var brunnenCenter = turfCenter(geoj);\n                                        var brunnenCoords = [brunnenCenter.geometry.coordinates[0], brunnenCenter.geometry.coordinates[1]];\n                                        var transformedBrunnen = proj4(proj4.defs(\"EPSG:3857\"), proj4.defs(\"EPSG:4326\"), brunnenCoords);\n                                        var dist = turfDistance(transformedGeom, transformedBrunnen, {unit: 'kilometers'});\n//                                        alert(transformedGeom);\n//                                        alert(transformedBrunnen);\n//                                        alert(dist * 1000 * 1.6);\n                                        var distanceInMeters = dist * 1000 * 1.6;\n                                        if (trinkwasserbrunnenDist === null || trinkwasserbrunnenDist > distanceInMeters) {\n                                            addAnsprechpartner(key, obj, ansprechpartner, ansprechpartnerZustaendigkeit)\n                                            obj['abstand'] = Math.round(distanceInMeters);\n                                            trinkwasserbrunnen = obj;\n                                            trinkwasserbrunnenDist = distanceInMeters;\n                                        }\n\n                                    } else {\n                                        addAnsprechpartner(key, obj, ansprechpartner, ansprechpartnerZustaendigkeit)\n                                        hits.push(obj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    if (trinkwasserbrunnen !== null) {\n        hits.push(trinkwasserbrunnen);\n    } \n\n    return hits;\n}\n\nexport const addAnsprechpartner = async (daqKey, dataObject, ansprechpartner, ansprechpartnerZustaendigkeit) => {\n    var table = daqTableMapping[daqKey];\n    var keys = Object.keys(dataObject);\n    var found = false;\n\n    for (const key of keys) {\n        if (key !== 'geojson' && dataObject[key] != undefined) {\n            var anprechreferenz = await ansprechpartnerZustaendigkeit.get({tabelle: table, referenz: dataObject[key], referenzfeld: key});\n            \n            if (anprechreferenz) {\n                dataObject['Anprechpartner'] = await ansprechpartner.get(anprechreferenz.ansprechpartner);\n                found = true;\n                break;\n            }\n        }\n    }\n\n    if (found === false) {\n        var anprechreferenz = await ansprechpartnerZustaendigkeit.get({tabelle: table, referenz: 'null', referenzfeld: 'null'});\n\n        if (anprechreferenz) {\n            var anspr = await ansprechpartner.get({id: '' + anprechreferenz.data.ansprechpartner});\n            \n            if (anspr) {\n                dataObject['Anprechpartner'] = anspr.data;\n            }\n        }\n    }\n\n    return dataObject;\n}\n\nexport const offlineDataAvailable = async (db, daqKeys) => {\n    var lastTime = null;\n\n    for (const key of daqKeys) {\n        const metaTable = await db.table('daq_meta');\n\n        if (metaTable != null) {\n            const tableObjects = await metaTable.get({name: key});\n\n            if (tableObjects != null) {\n                lastTime = tableObjects.time;\n            } else {\n                console.log('offline data for key ' + key + ' not available');\n                return null;\n            }\n        }\n    }\n\n    return lastTime;\n}","import ResponsiveInfoBox from \"react-cismap/topicmaps/ResponsiveInfoBox\";\nimport { useContext } from \"react\";\nimport { UIContext, UIDispatchContext } from \"react-cismap/contexts/UIContextProvider\";\nimport IconComp from \"react-cismap/commons/Icon\";\nimport {\n  faArchive,\n  faBiohazard,\n  faCity,\n  faFaucet,\n  faHandHoldingWater,\n  faIndustry,\n  faLeaf,\n  faRoad,\n  faWater,\n  faTree,\n  faExclamationCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Icon } from \"react-fa\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport Loadable from \"react-loading-overlay\";\n\nconst InfoBox = ({ hits }) => {\n  const { collapsedInfoBox } = useContext(UIContext);\n  const { setCollapsedInfoBox, setSecondaryInfoVisible } = useContext(UIDispatchContext);\n  var hitsObject = {};\n\n  if (Array.isArray(hits)) {\n    for (var el of hits) {\n      switch (el.typ) {\n        case 'trinkwasserbrunnen':\n            if (hitsObject.brunnen === undefined) {\n              hitsObject.brunnen = [];\n            }\n            hitsObject.brunnen.push(el);\n          break;\n        case 'bimschNrw':\n        case 'bimschWuppertal':\n          if (hitsObject.bimsch === undefined) {\n            hitsObject.bimsch = [];\n          }\n          hitsObject.bimsch.push(el);\n          break;\n        case 'strassenmeisterei':\n          if (hitsObject.strassenmeisterei === undefined) {\n            hitsObject.strassenmeisterei = [];\n          }\n          hitsObject.strassenmeisterei.push(el);\n          break;\n        case 'naturschutzgebiete':\n        case 'landschaftsschutzgebiete':\n          if (hitsObject.schutzgebiete === undefined) {\n            hitsObject.schutzgebiete = [];\n          }\n          hitsObject.schutzgebiete.push(el);\n          break;\n        case 'autobahnmeisterei':\n          if (hitsObject.autobahnmeisterei === undefined) {\n            hitsObject.autobahnmeisterei = [];\n          }\n          hitsObject.autobahnmeisterei.push(el);\n          break;\n        case 'wasserschutzgebiete':\n          if (hitsObject.wasserschutzgebiete === undefined) {\n            hitsObject.wasserschutzgebiete = [];\n          }\n          hitsObject.wasserschutzgebiete.push(el);\n         break;\n        case 'wasserverbaende':\n          if (hitsObject.verbaende === undefined) {\n            hitsObject.verbaende = [];\n          }\n          hitsObject.verbaende.push(el);\n          break;\n        case 'StoerfallBetriebeKlasse1':\n        case 'StoerfallBetriebeKlasse2':\n          if (hitsObject.stoerfallbetriebe === undefined) {\n            hitsObject.stoerfallbetriebe = [];\n          }\n          hitsObject.stoerfallbetriebe.push(el);\n          break;\n        case 'stadtFlurstuecke':\n          if (hitsObject.stadtFlurstuecke === undefined) {\n            hitsObject.stadtFlurstuecke = [];\n          }\n          hitsObject.stadtFlurstuecke.push(el);\n          break;\n      }\n    }\n  }\n\n  const header = (\n    <table style={{ width: \"100%\" }}>\n      <tbody>\n        <tr>\n          <td\n            style={{\n              textAlign: \"left\",\n              verticalAlign: \"top\",\n              background: \"grey\",\n              color: \"black\",\n              opacity: \"0.9\",\n              paddingLeft: \"0px\",\n              paddingTop: \"0px\",\n              paddingBottom: \"0px\",\n            }}\n          >\n            <span> Analyseergebnis: ({(Array.isArray(hits) ? hits.length : '-')})</span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n\n  let alwaysVisibleDiv = <div></div>;\n  let fontSize = 30;\n  let activeStyle = { border: 0, borderStyle: \"solid\", fontSize, textAlign: \"center\" };\n  let inactiveStyle = {\n    border: 0,\n    borderStyle: \"solid\",\n    fontSize,\n    textAlign: \"center\",\n    color: \"#dddddd\",\n  };\n\n  let subtextStyle = { fontSize: 12, minHeight: \"18px\" };\n\n  let collapsibleDiv = (\n    <div style={{ paddingRight: 9 }} onClick={() => {setSecondaryInfoVisible(true)}}>\n      <Loadable active={hits === undefined} spinner text={\"Suchen\"}>\n        <div\n          style={{\n            display: \"grid\",\n            gridGap: \"5px\",\n            gridTemplateColumns: \"repeat(3, 1fr)\",\n            verticalAlign: \"center\",\n          }}\n        >\n          {/* Trinkwasserbrunnen */}\n          <div style={hitsObject?.brunnen !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faFaucet} />\n            <div style={subtextStyle}>{(hitsObject?.brunnen !== undefined ? 'Abstand ' + hitsObject?.brunnen[0].abstand + ' m': '')}</div>\n          </div>\n          {/* Autobahnmeisterei */}\n          <div style={hitsObject?.autobahnmeisterei !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faRoad} />\n            <div style={subtextStyle}>{(hitsObject?.autobahnmeisterei !== undefined ? hitsObject?.autobahnmeisterei[0].default_name : '')}</div>\n          </div>\n          {/* Straßenmeisterei */}\n          <div style={hitsObject?.strassenmeisterei !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faRoad} />\n            <div style={subtextStyle}>{(hitsObject?.strassenmeisterei !== undefined ? hitsObject?.strassenmeisterei[0].default_name : '')}</div>\n          </div>\n          {/* BIMSchG */}\n          <div style={hitsObject?.bimsch !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faIndustry} />\n            <div style={subtextStyle}>{(hitsObject?.bimsch !== undefined ? hitsObject?.bimsch[0].default_name : '')}</div>\n          </div>\n          {/* Wasserschutzgebiete */}\n          <div style={hitsObject?.wasserschutzgebiete !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faHandHoldingWater} />\n            <div style={subtextStyle}>{(hitsObject?.wasserschutzgebiete !== undefined ? hitsObject?.wasserschutzgebiete[0].default_name : '')}</div>\n          </div>\n          {/* Verbände */}\n          <div style={hitsObject?.verbaende !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faWater} />\n            <div style={subtextStyle}>{(hitsObject?.verbaende !== undefined ? hitsObject?.verbaende[0].default_name : '')}</div>\n          </div>\n          {/* Störfallbetriebe */}\n          <div style={hitsObject?.stoerfallbetriebe !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faExclamationCircle} />\n            <div style={subtextStyle}>{(hitsObject?.stoerfallbetriebe !== undefined ? hitsObject?.stoerfallbetriebe[0].default_name : '')}</div>\n          </div>\n          {/* städt. Flurstücke */}\n          <div style={hitsObject?.stadtFlurstuecke !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faCity} />\n            <div style={subtextStyle}>{(hitsObject?.stadtFlurstuecke !== undefined ? hitsObject?.stadtFlurstuecke[0].default_name : '')}</div>\n          </div>\n          {/* Landschafts und Naturschutzgebiete */}\n          <div style={hitsObject?.schutzgebiete !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faTree} />\n            <div style={subtextStyle}>{(hitsObject?.schutzgebiete !== undefined ? hitsObject?.schutzgebiete[0].default_name : '')}</div>\n          </div>\n        </div>\n      </Loadable>\n    </div>\n  );\n  return (\n    <ResponsiveInfoBox\n      panelClick={() => {}}\n      pixelwidth={300}\n      header={header}\n      collapsedInfoBox={collapsedInfoBox}\n      setCollapsedInfoBox={setCollapsedInfoBox}\n      isCollapsible={false}\n      handleResponsiveDesign={true}\n      infoStyle={{ padding: \"0px\" }}\n      secondaryInfoBoxElements={undefined}\n      alwaysVisibleDiv={alwaysVisibleDiv}\n      collapsibleDiv={collapsibleDiv}\n      fixedRow={true}\n    />\n  );\n};\nexport default InfoBox;","import React, { useContext } from \"react\";\nimport { FeatureCollectionContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport SecondaryInfoPanelSection from \"react-cismap/topicmaps/SecondaryInfoPanelSection\";\nimport SecondaryInfo from \"react-cismap/topicmaps/SecondaryInfo\";\nconst InfoPanel = ({ hits }) => {\n\n  if (hits !== undefined) {\n    const subSections = [];\n\n    const display = (desc, value, valFunc) => {\n      if (value && valFunc === undefined && Array.isArray(value) === false) {\n        return (\n          <div>\n            <b>{desc}:</b> {value}\n          </div>\n        );\n      } else if (value && valFunc === undefined && Array.isArray(value) === true) {\n        return (\n          <div>\n            <b>{desc}:</b> {value.join(\", \")}\n          </div>\n        );\n      } else if (value && valFunc !== undefined) {\n        return (\n          <div>\n            <b>{desc}:</b> {valFunc(value)}\n          </div>\n        );\n      }\n    };\n\n    const showRawData = new URLSearchParams(window.location.href).get(\"showRawData\");\n    if (hits !== undefined) {\n      subSections.push(\n        <SecondaryInfoPanelSection\n          key='standort'\n          bsStyle='info'\n          header={\"Umweltalarm (raw data): \" + hits.length + ' Treffer'}\n        >\n          <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n            <pre>{JSON.stringify(hits, null, 2)}</pre>\n          </div>\n        </SecondaryInfoPanelSection>\n      );\n    }\n    return (\n      <SecondaryInfo\n        titleIconName='info-circle'\n        title={\"Datenblatt: \" }\n        mainSection={\n          <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n            <div>\n              {display(\"Nummer\", hits?.nummer)}\n              {display(\"Bezeichnung\", hits?.bezeichnung)}\n              {display(\"Flächengröße\", hits?.groesse, (a) => (\n                <span>\n                  {a.toLocaleString()} m² (circa{\" \"}\n                  {(Math.round((a / 10000) * 10) / 10).toLocaleString()} ha)\n                </span>\n              ))}\n              {display(\"Stadtbezirk(e)\", hits?.stadtbezirke, (sb) => sb.join(\", \"))}\n              {display(\"Quartier(e)\", hits?.quartiere, (q) => q.join(\", \"))}\n              {display(\"Eigentümer\", hits?.eigentuemer, (e) => e.join(\", \"))}\n            </div>\n          </div>\n        }\n        subSections={subSections}\n      />\n    );\n  } else {\n    return null;\n  }\n};\nexport default InfoPanel;\n","import bboxPolygon from \"@turf/bbox-polygon\";\nimport booleanIntersects from \"@turf/boolean-intersects\";\nimport turfCenter from \"@turf/center\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport { useEffect, useState, useContext } from \"react\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport { md5FetchJSON, md5FetchText } from \"react-cismap/tools/fetching\";\nimport { getGazDataForTopicIds } from \"react-cismap/tools/gazetteerHelper\";\nimport \"react-cismap/topicMaps.css\";\nimport ResponsiveInfoBox from \"react-cismap/topicmaps/ResponsiveInfoBox\";\nimport TopicMapComponent from \"react-cismap/topicmaps/TopicMapComponent\";\nimport \"./App.css\";\nimport MyMenu from \"./components/Menu\";\nimport Crosshair from \"./Crosshair\";\nimport { md5ActionFetchDAQ4Dexie, initTables } from \"./md5Fetching\";\nimport {searchForFeatures} from \"./search\"\nimport {appKey, daqKeys, db} from \"./App\";\nimport buffer from \"@turf/buffer\"\nimport circle from \"@turf/circle\"\nimport InfoBox from \"./components/InfoBox\";\nimport InfoPanel from \"./components/SecondaryInfo\";\nimport { ResponsiveTopicMapContext } from \"react-cismap/contexts/ResponsiveTopicMapContextProvider\";\n\nconst host = \"https://wupp-topicmaps-data.cismet.de\";\n\nconst getData = async (setGazData, setInfoData) => {\n  const prefix = \"GazDataForStories\";\n  const sources = {};\n\n//  sources.stoerfallbetrieb = await md5ActionFetchDAQ4Dexie(prefix, 'url', 'xxx', 'daqStoerfallBetriebeKlasse1');\n  sources.adressen = await md5FetchText(prefix, host + \"/data/3857/adressen.json\");\n  sources.bezirke = await md5FetchText(prefix, host + \"/data/3857/bezirke.json\");\n  sources.quartiere = await md5FetchText(prefix, host + \"/data/3857/quartiere.json\");\n  sources.pois = await md5FetchText(prefix, host + \"/data/3857/pois.json\");\n  sources.kitas = await md5FetchText(prefix, host + \"/data/3857/kitas.json\");\n\n  const gazData = getGazDataForTopicIds(sources, [\n    \"pois\",\n    \"kitas\",\n    \"bezirke\",\n    \"quartiere\",\n    \"adressen\",\n  ]);\n\n  setGazData(gazData);\n\n  // const ns = await md5FetchJSON(prefix, host + \"/data/3857/naturschutzgebiete.json\");\n  // const ls = await md5FetchJSON(prefix, host + \"/data/3857/landschaftsschutzgebiete.json\");\n  // for (const f of ns) {\n  //   f.crs = {\n  //     type: \"name\",\n  //     properties: {\n  //       name: \"urn:ogc:def:crs:EPSG::25832\",\n  //     },\n  //   };\n  // }\n  // for (const f of ls) {\n  //   f.crs = {\n  //     type: \"name\",\n  //     properties: {\n  //       name: \"urn:ogc:def:crs:EPSG::25832\",\n  //     },\n  //   };\n  // }\n  // setInfoData([ns, ls]);\n};\n\nfunction UmweltalarmMap() {\n  const [gazData, setGazData] = useState([]);\n  const [infoData, setInfoData] = useState([]);\n  const [hits, setHits] = useState([]);\n  const { windowSize } = useContext(ResponsiveTopicMapContext);\n\n  useEffect(() => {\n    getData(setGazData, setInfoData);\n  }, []);\n  return (\n    <div>\n      <Crosshair />\n      <TopicMapComponent\n        gazData={gazData}\n        modalMenu={<MyMenu />}\n        homeZoom={13}\n        maxZoom={22}\n        secondaryInfo={windowSize && <InfoPanel hits={hits} />}\n    \n        mappingBoundsChanged={(boundingBox) => {\n          setHits(undefined);\n          let bbox = [boundingBox.left, boundingBox.bottom, boundingBox.right, boundingBox.top];\n          let bbPoly = bboxPolygon(bbox);\n          //   console.log(\"xxx mappingBoundsChanged\", center);\n          let center = turfCenter(bbPoly);\n//          console.log(center);\n          const hits = searchForFeatures(db, daqKeys, center).then((hits)=>{\n            setHits(hits);\n          });\n        }}\n      >\n        <InfoBox hits={hits}/>\n      </TopicMapComponent>\n    </div>\n  );\n}\n\nexport default UmweltalarmMap;\n","import localforage from \"localforage\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { Alert, Button, Form, Modal } from \"react-bootstrap\";\nimport IconComp from \"react-cismap/commons/Icon\";\nimport { ResponsiveTopicMapContext } from \"react-cismap/contexts/ResponsiveTopicMapContextProvider\";\nimport { apiUrl, appKey, daqKeys, db } from \"../App\";\nimport { CACHE_JWT } from \"react-cismap/tools/fetching\";\nimport {offlineDataAvailable} from \"../search\"\nimport { FeatureCollectionDispatchContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport dayjs from \"dayjs\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\n\ndayjs.extend(customParseFormat);\n\nconst LoginForm = ({\n  setJWT = (jwt) => {\n    console.log(\"you need to set the attribute setJWT in the <Login> component\", jwt);\n  },\n  loginInfo,\n  setLoginInfo = () => {},\n}) => {\n  const { windowSize } = useContext(ResponsiveTopicMapContext);\n  const { setMetaInformation } = useContext(FeatureCollectionDispatchContext);\n  const pwFieldRef = useRef();\n  const userFieldRef = useRef();\n  const _height = windowSize?.height || 800 - 180;\n  const modalBodyStyle = {\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n    maxHeight: _height,\n  };\n  const [user, _setUser] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [cacheDataAvailable, setCacheDataAvailable] = useState(false);\n\n  window.localforage = localforage;\n  const setUser = (user) => {\n    localforage.setItem(\"@\" + appKey + \".\" + \"auth\" + \".\" + \"user\", user);\n    _setUser(user);\n  };\n\n  useEffect(() => {\n    (async () => {\n      const userInCache = await localforage.getItem(\"@\" + appKey + \".\" + \"auth\" + \".\" + \"user\");\n      const dataValueInCache = await offlineDataAvailable(db, daqKeys);\n      console.log('xxx o' + dataValueInCache);\n      console.log('xxx offData' + (dataValueInCache !== null && dataValueInCache !== undefined));\n\n      setCacheDataAvailable(dataValueInCache !== null && dataValueInCache !== undefined);\n      if (dataValueInCache !== null && dataValueInCache !== undefined) {\n        const time = dayjs(dataValueInCache, \"YYYY-MM-DD hh:mm:ss\").toDate();\n        setMetaInformation({time});      \n      }\n      if (userInCache) {\n        setUser(userInCache);\n      }\n      if (userFieldRef?.current) {\n        userFieldRef.current.focus();\n        userFieldRef.current.select();\n      }\n    })();\n  }, []);\n\n  const login = () => {\n    fetch(\"https://potenzialflaechen-online-api.cismet.de/users\", {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Basic \" + btoa(user + \"@\" + \"WUNDA_BLAU\" + \":\" + pw),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(function (response) {\n        if (response.status >= 200 && response.status < 300) {\n          response.json().then(function (responseWithJWT) {\n            const jwt = responseWithJWT.jwt;\n            setLoginInfo({\n              color: \"#79BD9A\",\n              text: \"Anmeldung erfolgreich. Daten werden geladen.\",\n            });\n            setTimeout(() => {\n              setJWT(jwt);\n              setLoginInfo();\n            }, 500);\n          });\n        } else {\n          setLoginInfo({\n            color: \"#FF8048\",\n            text: \"Bei der Anmeldung ist ein Fehler aufgetreten. \",\n          });\n          setTimeout(() => {\n            setLoginInfo();\n          }, 2500);\n        }\n      })\n      .catch(function (err) {\n        setLoginInfo({ color: \"#FF3030\", text: \"Bei der Anmeldung ist ein Fehler aufgetreten.\" });\n        setTimeout(() => {\n          setLoginInfo();\n        }, 2500);\n      });\n  };\n\n  return (\n    <Modal\n      style={{\n        zIndex: 3000000000,\n      }}\n      height='100%'\n      size='l'\n      show={true}\n      //   onHide={close}\n      keyboard={false}\n    >\n      <Modal.Header>\n        <Modal.Title>\n          <div>\n            <div>\n              <IconComp name={\"user\"} /> Anmeldung\n            </div>\n          </div>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={modalBodyStyle} id='potenzialflaechen-online' key='login'>\n        <Form>\n          <Form.Group controlId='potenzialflaechen-online-login'>\n            <Form.Label>WuNDa Benutzername</Form.Label>\n            <Form.Control\n              value={user}\n              ref={userFieldRef}\n              onChange={(e) => {\n                setUser(e.target.value);\n              }}\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  // login();\n                  if (pwFieldRef.current) {\n                    pwFieldRef.current.focus();\n                  }\n                }\n              }}\n              placeholder='Login hier eingeben'\n            />\n            {/* <Form.Text className='text-muted'>\n              We'll never share your email with anyone else.\n            </Form.Text> */}\n          </Form.Group>\n\n          <Form.Group controlId='potenzialflaechen-online-pass'>\n            <Form.Label>Passwort</Form.Label>\n            <Form.Control\n              ref={pwFieldRef}\n              value={pw}\n              onChange={(e) => {\n                setPw(e.target.value);\n              }}\n              type='password'\n              placeholder='Password'\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  login();\n                }\n              }}\n            />\n          </Form.Group>\n          <div\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              alignItems: \"baseline\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            {loginInfo?.text && (\n              <div style={{ margin: 10, color: loginInfo?.color || \"black\", maxWidth: 200 }}>\n                <b>{loginInfo?.text}</b>\n              </div>\n            )}\n            <div style={{ flexShrink: 100 }}></div>\n            <div>\n              {cacheDataAvailable === true && (\n                <Button\n                  onClick={(e) => {\n                    setLoginInfo({\n                      color: \"#79BD9A\",\n                      text: \"Alte Daten werden aus dem Cache übernommen.\",\n                    });\n                    setTimeout(() => {\n                      setJWT(CACHE_JWT);\n                      setLoginInfo();\n                    }, 500);\n                  }}\n                  style={{ margin: 5, marginTop: 30 }}\n                  variant='secondary'\n                >\n                  Offline arbeiten\n                </Button>\n              )}\n              <Button\n                onClick={(e) => {\n                  login();\n                }}\n                style={{ margin: 5, marginTop: 30 }}\n                variant='primary'\n              >\n                Anmeldung\n              </Button>\n            </div>\n          </div>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n};\nexport default LoginForm;\n","import { useContext } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport IconComp from \"react-cismap/commons/Icon\";\nimport { FeatureCollectionContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport ReactLoading from \"react-loading\";\n\nconst Waiting = ({ waiting }) => {\n  const { selectedFeature } = useContext(FeatureCollectionContext);\n\n  return (\n    <Modal\n      style={{\n        zIndex: 3000000000,\n      }}\n      height='200'\n      size='s'\n      show={waiting !== undefined}\n      //   onHide={close}\n      keyboard={false}\n    >\n      <Modal.Header>\n        <Modal.Title>\n          <IconComp name={waiting?.icon} /> {waiting?.title}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"baseline\" }}>\n          <ReactLoading type={\"cylon\"} color={selectedFeature?.properties.color} />{\" \"}\n          <div style={{ marginLeft: 20 }}>{waiting?.text}</div>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default Waiting;\n","import { useContext } from \"react\";\nimport { ResponsiveTopicMapContext } from \"react-cismap/contexts/ResponsiveTopicMapContextProvider\";\nimport { FeatureCollectionContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\n\nimport { CACHE_JWT } from \"react-cismap/tools/fetching\";\n\nconst Title = ({ logout, jwt }) => {\n  const { windowSize } = useContext(ResponsiveTopicMapContext);\n  const { metaInformation } = useContext(FeatureCollectionContext);\n  let dateInfo;\n  if (metaInformation) {\n    const t = metaInformation.time;\n    const d = new Date(t);\n    dateInfo = d.toLocaleString();\n  }\n\n  let secondaryInfo, jwtPayload, actiontext;\n  if (jwt === CACHE_JWT) {\n    secondaryInfo = \"Daten aus dem Cache\"; //;+ metaInformation.time;\n    actiontext = \"anmelden und Daten aktualisieren\";\n  } else {\n    try {\n      jwtPayload = atob(jwt.split(\".\")[1]);\n      secondaryInfo = JSON.parse(jwtPayload).sub;\n      actiontext = \"abmelden\";\n    } catch (e) {}\n  }\n  const titleContent = (\n    <div>\n      <b>Umweltalarm</b> (\n      {secondaryInfo + (dateInfo !== undefined ? \", \" + dateInfo : \"\")})\n      <div style={{ float: \"right\", paddingRight: 10 }}>\n        <a\n          style={{ color: \"#337ab7\" }}\n          onClick={() => {\n            logout();\n          }}\n        >\n          {/* <FontAwesomeIcon icon={faRandom} style={{ marginRight: 5 }} /> */}\n          {actiontext}\n        </a>\n      </div>\n    </div>\n  );\n\n  return (\n    <table\n      style={{\n        width: (windowSize?.width || 300) - 54 - 12 - 38 - 12 + \"px\",\n        height: \"30px\",\n        position: \"absolute\",\n        left: 54,\n        top: 12,\n        zIndex: 555,\n      }}\n    >\n      <tbody>\n        <tr>\n          <td\n            style={{\n              textAlign: \"center\",\n              verticalAlign: \"middle\",\n              background: \"#ffffff\",\n              color: \"black\",\n              opacity: \"0.9\",\n              paddingLeft: \"10px\",\n            }}\n          >\n            {titleContent}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default Title;\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"react-cismap/topicMaps.css\";\nimport TopicMapContextProvider from \"react-cismap/contexts/TopicMapContextProvider\";\nimport UmweltalarmMap from \"./UmweltalarmMap\";\nimport { MappingConstants } from \"react-cismap\";\nimport { getInternetExplorerVersion } from \"react-cismap/tools/browserHelper\";\nimport { defaultLayerConf } from \"react-cismap/tools/layerFactory\";\nimport { useEffect, useState } from \"react\";\nimport localforage from \"localforage\";\nimport { md5ActionFetchDAQ4Dexie, initTables, indexAnsprechpartner, indexAnsprechpartnerZustaendigkeit } from \"./md5Fetching\";\nimport LoginForm from \"./components/LoginForm\";\nimport Waiting from \"./components/Waiting\";\nimport Title from \"./components/TitleControl\";\nimport MapLibreLayer from \"react-cismap/vector/MapLibreLayer\"\n\n\nconst host = \"https://wupp-topicmaps-data.cismet.de\";\nexport const appKey = \"umweltalarm.Online.Wuppertal\";\nexport const apiUrl = \"https://potenzialflaechen-online-api.cismet.de\";\nexport const daqKeys = ['StoerfallBetriebeKlasse1', 'StoerfallBetriebeKlasse2', 'wasserverbaende', 'wasserschutzgebiete', 'autobahnmeisterei', 'landschaftsschutzgebiete', 'naturschutzgebiete', 'strassenmeisterei', 'bimschNrw', 'bimschWuppertal', 'trinkwasserbrunnen', 'stadtFlurstuecke'];\nexport const db = initTables(appKey, daqKeys);\n\n\nfunction App() {\n  let backgroundModes;\n  useEffect(() => {\n    document.title = \"Umweltalarm Wuppertal\";\n  }, []);\n\n  const [jwt, _setJWT] = useState();\n  const [loggedOut, setLoggedOut] = useState();\n  const [waiting, setWaiting] = useState();\n  const [loginInfo, setLoginInfo] = useState();\n\n  const setJWT = (jwt) => {\n    localforage.setItem(\"@\" + appKey + \".\" + \"auth\" + \".\" + \"jwt\", jwt);\n    _setJWT(jwt);\n  };\n    \n  useEffect(() => {\n    (async () => {\n      const jwtInCache = await localforage.getItem(\"@\" + appKey + \".\" + \"auth\" + \".\" + \"jwt\");\n      if (jwtInCache) {\n        setJWT(jwtInCache);\n        setLoggedOut(false);\n      } else {\n        setJWT(undefined);\n        setLoggedOut(true);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (jwt) {\n\n      for (const daqKey of daqKeys) {\n        md5ActionFetchDAQ4Dexie(appKey, apiUrl, jwt, daqKey, db)\n          .then(\n            (stoerfallResult) => {\n//              alert('drin ' + daqKey);\n            },\n            (problem) => {\n              if (problem.status === 401) {\n                setJWT(undefined);\n                setLoginInfo({ color: \"#F9D423\", text: \"Bitte melden Sie sich erneut an.\" });\n                setTimeout(() => {\n                  setLoginInfo();\n                }, 2500);\n              }\n//              setDynGazData([]);\n            }\n          )\n          .catch((e) => {\n            console.log(\"xxx error \", e);\n          });\n      }\n\n      md5ActionFetchDAQ4Dexie(appKey, apiUrl, jwt, 'ansprechpartner', db)\n      .then(\n        (stoerfallResult) => {\n          if (stoerfallResult !== undefined && Array.isArray(stoerfallResult.data)) {\n            indexAnsprechpartner(stoerfallResult.data, 'ansprechpartner', db);\n          }\n        },\n        (problem) => {\n          if (problem.status === 401) {\n            setJWT(undefined);\n            setLoginInfo({ color: \"#F9D423\", text: \"Bitte melden Sie sich erneut an.\" });\n            setTimeout(() => {\n              setLoginInfo();\n            }, 2500);\n          }\n        }\n      )\n      .catch((e) => {\n        console.log(\"xxx error \", e);\n      });\n\n      md5ActionFetchDAQ4Dexie(appKey, apiUrl, jwt, 'ansprechpartnerZustaendigkeit', db)\n      .then(\n        (stoerfallResult) => {\n          if (stoerfallResult !== undefined && Array.isArray(stoerfallResult.data)) {\n            console.log('Ansprechpartner referenz');\n            indexAnsprechpartnerZustaendigkeit(stoerfallResult.data, 'ansprechpartnerZustaendigkeit', db);\n          }\n        },\n        (problem) => {\n          if (problem.status === 401) {\n            setJWT(undefined);\n            setLoginInfo({ color: \"#F9D423\", text: \"Bitte melden Sie sich erneut an.\" });\n            setTimeout(() => {\n              setLoginInfo();\n            }, 2500);\n          }\n        }\n      )\n      .catch((e) => {\n        console.log(\"xxx error \", e);\n      });\n\n      setLoggedOut(false);\n    } else {\n      setLoggedOut(true);\n//      setDynGazData([]);\n    }\n  }, [jwt]);\n\n  if (getInternetExplorerVersion() === -1) {\n    backgroundModes = [\n      {\n        title: \"Stadtplan\",\n        mode: \"default\",\n        layerKey: \"stadtplan\",\n      },\n      {\n        title: \"Stadtplan (Vektordaten light)\",\n        mode: \"default\",\n        layerKey: \"vector\",\n      },\n\n      { title: \"Luftbildkarte\", mode: \"default\", layerKey: \"lbk\" },\n    ];\n  } else {\n    backgroundModes = [\n      {\n        title: \"Stadtplan\",\n        mode: \"default\",\n        layerKey: \"stadtplan\",\n      },\n\n      { title: \"Luftbildkarte\", mode: \"default\", layerKey: \"lbk\" },\n    ];\n  }\n  const backgroundConfigurations = {\n    lbk: {\n      layerkey: \"cismetText|trueOrtho2020@40\",\n      layerkey_: \"wupp-plan-live@100|trueOrtho2020@75|rvrSchrift@100\",\n      src: \"/images/rain-hazard-map-bg/ortho.png\",\n      title: \"Luftbildkarte\",\n    },\n    stadtplan: {\n      layerkey: \"wupp-plan-live@60\",\n      src: \"/images/rain-hazard-map-bg/citymap.png\",\n      title: \"Stadtplan\",\n    },\n    vector: {\n      layerkey: \"cismetLight\",\n      src: \"/images/rain-hazard-map-bg/citymap.png\",\n      title: \"Stadtplan\",\n    },\n  };\n\n  // const baseLayerConf = JSON.parse(JSON.stringify(defaultLayerConf));\n  // TODO problems in settings preview map wehen doing the immutable way\n  const baseLayerConf = { ...defaultLayerConf };\n\n  if (baseLayerConf.namedLayers.cismetLight == undefined) {\n    baseLayerConf.namedLayers.cismetLight = {\n      type: \"vector\",\n      style: \"https://omt.map-hosting.de/styles/cismet-light/style.json\",\n      pane: \"backgroundvectorLayers\",\n    };\n  }\n  if (baseLayerConf.namedLayers.cismetText == undefined) {\n    baseLayerConf.namedLayers.cismetText = {\n      type: \"vector\",\n      style: \"https://omt.map-hosting.de/styles/cismet-text/style.json\",\n      pane: \"backgroundlayerTooltips\",\n    };\n  }\n\n  return (\n    <TopicMapContextProvider\n      persistenceSettings={{\n        ui: [\"XappMenuVisible\", \"appMenuActiveMenuSection\", \"collapsedInfoBox\"],\n        featureCollection: [\"filterState\", \"filterMode\", \"clusteringEnabled\"],\n        responsive: [],\n        styling: [\n          \"activeAdditionalLayerKeys\",\n          \"namedMapStyle\",\n          \"selectedBackground\",\n          \"markerSymbolSize\",\n        ],\n      }}\n\n      additionalLayerConfiguration={{\n        brunnen: {\n          title: <span>Trinkwasserbrunnen</span>,\n          initialActive: true,\n          layer: (\n            <MapLibreLayer\n              key={\"brunnen\"}\n              style_=\"http://localhost:888/styles/brunnen/style.json\"\n              style=\"https://omt.map-hosting.de/styles/brunnen/style.json\"\n              pane=\"additionalLayers0\"\n            />\n          ),\n        },\n        kanal: {\n          title: <span>Kanalnetz</span>,\n          initialActive: true,\n          layer: (\n            <MapLibreLayer\n              key={\"kanal\"}\n              style_=\"http://localhost:888/styles/kanal/style.json\"\n              style=\"https://omt.map-hosting.de/styles/kanal/style.json\"\n              pane=\"additionalLayers1\"\n            />\n          ),\n        },\n        gewaesser: {\n          title: <span>Gewässernetz</span>,\n          initialActive: true,\n          layer: (\n            <MapLibreLayer\n              key={\"gewaesser\"}\n              style_=\"http://localhost:888/styles/gewaesser/style.json\"\n              style=\"https://omt.map-hosting.de/styles/gewaesser/style.json\"\n              pane=\"additionalLayers2\"\n            />\n          ),\n        },\n      }}\n\n      baseLayerConf={baseLayerConf}\n      backgroundConfigurations={backgroundConfigurations}\n      backgroundModes={backgroundModes}\n      referenceSystem={MappingConstants.crs3857}\n      mapEPSGCode='3857'\n      referenceSystemDefinition={MappingConstants.proj4crs3857def}\n      maskingPolygon='POLYGON((668010.063156992 6750719.23021889,928912.612468322 6757273.20343972,930494.610325512 6577553.43685138,675236.835570551 6571367.64964125,668010.063156992 6750719.23021889))'\n    >\n      {loggedOut && jwt === undefined && (\n        <LoginForm\n          key={\"login.\"}\n          setJWT={setJWT}\n          loginInfo={loginInfo}\n          setLoginInfo={setLoginInfo}\n        />\n      )}\n      {!loggedOut && jwt !== undefined && (\n        <Title\n          logout={() => {\n            setJWT(undefined);\n            setLoggedOut(true);\n            setLoginInfo({ color: \"#69D2E7\", text: \"Sie wurden erfolgreich abgemeldet.\" });\n            setTimeout(() => {\n              setLoginInfo();\n            }, 2500);\n          }}\n          jwt={jwt}\n        />\n      )}\n      <Waiting waiting={waiting} />\n\n      <UmweltalarmMap />\n    </TopicMapContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}