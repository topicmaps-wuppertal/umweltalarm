{"version":3,"sources":["components/InfoBox.js","version.js","components/MenuFooter.js","components/Menu.js","components/SecondaryInfo.js","Crosshair.js","md5Fetching.js","search.js","UmweltalarmMap.js","components/LoginForm.js","components/Waiting.js","components/TitleControl.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["modes","InfoBox","hits","mode","setFeatureCollectionVisible","isFeatureCollectionVisible","collapsedInfoBox","useContext","UIContext","UIDispatchContext","setCollapsedInfoBox","setSecondaryInfoVisible","hitsObject","Array","isArray","el","typ","undefined","brunnen","push","bimsch","strassenmeisterei","schutzgebiete","autobahnmeisterei","wasserschutzgebiete","verbaende","stoerfallbetriebe","stadtFlurstuecke","dienststellen","split","length","header","style","width","textAlign","verticalAlign","background","color","opacity","paddingLeft","paddingTop","paddingBottom","fontSize","activeStyle","border","borderStyle","flexGrow","inactiveStyle","subtextStyle","minHeight","gridStyle","display","gridGap","gridTemplateColumns","flexDirection","flexWrap","justifyContent","alignContent","symbols","onClick","active","spinner","text","icon","faFaucet","abstand","faIndustry","faHandHoldingWater","default_name","faExclamationCircle","faCity","faTree","ResponsiveInfoBox","panelClick","pixelwidth","isCollapsible","collapsibleStyle","handleResponsiveDesign","infoStyle","padding","alwaysVisibleDiv","collapsibleDiv","fixedRow","secondaryInfoBoxElements","Button","variant","marginBottom","faMap","APPERSION","getApplicationVersion","Footer","setAppMenuActiveMenuSection","className","scroller","scrollTo","containerId","document","title","href","target","reactCismapVersion","rel","MyMenu","ModalApplicationMenu","menuIcon","menuTitle","menuIntroduction","menuSections","DefaultSettingsPanel","skipFilterTitleSettings","skipClusteringSettings","skipSymbolsizeSetting","Section","sectionKey","sectionTitle","sectionBsStyle","sectionContent","listStyleType","marginRight","alt","src","process","margin","marginTop","ConfigurableDocBlocks","configs","getSimpleHelpForTM","menuFooter","MenuFooter","objectifyHits","hitObject","hit","ansprechpartner","firma","name","footer","getAnsprechpartnerLinks","links","tel","IconLink","tooltip","iconname","email","url","getAnsprechpartner","map","value","index","paddingRight","float","bemerkung","getDienststellen","dienststellenArray","styleParam","trim","borderBottom","getSeparator","height","backgroundColor","xcolor","InfoPanel","history","TopicMapContext","lat","URLSearchParams","location","search","get","long","showRawData","subSections","desc","valFunc","join","wasserverbaende","SecondaryInfoPanelSection","bsStyle","flurstueck","trinkwasserbrunnen","bimschWuppertal","bimschNrw","naturschutzgebiete","landschaftsschutzgebiete","StoerfallBetriebeKlasse1","StoerfallBetriebeKlasse2","str_name","hsnr","zusatz","b_firma1","anlag_bez","zone","nrw_name","nrw_nummer","sg_typ","betrieb","lage","hitsForRawDisplay","JSON","parse","stringify","geojson","hitObjectForRawDisplay","SecondaryInfo","titleIconName","Math","round","mainSection","bezeichnung","groesse","a","toLocaleString","stadtbezirke","sb","quartiere","q","eigentuemer","e","Comp","windowSize","ResponsiveTopicMapContext","position","top","zIndex","pointerEvents","left","borderRadius","md5ActionFetchDAQ4Dexie","prefix","apiUrl","jwt","daqKey","db","table","allObjects","md5InCache","md5","console","log","taskParameters","parameters","fd","FormData","append","Blob","type","time","Promise","resolve","reject","data","fetch","method","headers","Authorization","body","response","status","json","content","res","result","newData","update","id","add","indexGeometries","exception","Flatbush","tableObject","clear","geo","getBoundsFromArea","i","bulkPut","finish","changes","indexAnsprechpartner","indexAnsprechpartnerZustaendigkeit","tabelle","referenz","referenzfeld","area","bboxArray","turfBbox","nameMapping","daqTableMapping","searchForFeatures","daqKeys","geom","geomBounds","ansprechpartnerZustaendigkeit","trinkwasserbrunnenDist","bimschDist","allBimsch","allTrinkwasserbrunnen","allFlurstuecke","key","metaTable","tableObjects","otable","serIndex","pol_index","from","indizes","o","obj","geoj","booleanIntersects","distanceInMeters","getDistance","addAnsprechpartner","dienststellenOld","ansprechpartnerArray","stelle","geometry","centerGeom","turfCenter","sort","compareDist","prototype","apply","filter","arr","elA1","b","geomCenter","geomCenterCoords","coordinates","transformedGeom","proj4","defs","brunnenCenter","brunnenCoords","transformedBrunnen","turfDistance","unit","dataObject","keys","Object","found","anprechreferenz","anspr","removeNullValues","offlineDataAvailable","lastTime","host","getData","setGazData","sources","md5FetchText","adressen","bezirke","pois","kitas","gazData","getGazDataForTopicIds","convertToFeature","_item","item","opcaity","selected","crs","properties","feature","fillColor","Color","darken","fillOpacity","weight","UmweltalarmMap","loggedOut","initialised","routedMapRef","mapRef","leafletMap","leafletElement","currentZoom","getZoom","useState","setHits","searchMode","setSearchMode","featureCollection","setFeatureCollection","bbPoly","setBBPoly","useEffect","features","f","searchInWholeWindowEnabled","Crosshair","TopicMapComponent","modalMenu","homeZoom","maxZoom","secondaryInfo","locatorControl","mappingBoundsChanged","boundingBox","bbox","bottom","right","bboxPolygon","center","then","disabled","transform","faSearch","size","faSquare","dayjs","extend","customParseFormat","LoginForm","setJWT","loginInfo","setLoginInfo","setMetaInformation","FeatureCollectionDispatchContext","pwFieldRef","useRef","userFieldRef","modalBodyStyle","overflowY","overflowX","maxHeight","user","_setUser","pw","setPw","cacheDataAvailable","setCacheDataAvailable","window","localforage","setUser","setItem","appKey","getItem","userInCache","dataValueInCache","toDate","current","focus","select","login","btoa","responseWithJWT","setTimeout","catch","err","Modal","show","keyboard","Header","Title","Icon","Body","Form","Group","controlId","Label","Control","ref","onChange","onKeyPress","event","placeholder","alignItems","maxWidth","flexShrink","CACHE_JWT","Waiting","waiting","selectedFeature","FeatureCollectionContext","marginLeft","dateInfo","jwtPayload","actiontext","logout","metaInformation","t","Date","atob","sub","titleContent","Dexie","schema","version","stores","initTables","App","backgroundModes","_setJWT","setLoggedOut","setInitialised","keysChecked","newDataRetrieved","jwtInCache","stoerfallResult","problem","getInternetExplorerVersion","layerKey","baseLayerConf","defaultLayerConf","namedLayers","cismetLight","pane","cismetText","TopicMapContextProvider","persistenceSettings","ui","responsive","styling","additionalLayerConfiguration","initialActive","layer","MapLibreLayer","style_","kanal","gewaesser","backgroundConfigurations","lbk","layerkey","layerkey_","stadtplan","vector","referenceSystem","MappingConstants","crs3857","mapEPSGCode","referenceSystemDefinition","proj4crs3857def","maskingPolygon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.bfebd472.chunk.js","sourcesContent":["import ResponsiveInfoBox from \"react-cismap/topicmaps/ResponsiveInfoBox\";\nimport { useContext } from \"react\";\nimport { UIContext, UIDispatchContext } from \"react-cismap/contexts/UIContextProvider\";\nimport IconComp from \"react-cismap/commons/Icon\";\nimport {\n  faArchive,\n  faBiohazard,\n  faCity,\n  faFaucet,\n  faHandHoldingWater,\n  faIndustry,\n  faLeaf,\n  faRoad,\n  faWater,\n  faTree,\n  faExclamationCircle,\n  faMap,\n  faToggleOff,\n  faToggleOn,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Icon } from \"react-fa\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport Loadable from \"react-loading-overlay\";\nimport { Button } from \"react-bootstrap\";\n\nexport const modes = {\n  WINDOW: \"WINDOW\",\n  CENTER: \"CENTER\",\n};\nconst InfoBox = ({ hits, mode, setFeatureCollectionVisible, isFeatureCollectionVisible }) => {\n  const { collapsedInfoBox } = useContext(UIContext);\n  const { setCollapsedInfoBox, setSecondaryInfoVisible } = useContext(UIDispatchContext);\n  var hitsObject = {};\n  var flurstueckDienstStellenAnzahl = 0;\n\n  if (Array.isArray(hits)) {\n    for (var el of hits) {\n      switch (el.typ) {\n        case \"trinkwasserbrunnen\":\n          if (hitsObject.brunnen === undefined) {\n            hitsObject.brunnen = [];\n          }\n          hitsObject.brunnen.push(el);\n          break;\n        case \"bimschNrw\":\n        case \"bimschWuppertal\":\n          if (hitsObject.bimsch === undefined) {\n            hitsObject.bimsch = [];\n          }\n          hitsObject.bimsch.push(el);\n          break;\n        case \"strassenmeisterei\":\n          if (hitsObject.strassenmeisterei === undefined) {\n            hitsObject.strassenmeisterei = [];\n          }\n          hitsObject.strassenmeisterei.push(el);\n          break;\n        case \"naturschutzgebiete\":\n        case \"landschaftsschutzgebiete\":\n          if (hitsObject.schutzgebiete === undefined) {\n            hitsObject.schutzgebiete = [];\n          }\n          hitsObject.schutzgebiete.push(el);\n          break;\n        case \"autobahnmeisterei\":\n          if (hitsObject.autobahnmeisterei === undefined) {\n            hitsObject.autobahnmeisterei = [];\n          }\n          hitsObject.autobahnmeisterei.push(el);\n          break;\n        case \"wasserschutzgebiete\":\n          if (hitsObject.wasserschutzgebiete === undefined) {\n            hitsObject.wasserschutzgebiete = [];\n          }\n          hitsObject.wasserschutzgebiete.push(el);\n          break;\n        case \"wasserverbaende\":\n          if (hitsObject.verbaende === undefined) {\n            hitsObject.verbaende = [];\n          }\n          hitsObject.verbaende.push(el);\n          break;\n        case \"StoerfallBetriebeKlasse1\":\n        case \"StoerfallBetriebeKlasse2\":\n          if (hitsObject.stoerfallbetriebe === undefined) {\n            hitsObject.stoerfallbetriebe = [];\n          }\n          hitsObject.stoerfallbetriebe.push(el);\n          break;\n        case \"stadtFlurstuecke\":\n          if (hitsObject.stadtFlurstuecke === undefined) {\n            hitsObject.stadtFlurstuecke = [];\n          }\n          flurstueckDienstStellenAnzahl =\n            flurstueckDienstStellenAnzahl + el.dienststellen.split(\"#\").length;\n          hitsObject.stadtFlurstuecke.push(el);\n          break;\n      }\n    }\n  }\n\n  const header = (\n    <table style={{ width: \"100%\" }}>\n      <tbody>\n        <tr>\n          <td\n            style={{\n              textAlign: \"left\",\n              verticalAlign: \"top\",\n              background: \"grey\",\n              color: \"black\",\n              opacity: \"0.9\",\n              paddingLeft: \"4px\",\n              paddingTop: \"0px\",\n              paddingBottom: \"0px\",\n            }}\n          >\n            <span>\n              {\" \"}\n              Analyseergebnis {mode === modes.CENTER ? \"(Fadenkreuz)\" : \"(Kartenfenster)\"}:{\" \"}\n              {Array.isArray(hits) ? hits.length : \"-\"} Treffer\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n\n  let fontSize = 30;\n  let activeStyle = { border: 0, borderStyle: \"solid\", fontSize, textAlign: \"center\", flexGrow: 1 };\n  let inactiveStyle = {\n    border: 0,\n    borderStyle: \"solid\",\n    fontSize,\n    textAlign: \"center\",\n    color: \"#dddddd\",\n    flexGrow: 1,\n  };\n  let subtextStyle = { fontSize: 12, minHeight: \"18px\" };\n\n  let gridStyle = {\n    display: \"grid\",\n    gridGap: \"5px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\",\n    verticalAlign: \"center\",\n  };\n  if (collapsedInfoBox === true) {\n    fontSize = 23;\n    subtextStyle = { fontSize: 9, minHeight: \"15px\" };\n    gridStyle = {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"center\",\n      verticalAlign: \"center\",\n      alignContent: \"space-around\",\n    };\n  }\n\n  let symbols = (\n    <div\n      onClick={() => {\n        setSecondaryInfoVisible(true);\n      }}\n    >\n      <Loadable active={hits === undefined} spinner text={\"Suchen\"}>\n        <div style={gridStyle}>\n          {/* Trinkwasserbrunnen */}\n          <div style={hitsObject?.brunnen !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faFaucet} />\n            <div style={subtextStyle}>\n              {hitsObject?.brunnen !== undefined\n                ? hitsObject?.brunnen[0].abstand +\n                  \" m\" +\n                  (hitsObject?.brunnen.length > 1\n                    ? \" (+\" + (hitsObject?.brunnen.length - 1) + \")\"\n                    : \"\")\n                : \"\"}\n            </div>\n          </div>\n          {/* Autobahnmeisterei */}\n          {/* <div style={hitsObject?.autobahnmeisterei !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faRoad} />\n            <div style={subtextStyle}>{(hitsObject?.autobahnmeisterei !== undefined ? hitsObject?.autobahnmeisterei[0].default_name : '')}</div>\n          </div> */}\n          {/* Straßenmeisterei */}\n          {/* <div style={hitsObject?.strassenmeisterei !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faRoad} />\n            <div style={subtextStyle}>{(hitsObject?.strassenmeisterei !== undefined ? hitsObject?.strassenmeisterei[0].default_name : '')}</div>\n          </div> */}\n          {/* BIMSchG */}\n          <div style={hitsObject?.bimsch !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faIndustry} />\n            <div style={subtextStyle}>\n              {hitsObject?.bimsch !== undefined\n                ? (hitsObject?.bimsch[0].typ === \"bimschNrw\" ? \"BRD - \" : \"UIB - \") +\n                  hitsObject?.bimsch[0].abstand +\n                  \" m\" +\n                  (hitsObject?.bimsch.length > 1\n                    ? \" (+\" + (hitsObject?.bimsch.length - 1) + \")\"\n                    : \"\")\n                : \"\"}\n            </div>\n          </div>\n          {/* Wasserschutzgebiete */}\n          <div style={hitsObject?.wasserschutzgebiete !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faHandHoldingWater} />\n            <div style={subtextStyle}>\n              {hitsObject?.wasserschutzgebiete !== undefined\n                ? \"Zone: \" +\n                  hitsObject?.wasserschutzgebiete[0].default_name +\n                  (hitsObject?.wasserschutzgebiete.length > 1\n                    ? \" (+\" + (hitsObject?.wasserschutzgebiete.length - 1) + \")\"\n                    : \"\")\n                : \"\"}\n            </div>\n          </div>\n          {/* Verbände */}\n          {/* <div style={hitsObject?.verbaende !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faWater} />\n            <div style={subtextStyle}>\n              {hitsObject?.verbaende !== undefined ? hitsObject?.verbaende[0].default_name : \"\"}\n            </div>\n          </div> */}\n          {/* Störfallbetriebe */}\n          <div style={hitsObject?.stoerfallbetriebe !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faExclamationCircle} />\n            <div style={subtextStyle}>\n              {hitsObject?.stoerfallbetriebe !== undefined\n                ? hitsObject?.stoerfallbetriebe[0].default_name +\n                  (hitsObject?.stoerfallbetriebe[0].typ === \"StoerfallBetriebeKlasse1\"\n                    ? \"-A1\"\n                    : \"-A2\") +\n                  (hitsObject?.stoerfallbetriebe.length > 1\n                    ? \" (+\" + (hitsObject?.stoerfallbetriebe.length - 1) + \")\"\n                    : \"\")\n                : \"\"}\n            </div>\n          </div>\n          {/* städt. Flurstücke */}\n          <div style={hitsObject?.stadtFlurstuecke !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faCity} />\n            <div style={subtextStyle}>\n              {hitsObject?.stadtFlurstuecke !== undefined\n                ? hitsObject?.stadtFlurstuecke[0].default_name.split(\"#\")[0] +\n                  (hitsObject?.stadtFlurstuecke.length > 1\n                    ? \" (+\" + (hitsObject?.stadtFlurstuecke.length - 1) + \")\"\n                    : \"\")\n                : //                ? hitsObject?.stadtFlurstuecke[0].default_name + (hitsObject?.stadtFlurstuecke.length > 1 ? ' (+' + (hitsObject?.stadtFlurstuecke.length - 1) + ')' : '')\n                  \"\"}\n            </div>\n          </div>\n          {/* Landschafts und Naturschutzgebiete */}\n          <div style={hitsObject?.schutzgebiete !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faTree} />\n            <div style={subtextStyle}>\n              {hitsObject?.schutzgebiete !== undefined\n                ? (hitsObject?.schutzgebiete[0].typ === \"naturschutzgebiete\" ? \"NSG\" : \"LSG\") +\n                  (hitsObject?.schutzgebiete.length > 1\n                    ? \" (+\" + (hitsObject?.schutzgebiete.length - 1) + \")\"\n                    : \"\")\n                : \"\"}\n            </div>\n          </div>\n        </div>\n      </Loadable>\n    </div>\n  );\n  return (\n    <ResponsiveInfoBox\n      panelClick={() => {}}\n      pixelwidth={300}\n      header={header}\n      collapsedInfoBox={collapsedInfoBox}\n      setCollapsedInfoBox={setCollapsedInfoBox}\n      isCollapsible={true}\n      collapsibleStyle={{ paddingLeft: 0 }}\n      handleResponsiveDesign={true}\n      infoStyle={{ padding: \"0px\" }}\n      alwaysVisibleDiv={collapsedInfoBox ? symbols : null}\n      collapsibleDiv={!collapsedInfoBox ? symbols : null}\n      fixedRow={true}\n      secondaryInfoBoxElements={[\n        <div>\n          <Button\n            variant={isFeatureCollectionVisible ? \"success\" : \"secondary\"}\n            style={{ marginBottom: 5 }}\n            onClick={() => {\n              setFeatureCollectionVisible(!isFeatureCollectionVisible);\n            }}\n          >\n            <FontAwesomeIcon icon={faMap} />\n          </Button>\n        </div>,\n      ]}\n    />\n  );\n};\nexport default InfoBox;\n","const APPERSION = \"0.7.21\";\nconst APPHASH = \"#6a89bede1ac1b54226efd8507a6c0f01c6095e6a\";\n\nexport const getApplicationVersion = () => {\n  /*eslint-disable no-useless-concat*/\n  if (APPERSION === \"%APPLICATION\" + \"_\" + \"VERSION%\") {\n    return \"dev-hot-reload\";\n  } else {\n    return APPERSION;\n  }\n};\nexport const getApplicationHash = () => {\n  if (APPHASH === \"%APPLICATION\" + \"_\" + \"HASH%\") {\n    return \"#dev-hot-reload\";\n  } else {\n    return APPHASH;\n  }\n};\n","import { useContext } from \"react\";\nimport { UIDispatchContext } from \"react-cismap/contexts/UIContextProvider\";\nimport { version as reactCismapVersion } from \"react-cismap/meta\";\nimport { scroller } from \"react-scroll\";\nimport { getApplicationVersion } from \"../version\";\n\nconst Footer = () => {\n  const { setAppMenuActiveMenuSection } = useContext(UIDispatchContext);\n\n  return (\n    <div style={{ fontSize: \"11px\" }}>\n      <b>Hintergrundkarten</b>: Stadtkarte 2.0 © RVR | True Orthophoto 2020 © Stadt Wuppertal |\n      Openmaptiles basierte Vectorkarte (hosted by cismet){\" \"}\n      <a\n        className='pleaseRenderAsLink'\n        onClick={() => {\n          setAppMenuActiveMenuSection(\"help\");\n          scroller.scrollTo(\"Datengrundlage\", { containerId: \"myMenu\" });\n        }}\n      >\n        (Details und Nutzungsbedingungen)\n      </a>\n      <br />\n      <div>\n        <b>\n          {document.title} v{getApplicationVersion()}\n        </b>\n        :{\" \"}\n        <a href='https://cismet.de/' target='_cismet'>\n          cismet GmbH\n        </a>{\" \"}\n        auf Basis von{\" \"}\n        <a href='http://leafletjs.com/' target='_more'>\n          Leaflet\n        </a>{\" \"}\n        und{\" \"}\n        <a href='https://cismet.de/#refs' target='_cismet'>\n          cids | react-cismap v{reactCismapVersion}\n        </a>{\" \"}\n        |{\" \"}\n        <a\n          target='_blank'\n          rel='noopener noreferrer'\n          href='https://cismet.de/datenschutzerklaerung.html'\n        >\n          Datenschutzerklärung (Privacy Policy)\n        </a>\n      </div>\n    </div>\n  );\n};\nexport default Footer;\n","import { useContext } from \"react\";\nimport { UIDispatchContext } from \"react-cismap/contexts/UIContextProvider\";\nimport { getSimpleHelpForTM } from \"react-cismap/tools/uiHelper\";\nimport ConfigurableDocBlocks from \"react-cismap/topicmaps/ConfigurableDocBlocks\";\nimport DefaultSettingsPanel from \"react-cismap/topicmaps/menu/DefaultSettingsPanel\";\nimport ModalApplicationMenu from \"react-cismap/topicmaps/menu/ModalApplicationMenu\";\nimport Section from \"react-cismap/topicmaps/menu/Section\";\nimport MenuFooter from \"./MenuFooter\";\n\nconst MyMenu = () => {\n  const { setAppMenuActiveMenuSection } = useContext(UIDispatchContext);\n  const simpleHelp = undefined;\n  return (\n    <ModalApplicationMenu\n      menuIcon={\"bars\"}\n      menuTitle={\"Einstellungen und Kompaktanleitung\"}\n      menuIntroduction={\n        <span>\n          Über <strong>Einstellungen</strong> können Sie die Darstellung der Hintergrundkarte und\n          der Objekte an Ihre Vorlieben anpassen. Wählen Sie <strong>Kompaktanleitung</strong> für\n          detailliertere Bedienungsinformationen.enungsinformationen.\n        </span>\n      }\n      menuSections={[\n        <DefaultSettingsPanel\n          key='settings'\n          skipFilterTitleSettings={true}\n          skipClusteringSettings={true}\n          skipSymbolsizeSetting={true}\n        />,\n        <Section\n          key='legend'\n          sectionKey='legend'\n          sectionTitle='Legende der Fachdaten'\n          sectionBsStyle='info'\n          sectionContent={\n            <div>\n              <ul style={{ listStyleType: \"none\" }}>\n                <li>\n                  <img\n                    style={{ padding: 5, marginRight: 15 }}\n                    width='50px'\n                    alt='Legendenbild'\n                    src={process.env.PUBLIC_URL + \"/images/Legende_Wupperverband.png\"}\n                  ></img>\n                  Gewässer Wupperverband\n                </li>\n                <li>\n                  <img\n                    style={{ padding: 5, marginRight: 15 }}\n                    width='50px'\n                    alt='Legendenbild'\n                    src={process.env.PUBLIC_URL + \"/images/Legende_BRWasserverband.png\"}\n                  ></img>\n                  Gewässer Bergisch-Rheinischer Wasserverband / Ruhrverband\n                </li>\n                <li>\n                  <img\n                    style={{ padding: 5, marginRight: 15 }}\n                    width='50px'\n                    alt='Legendenbild'\n                    src={process.env.PUBLIC_URL + \"/images/Legende_Verrohrung.png\"}\n                  ></img>\n                  Gewässerverrohrungen\n                </li>\n                <li>\n                  <img\n                    style={{ padding: 5, marginRight: 15 }}\n                    width='50px'\n                    alt='Legendenbild'\n                    src={process.env.PUBLIC_URL + \"/images/Legende_Schmutzkanal.png\"}\n                  ></img>\n                  Schmutzwasserkanal\n                </li>\n                <li>\n                  <img\n                    style={{ padding: 5, marginRight: 15 }}\n                    width='50px'\n                    alt='Legendenbild'\n                    src={process.env.PUBLIC_URL + \"/images/Legende_Regenkanal.png\"}\n                  ></img>\n                  Regenwasserkanal\n                </li>\n                <li>\n                  <img\n                    style={{ padding: 5, marginRight: 15 }}\n                    width='50px'\n                    alt='Legendenbild'\n                    src={process.env.PUBLIC_URL + \"/images/Legende_Mischkanal.png\"}\n                  ></img>\n                  Mischwasserkanal\n                </li>\n                <li>\n                  <img\n                    style={{ padding: 5, marginRight: 15 }}\n                    width='50px'\n                    alt='Legendenbild'\n                    src={process.env.PUBLIC_URL + \"/images/Legende_Privatkanal.png\"}\n                  ></img>\n                  Privatkanal\n                </li>\n                <li>\n                  <img\n                    style={{ padding: 5, marginRight: 15 }}\n                    width='50px'\n                    alt='Legendenbild'\n                    src={process.env.PUBLIC_URL + \"/images/Legende_Fliessrichtung.png\"}\n                  ></img>\n                  Fließrichtungspfeil (jeweils in der Farbe des zugehörigen Kanalnetzes)\n                </li>\n                <li>\n                  <img\n                    style={{ padding: 5, marginRight: 15 }}\n                    width='50px'\n                    alt='Legendenbild'\n                    src={process.env.PUBLIC_URL + \"/images/Legende_Schachtdeckel.png\"}\n                  ></img>\n                  Schachtdeckel (jeweils in der Farbe des zugehörigen Kanalnetzes)\n                </li>\n                <li>\n                  <img\n                    style={{ padding: 5, margin: 10, marginRight: 24, marginTop: 10 }}\n                    width='30px'\n                    alt='Legendenbild'\n                    src={process.env.PUBLIC_URL + \"/images/Legende_Trinkwasserbrunnen.png\"}\n                  ></img>\n                  Trinkwasserbrunnen\n                </li>\n              </ul>\n            </div>\n          }\n        />,\n        <Section\n          key='help'\n          sectionKey='help'\n          sectionTitle='Kompaktanleitung'\n          sectionBsStyle='default'\n          sectionContent={\n            <ConfigurableDocBlocks configs={getSimpleHelpForTM(document.title, simpleHelp)} />\n          }\n        />,\n      ]}\n      menuFooter={<MenuFooter />}\n    />\n  );\n};\nexport default MyMenu;\n","import React, { useContext } from \"react\";\nimport { FeatureCollectionContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport SecondaryInfoPanelSection from \"react-cismap/topicmaps/SecondaryInfoPanelSection\";\nimport SecondaryInfo from \"react-cismap/topicmaps/SecondaryInfo\";\nimport { TopicMapContext } from \"react-cismap/contexts/TopicMapContextProvider\";\nimport IconLink from \"react-cismap/commons/IconLink\";\nimport { getApplicationVersion } from \"../version\";\nimport { version as reactCismapVersion } from \"react-cismap/meta\";\n\nconst objectifyHits = (hits) => {\n  const hitObject = {};\n\n  // const testAnsprechpartner = {\n  //   organisation: \"cismet GmbH\",\n  //   name: \"Thorsten Hell\",\n  //   email: \"th@cismet.de\",\n  //   tel: \"0681 965901 20\",\n  //   bemerkung: \"nur zum testen\",\n  // };\n  if (hits) {\n    for (const hit of hits) {\n      //      hit.ansprechpartner = testAnsprechpartner;\n      if (hit.ansprechpartner === undefined) {\n        hit.ansprechpartner = { firma: \"\", name: \"\" };\n      }\n      if (hitObject[hit.typ]) {\n        hitObject[hit.typ].push(hit);\n      } else {\n        hitObject[hit.typ] = [hit];\n      }\n    }\n  }\n  return hitObject;\n};\n\nconst footer = (\n  <div style={{ fontSize: \"11px\" }}>\n    <div>\n      <b>\n        {document.title} v{getApplicationVersion()}\n      </b>\n      :{\" \"}\n      <a href='https://cismet.de/' target='_cismet'>\n        cismet GmbH\n      </a>{\" \"}\n      auf Basis von{\" \"}\n      <a href='http://leafletjs.com/' target='_more'>\n        Leaflet\n      </a>{\" \"}\n      und{\" \"}\n      <a href='https://cismet.de/#refs' target='_cismet'>\n        cids | react-cismap v{reactCismapVersion}\n      </a>{\" \"}\n      |{\" \"}\n      <a\n        target='_blank'\n        rel='noopener noreferrer'\n        href='https://cismet.de/datenschutzerklaerung.html'\n      >\n        Datenschutzerklärung (Privacy Policy)\n      </a>\n    </div>\n  </div>\n);\n\nconst getAnsprechpartnerLinks = (ansprechpartner) => {\n  let links = [];\n  if (ansprechpartner.tel) {\n    links.push(\n      <span style={{ padding: 4 }}>\n        <IconLink\n          key={`IconLink.tel`}\n          tooltip='Ansprechpartner Anrufen'\n          href={\"tel:\" + ansprechpartner.tel}\n          iconname='phone'\n        />\n      </span>\n    );\n  }\n  if (ansprechpartner.email) {\n    links.push(\n      <span style={{ padding: 4 }}>\n        <IconLink\n          key={`IconLink.email`}\n          tooltip='E-Mail an Ansprechpartner schreiben'\n          href={\"mailto:\" + ansprechpartner.email}\n          iconname='envelope-square'\n          target='_blank'\n        />\n      </span>\n    );\n  }\n  if (ansprechpartner.url) {\n    links.push(\n      <span style={{ padding: 4 }}>\n        <IconLink\n          key={`IconLink.web`}\n          tooltip='Webseite'\n          href={ansprechpartner.url}\n          target='_blank'\n          iconname='external-link-square'\n        />\n      </span>\n    );\n  }\n  return links;\n};\n\nconst getAnsprechpartner = (ansprechpartner) => {\n  if (Array.isArray(ansprechpartner)) {\n    return (\n      <div>\n        {ansprechpartner.map((value, index) => {\n          return (\n            <div key={\"ansprech_\" + index}>\n              {index > 0 && <br></br>}\n              {/* <div style={{paddingLeft: \"auto\", paddingRight: \"auto\"}}>\n            <b>Ansprechpartner</b>\n          </div> */}\n              <div\n                style={{\n                  paddingLeft: 10,\n                  paddingRight: 10,\n                  float: \"right\",\n                  paddingBottom: \"5px\",\n                }}\n              >\n                {getAnsprechpartnerLinks(value)}\n              </div>\n              <div>{value.firma}</div>\n              <div>{value.name}</div>\n              <div>{value.bemerkung}</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        {/* <div style={{paddingLeft: \"auto\", paddingRight: \"auto\"}}>\n            <b>Ansprechpartner</b>\n          </div> */}\n        <div\n          style={{\n            paddingLeft: 10,\n            paddingRight: 10,\n            float: \"right\",\n            paddingBottom: \"5px\",\n          }}\n        >\n          {getAnsprechpartnerLinks(ansprechpartner)}\n        </div>\n        <div>{ansprechpartner.firma}</div>\n        <div>{ansprechpartner.name}</div>\n        <div>{ansprechpartner.bemerkung}</div>\n      </div>\n    );\n  }\n};\n\nconst getDienststellen = (dienststellen, ansprechpartner) => {\n  var dienststellenArray = dienststellen.split(\"#\");\n\n  return (\n    <span>\n      {dienststellenArray.map((value, index) => {\n        var styleParam =\n          value === ansprechpartner.firma.trim() && dienststellenArray.length > 1\n            ? { borderBottom: \"1px solid black\" }\n            : {};\n\n        return (\n          <span style={styleParam}>\n            {index > 0 ? \", \" : \"\"}\n            {value}\n          </span>\n        );\n      })}\n    </span>\n  );\n};\n\nconst getSeparator = (name) => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"12px\",\n        borderBottom: \"1px solid #eeeeee\",\n        textAlign: \"center\",\n        marginBottom: \"15px\",\n        marginTop: \"5px\",\n      }}\n    >\n      <span\n        style={{ fontSize: \"16px\", backgroundColor: \"#FFFFFF\", xcolor: \"#aaa\", padding: \"0 10px\" }}\n      >\n        {name}\n      </span>\n    </div>\n  );\n};\n\nconst getNewDistance = (distance, steps) => {\n  if (distance % steps == 0) {\n    return distance;\n  } else {\n    return steps - (distance % steps) + distance;\n  }\n};\n\nconst InfoPanel = ({ hits }) => {\n  const { history } = useContext(TopicMapContext);\n  const lat = new URLSearchParams(history.location.search).get(\"lat\");\n  const long = new URLSearchParams(history.location.search).get(\"lng\");\n  const showRawData = new URLSearchParams(history.location.search).get(\"showRawData\") !== null;\n\n  const hitObject = objectifyHits(hits);\n\n  if (hits !== undefined) {\n    const subSections = [];\n\n    const display = (desc, value, valFunc) => {\n      if (value && valFunc === undefined && Array.isArray(value) === false) {\n        return (\n          <div>\n            <b>{desc}:</b> {value}\n          </div>\n        );\n      } else if (value && valFunc === undefined && Array.isArray(value) === true) {\n        return (\n          <div>\n            <b>{desc}:</b> {value.join(\", \")}\n          </div>\n        );\n      } else if (value && valFunc !== undefined) {\n        return (\n          <div>\n            <b>{desc}:</b> {valFunc(value)}\n          </div>\n        );\n      }\n    };\n\n    if (hits !== undefined) {\n      if (\n        hitObject.wasserverbaende ||\n        hitObject.autobahnmeisterei ||\n        hitObject.strassenmeisterei ||\n        hitObject.stadtFlurstuecke\n      ) {\n        subSections.push(\n          <SecondaryInfoPanelSection key='standort' bsStyle='success' header={\"Zuständigkeiten\"}>\n            {hitObject.wasserverbaende && getSeparator(\"Wasserverband\")}\n\n            {hitObject.wasserverbaende &&\n              hitObject.wasserverbaende.map((value, index) => {\n                return (\n                  <div key={\"wasserverbaende_\" + index}>\n                    {value.ansprechpartner && getAnsprechpartner(value.ansprechpartner)}\n                  </div>\n                );\n              })}\n\n            {hitObject.autobahnmeisterei && getSeparator(\"Autobahnmeisterei\")}\n            {/* mehrere möglich*/}\n            {hitObject.autobahnmeisterei &&\n              hitObject.autobahnmeisterei.map((value, index) => {\n                return (\n                  <div key={\"autm_\" + index}>\n                    {index > 0 && <br></br>}\n                    {value.ansprechpartner && getAnsprechpartner(value.ansprechpartner)}\n                  </div>\n                );\n              })}\n\n            {hitObject.strassenmeisterei && getSeparator(\"Straßenmeisterei\")}\n            {hitObject.strassenmeisterei && (\n              <div>\n                {hitObject.strassenmeisterei[0].ansprechpartner &&\n                  getAnsprechpartner(hitObject.strassenmeisterei[0].ansprechpartner)}\n              </div>\n            )}\n\n            {hitObject.stadtFlurstuecke && getSeparator(\"Stadt Wuppertal\")}\n            {hitObject.stadtFlurstuecke && hitObject.stadtFlurstuecke.length > 1 && (\n              <div>\n                <div>\n                  Es wurden {hitObject.stadtFlurstuecke.length} Flurstücke gefunden. Folgend wird das Flurstück mit dem geringsten Abstand zur Mitte angezeigt.\n                </div>\n                <br></br>\n                <div>\n                  <div>\n                    <b>Flurstück: </b>\n                    {hitObject.stadtFlurstuecke[0].flurstueck}\n                  </div>\n                  <div>\n                    {hitObject.stadtFlurstuecke[0].dienststellen.split(\"#\").length > 1 && <b>Dienststellen: </b>}\n                    {hitObject.stadtFlurstuecke[0].dienststellen.split(\"#\").length <= 1 && <b>Dienststelle: </b>}\n                    {getDienststellen(\n                      hitObject.stadtFlurstuecke[0].dienststellen,\n                      Array.isArray(hitObject.stadtFlurstuecke[0].ansprechpartner)\n                        ? hitObject.stadtFlurstuecke[0].ansprechpartner[0]\n                        : hitObject.stadtFlurstuecke[0].ansprechpartner\n                    )}\n                    {/* {value.dienststellen.replace('#', ', ')} */}\n                  </div>\n                  <br />\n                  {hitObject.stadtFlurstuecke[0].ansprechpartner &&\n                    getAnsprechpartner(\n                      Array.isArray(hitObject.stadtFlurstuecke[0].ansprechpartner)\n                        ? hitObject.stadtFlurstuecke[0].ansprechpartner[0]\n                        : hitObject.stadtFlurstuecke[0].ansprechpartner\n                    )}\n                </div>\n              </div>\n          )}\n            {hitObject.stadtFlurstuecke &&\n              hitObject.stadtFlurstuecke.length === 1 &&\n              hitObject.stadtFlurstuecke.map((value, index) => {\n                return (\n                  <div key={\"stadtFlurstuecke_\" + index}>\n                    {index > 0 && <br></br>}\n                    <div>\n                      <b>Flurstück: </b>\n                      {value.flurstueck}\n                    </div>\n                    <div>\n                      {value.dienststellen.split(\"#\").length > 1 && <b>Dienststellen: </b>}\n                      {value.dienststellen.split(\"#\").length <= 1 && <b>Dienststelle: </b>}\n                      {getDienststellen(\n                        value.dienststellen,\n                        Array.isArray(value.ansprechpartner)\n                          ? value.ansprechpartner[0]\n                          : value.ansprechpartner\n                      )}\n                      {/* {value.dienststellen.replace('#', ', ')} */}\n                    </div>\n                    <br />\n                    {value.ansprechpartner &&\n                      getAnsprechpartner(\n                        Array.isArray(value.ansprechpartner)\n                          ? value.ansprechpartner[0]\n                          : value.ansprechpartner\n                      )}\n                  </div>\n                );\n              })}\n          </SecondaryInfoPanelSection>\n        );\n      }\n\n      if (\n        hitObject.trinkwasserbrunnen ||\n        hitObject.bimschWuppertal ||\n        hitObject.bimschNrw ||\n        hitObject.wasserschutzgebiete ||\n        hitObject.naturschutzgebiete ||\n        hitObject.landschaftsschutzgebiete ||\n        hitObject.StoerfallBetriebeKlasse1 ||\n        hitObject.StoerfallBetriebeKlasse2\n      ) {\n        var distance = null;\n\n        subSections.push(\n          <SecondaryInfoPanelSection\n            key='standort'\n            bsStyle='primary'\n            header={\"Schutzgebiete und Anlagen\"}\n          >\n            {hitObject.trinkwasserbrunnen && getSeparator(\"Trinkwasserbrunnen\")}\n\n            {hitObject.trinkwasserbrunnen &&\n              hitObject.trinkwasserbrunnen.map((value, index) => {\n                return (\n                  <div key={\"trinkwasserbrunnen_\" + index}>\n                    {index > 0 && <br></br>}\n                    <div>\n                      <b>Abstand: </b>\n                      {value.abstand} m\n                    </div>\n                    <div>\n                      <b>Adresse: </b>\n                      {value.str_name + \" \" + value.hsnr + (value.zusatz ? value.zusatz : \"\")}\n                    </div>\n                    <br />\n                    {value.ansprechpartner && getAnsprechpartner(value.ansprechpartner)}\n                  </div>\n                );\n              })}\n            {hitObject.bimschWuppertal && getSeparator(\"BImschG-Anlage Wuppertal\")}\n\n            {hitObject.bimschWuppertal &&\n              hitObject.bimschWuppertal.map((value, index) => {\n                return (\n                  <div key={\"bimschWupp_\" + index}>\n                    {index > 0 && <br></br>}\n                    <div>\n                      <b>Betrieb: </b>\n                      {value.b_firma1}\n                    </div>\n                    <div>\n                      <b>Anlage: </b>\n                      {value.anlag_bez}\n                    </div>\n                    <br />\n                    {value.ansprechpartner && getAnsprechpartner(value.ansprechpartner)}\n                  </div>\n                );\n              })}\n\n            {hitObject.bimschNrw && getSeparator(\"BImschG-Anlage NRW\")}\n\n            {hitObject.bimschNrw &&\n              hitObject.bimschNrw.map((value, index) => {\n                return (\n                  <div key={\"bimschNrw_\" + index}>\n                    {index > 0 && <br></br>}\n                    <div>\n                      <b>Betrieb: </b>\n                      {value.b_firma1}\n                    </div>\n                    <div>\n                      <b>Anlage: </b>\n                      {value.anlag_bez}\n                    </div>\n                    <br />\n                    {value.ansprechpartner && getAnsprechpartner(value.ansprechpartner)}\n                  </div>\n                );\n              })}\n\n            {hitObject.wasserschutzgebiete && getSeparator(\"Wasserschutzgebiet\")}\n\n            {/* mehrere möglich*/}\n            {hitObject.wasserschutzgebiete &&\n              hitObject.wasserschutzgebiete.map((value, index) => {\n                return (\n                  <div key={\"wasser_\" + index}>\n                    {index > 0 && <br></br>}\n                    {value.name && <div>{value.name}</div>}\n                    <div>\n                      <b>Schutzzone: </b>\n                      {value.zone}\n                    </div>\n                    <br />\n                    {value.ansprechpartner && getAnsprechpartner(value.ansprechpartner)}\n                  </div>\n                );\n              })}\n\n            {hitObject.naturschutzgebiete && getSeparator(\"Naturschutzgebiet\")}\n\n            {/* mehrere möglich*/}\n            {hitObject.naturschutzgebiete &&\n              hitObject.naturschutzgebiete.map((value, index) => {\n                return (\n                  <div key={\"natur_\" + index}>\n                    {index > 0 && <br></br>}\n                    <div>{value.nrw_name}</div>\n                    <div>\n                      <b>Objektkennung: </b>\n                      {value.nrw_nummer}\n                    </div>\n                    <br />\n                    {value.ansprechpartner && getAnsprechpartner(value.ansprechpartner)}\n                  </div>\n                );\n              })}\n\n            {hitObject.landschaftsschutzgebiete && getSeparator(\"Landschaftsschutzgebiet\")}\n\n            {/* mehrere möglich*/}\n            {hitObject.landschaftsschutzgebiete &&\n              hitObject.landschaftsschutzgebiete.map((value, index) => {\n                return (\n                  <div key={\"landschaft_\" + index}>\n                    {index > 0 && <br></br>}\n                    <div>\n                      <b>Schutzgebietstyp: </b>\n                      {value.sg_typ === \"LS\" ? \"Landschaftsschutzgebiet\" : value.sg_typ}\n                    </div>\n                    <br />\n                    {value.ansprechpartner && getAnsprechpartner(value.ansprechpartner)}\n                  </div>\n                );\n              })}\n\n            {hitObject.StoerfallBetriebeKlasse1 && getSeparator(\"Störfallbetrieb Abstandsklasse 1\")}\n\n            {hitObject.StoerfallBetriebeKlasse1 &&\n              hitObject.StoerfallBetriebeKlasse1.map((value, index) => {\n                return (\n                  <div key={\"stoer1_\" + index}>\n                    {index > 0 && <br></br>}\n                    <div>\n                      <b>Betrieb: </b>\n                      {value.betrieb}\n                    </div>\n                    <div>\n                      <b>Lage: </b>\n                      {value.lage}\n                    </div>\n                    <br />\n                    {value.ansprechpartner && getAnsprechpartner(value.ansprechpartner)}\n                  </div>\n                );\n              })}\n\n            {hitObject.StoerfallBetriebeKlasse2 && getSeparator(\"Störfallbetrieb Abstandsklasse 2\")}\n\n            {hitObject.StoerfallBetriebeKlasse2 &&\n              hitObject.StoerfallBetriebeKlasse2.map((value, index) => {\n                return (\n                  <div key={\"stoer2_\" + index}>\n                    {index > 0 && <br></br>}\n                    <div>\n                      <b>Betrieb: </b>\n                      {value.betrieb}\n                    </div>\n                    <div>\n                      <b>Lage: </b>\n                      {value.lage}\n                    </div>\n                    <br />\n                    {value.ansprechpartner && getAnsprechpartner(value.ansprechpartner)}\n                  </div>\n                );\n              })}\n          </SecondaryInfoPanelSection>\n        );\n      }\n\n      if (showRawData) {\n        //remove the geometries\n        const hitsForRawDisplay = JSON.parse(JSON.stringify(hits));\n\n        for (const hit of hitsForRawDisplay) {\n          delete hit.geojson;\n        }\n\n        const hitObjectForRawDisplay = objectifyHits(hitsForRawDisplay);\n\n        subSections.push(\n          <SecondaryInfoPanelSection\n            key='standort'\n            bsStyle='info'\n            header={\"Trefferobjekte (Raw Data ohne Geometrie): \" + hits.length + \" Treffer\"}\n          >\n            <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n              <pre key='hitObject'>{JSON.stringify(hitObjectForRawDisplay, null, 2)}</pre>\n              {/* <pre key='hits'>{JSON.stringify(hitsForRawDisplay, null, 2)}</pre> */}\n            </div>\n          </SecondaryInfoPanelSection>\n        );\n      }\n    }\n    return (\n      <SecondaryInfo\n        titleIconName='info-circle'\n        title={\n          \"Datenblatt zu: \" +\n          Math.round(lat * 10000) / 10000 +\n          \", \" +\n          Math.round(long * 1000) / 1000\n        }\n        mainSection={\n          <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n            <div>\n              Die Suche an der angegebene Position hat insgesamt {hits.length} Treffer ergeben:\n              {display(\"Bezeichnung\", hits?.bezeichnung)}\n              {display(\"Flächengröße\", hits?.groesse, (a) => (\n                <span>\n                  {a.toLocaleString()} m² (circa{\" \"}\n                  {(Math.round((a / 10000) * 10) / 10).toLocaleString()} ha)\n                </span>\n              ))}\n              {display(\"Stadtbezirk(e)\", hits?.stadtbezirke, (sb) => sb.join(\", \"))}\n              {display(\"Quartier(e)\", hits?.quartiere, (q) => q.join(\", \"))}\n              {display(\"Eigentümer\", hits?.eigentuemer, (e) => e.join(\", \"))}\n            </div>\n          </div>\n        }\n        subSections={subSections}\n        footer={footer}\n      />\n    );\n  } else {\n    return null;\n  }\n};\nexport default InfoPanel;\n","import { useContext } from \"react\";\n\nimport { ResponsiveTopicMapContext } from \"react-cismap/contexts/ResponsiveTopicMapContextProvider\";\n\nconst Comp = () => {\n  const { windowSize } = useContext(ResponsiveTopicMapContext);\n\n  return (\n    <div>\n      <div\n        style={{\n          position: \"absolute\",\n          top: (windowSize?.height || 500) / 2 - 1,\n          width: windowSize?.width || \"100%\",\n          height: \"2px\",\n          backgroundColor: \"#00000023\",\n          zIndex: \"100000\",\n          pointerEvents: \"none\",\n        }}\n      ></div>\n      <div\n        style={{\n          position: \"absolute\",\n          left: (windowSize?.width || 500) / 2 - 1,\n          height: windowSize?.height || \"100%\",\n          width: \"2px\",\n          backgroundColor: \"#00000023\",\n          zIndex: \"100000\",\n          pointerEvents: \"none\",\n        }}\n      ></div>\n      <div\n        style={{\n          borderRadius: \"50%\",\n          position: \"absolute\",\n          left: (windowSize?.width || 500) / 2 - 10,\n          top: (windowSize?.height || 500) / 2 - 10,\n          height: \"20px\",\n          width: \"20px\",\n          backgroundColor: \"#00000023\",\n          zIndex: \"100000\",\n          pointerEvents: \"none\",\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default Comp;\n","import Dexie from \"dexie\";\nimport Flatbush from \"flatbush\";\nimport turfBbox from \"@turf/bbox\";\n\nexport const CACHE_JWT = \"--cached--data--\";\n\nexport const initTables = (prefix, daqKeys) => {\n  const db = new Dexie(prefix);\n  const schema = {};\n  for (const key of daqKeys) {\n    schema[key] = \"gid\";\n  }\n  schema[\"daq_meta\"] = \"++id,name,md5,time\";\n  schema[\"anprechp\"] = \"id\";\n  schema[\"zustaendigkeit\"] = \"id,tabelle,referenzfeld,referenz,[tabelle+referenzfeld+referenz]\";\n\n  db.version(10).stores(schema);\n\n  return db;\n};\n\nexport const md5ActionFetchDAQ4Dexie = async (prefix, apiUrl, jwt, daqKey, db) => {\n  const allObjects = await db.table(\"daq_meta\").get({ name: daqKey });\n  let md5InCache = null;\n\n  if (allObjects != null) {\n    md5InCache = allObjects.md5;\n  }\n\n  console.log(\"DAQ for \" + daqKey);\n\n  let taskParameters = {\n    parameters: {\n      daqKey,\n      md5: md5InCache || \"-\",\n    },\n  };\n\n  let fd = new FormData();\n  fd.append(\n    \"taskparams\",\n    new Blob([JSON.stringify(taskParameters)], {\n      type: \"application/json\",\n    })\n  );\n\n  if (jwt === CACHE_JWT) {\n    const data = \"data retrieved\";\n\n    //go for result.time after the new version of the action is live\n    const time = allObjects.time;\n    return new Promise((resolve, reject) => {\n      resolve({ data, time });\n    });\n  } else {\n    const response = await fetch(\n      apiUrl + \"/actions/WUNDA_BLAU.dataAquisition/tasks?resultingInstanceType=result\",\n      {\n        method: \"POST\",\n        // method: \"GET\",\n        headers: {\n          Authorization: \"Bearer \" + jwt,\n          // \"Content-Type\": \"application/json\",\n          // Accept: \"application/json\",\n        },\n        body: fd,\n      }\n    );\n\n    if (response.status >= 200 && response.status < 300) {\n      const content = await response.json();\n      if (content.res) {\n        try {\n          const result = JSON.parse(content.res);\n          let status = result.status;\n          let data, time;\n\n          if (status === 200) {\n            console.log(\"DAQ cache miss for \" + daqKey);\n\n            data = JSON.parse(result.content);\n            time = result.time;\n            const newData = {};\n            newData[\"md5\"] = result.md5;\n            newData[\"time\"] = time;\n            newData[\"name\"] = daqKey;\n            console.log(\"new md5: \" + newData.md5);\n\n            if (allObjects != null) {\n              await db.table(\"daq_meta\").update(allObjects.id, newData);\n            } else {\n              db.table(\"daq_meta\").add(newData);\n            }\n            //              console.time(\"index time\"+daqKey)\n            if (data && data[0] && data[0].geojson) {\n              await indexGeometries(data, daqKey, prefix, db);\n            }\n            //              console.timeEnd(\"index time\"+daqKey)\n          } else if (status === 304) {\n            console.log(\"DAQ cache hit for \" + daqKey);\n            //go for result.time after the new version of the action is live\n\n            if (allObjects != null) {\n              time = allObjects.time;\n              data = \"data retrieved\";\n            }\n          }\n\n          return new Promise((resolve, reject) => {\n            resolve({ data, time });\n          });\n        } catch (e) {\n          return new Promise((resolve, reject) => {\n            reject({\n              status: 500,\n              desc:\n                \"error when parsing the server result. probably the content has the wrong structure\",\n              content,\n              exception: e,\n            });\n          });\n        }\n      } else {\n        return new Promise((resolve, reject) => {\n          reject({\n            status: 500,\n            desc: \"error when parsing the server result.\",\n            content,\n          });\n        });\n      }\n    } else if (response.status === 401) {\n      return new Promise((resolve, reject) => {\n        reject({ status: response.status, desc: \"unauthorized\" });\n      });\n    } else {\n      return new Promise((resolve, reject) => {\n        reject({ status: response.status, desc: \"unknown\" });\n      });\n    }\n  }\n};\n\nexport const indexGeometries = async (content, table, prefix, db) => {\n  const index = new Flatbush(content.length);\n  const tableObject = db.table(table);\n  await tableObject.clear();\n\n  const data = [];\n\n  for (const el of content) {\n    const geo = getBoundsFromArea(el.geojson);\n    const i = index.add(geo[0][1], geo[0][0], geo[1][1], geo[1][0]);\n    const newData = {};\n    newData[\"gid\"] = i;\n    newData[\"data\"] = el;\n    data.push(newData);\n  }\n\n  await tableObject.bulkPut(data);\n  index.finish();\n\n  const allObjects = await db.table(\"daq_meta\").get({ name: table });\n  const changes = {};\n  changes[\"pol_index\"] = index.data;\n  await db.table(\"daq_meta\").update(allObjects.id, changes);\n};\n\nexport const indexAnsprechpartner = async (content, table, db) => {\n  const tableObject = db.table(\"anprechp\");\n  await tableObject.clear();\n\n  const data = [];\n\n  for (const el of content) {\n    const newData = {};\n    newData[\"id\"] = el.id;\n    newData[\"data\"] = el;\n    data.push(newData);\n  }\n\n  await tableObject.bulkPut(data);\n};\n\nexport const indexAnsprechpartnerZustaendigkeit = async (content, table, db) => {\n  const tableObject = db.table(\"zustaendigkeit\");\n  await tableObject.clear();\n\n  const data = [];\n\n  for (const el of content) {\n    const newData = {};\n    newData[\"id\"] = el.id;\n    newData[\"tabelle\"] = el.tabelle;\n    newData[\"referenz\"] = el.referenz;\n    newData[\"referenzfeld\"] = el.referenzfeld;\n    newData[\"data\"] = el;\n    data.push(newData);\n  }\n\n  await tableObject.bulkPut(data);\n};\n\nexport const getBoundsFromArea = (area) => {\n  const bboxArray = turfBbox(area);\n  const corner1 = [bboxArray[1], bboxArray[0]];\n  const corner2 = [bboxArray[3], bboxArray[2]];\n  const bounds = [corner1, corner2];\n\n  return bounds;\n};\n","import Flatbush from \"flatbush\";\nimport { getBoundsFromArea } from \"./md5Fetching\";\nimport booleanIntersects from \"@turf/boolean-intersects\";\nimport turfDistance from \"@turf/distance\";\nimport turfCenter from \"@turf/center\";\nimport proj4 from \"proj4\";\n\nexport const nameMapping = {};\nnameMapping[\"StoerfallBetriebeKlasse1\"] = \"betrieb\";\nnameMapping[\"StoerfallBetriebeKlasse2\"] = \"betrieb\";\nnameMapping[\"wasserverbaende\"] = \"name\";\nnameMapping[\"wasserschutzgebiete\"] = \"zone\";\nnameMapping[\"autobahnmeisterei\"] = \"bezirk\";\nnameMapping[\"landschaftsschutzgebiete\"] = \"sg_typ\";\nnameMapping[\"naturschutzgebiete\"] = \"sg_nummer\";\nnameMapping[\"strassenmeisterei\"] = \"bezirk\";\nnameMapping[\"bimschNrw\"] = \"astnr\";\nnameMapping[\"bimschWuppertal\"] = \"astnr\";\nnameMapping[\"trinkwasserbrunnen\"] = \"str_name\";\nnameMapping[\"stadtFlurstuecke\"] = \"dienststellen\";\n\nexport const daqTableMapping = {};\ndaqTableMapping[\"StoerfallBetriebeKlasse1\"] = \"stoerfallbetriebe_klasse1\";\ndaqTableMapping[\"StoerfallBetriebeKlasse2\"] = \"stoerfallbetriebe_klasse2\";\ndaqTableMapping[\"wasserverbaende\"] = \"wasserverbaende\";\ndaqTableMapping[\"wasserschutzgebiete\"] = \"wasserschutzgebiete\";\ndaqTableMapping[\"autobahnmeisterei\"] = \"autobahnmeisterei\";\ndaqTableMapping[\"landschaftsschutzgebiete\"] = \"landschaftsschutzgebiete\";\ndaqTableMapping[\"naturschutzgebiete\"] = \"naturschutzgebiete\";\ndaqTableMapping[\"strassenmeisterei\"] = \"strassenmeisterei\";\ndaqTableMapping[\"bimschNrw\"] = \"bimsch_nrw\";\ndaqTableMapping[\"bimschWuppertal\"] = \"bimsch_wuppertal\";\ndaqTableMapping[\"trinkwasserbrunnen\"] = \"trinkwasserbrunnen\";\ndaqTableMapping[\"stadtFlurstuecke\"] = \"stadt_flurstuecke\";\n\nexport const searchForFeatures = async (db, daqKeys, geom) => {\n  let hits = [];\n  const geomBounds = getBoundsFromArea(geom);\n  const ansprechpartner = db.table(\"anprechp\");\n  const ansprechpartnerZustaendigkeit = db.table(\"zustaendigkeit\");\n  let trinkwasserbrunnen = null;\n  let trinkwasserbrunnenDist = null;\n  let bimsch = null;\n  let bimschDist = null;\n  const allBimsch = [];\n  const allTrinkwasserbrunnen = [];\n  const allFlurstuecke = [];\n\n  for (const key of daqKeys) {\n    const metaTable = await db.table(\"daq_meta\");\n\n    if (metaTable) {\n      const tableObjects = await metaTable.get({ name: key });\n      const otable = await db.table(key);\n\n      if (tableObjects) {\n        const serIndex = tableObjects.pol_index;\n\n        if (serIndex != null) {\n          const index = Flatbush.from(serIndex);\n          const indizes = index.search(\n            geomBounds[0][1],\n            geomBounds[0][0],\n            geomBounds[1][1],\n            geomBounds[1][0]\n          );\n\n          if (indizes != null) {\n            for (let i of indizes) {\n              const o = await otable.get(i);\n\n              if (o != null) {\n                const obj = o.data;\n                obj[\"typ\"] = key;\n                const geoj = obj.geojson;\n\n                if (booleanIntersects(geoj, geom)) {\n                  if (key === \"trinkwasserbrunnen\") {\n                    const distanceInMeters = getDistance(geom, geoj);\n                    await addAnsprechpartner(\n                      key,\n                      obj,\n                      ansprechpartner,\n                      ansprechpartnerZustaendigkeit\n                    );\n                    obj[\"abstand\"] = Math.round(distanceInMeters);\n\n                    if (\n                      trinkwasserbrunnenDist === null ||\n                      trinkwasserbrunnenDist > distanceInMeters\n                    ) {\n                      if (trinkwasserbrunnen !== null) {\n                        allTrinkwasserbrunnen.push(trinkwasserbrunnen);\n                      }\n                      trinkwasserbrunnen = obj;\n                      trinkwasserbrunnenDist = distanceInMeters;\n                    } else {\n                      allTrinkwasserbrunnen.push(obj);\n                    }\n                  } else if (key === \"bimschNrw\" || key === \"bimschWuppertal\") {\n                    const distanceInMeters = getDistance(geom, geoj);\n                    await addAnsprechpartner(\n                      key,\n                      obj,\n                      ansprechpartner,\n                      ansprechpartnerZustaendigkeit\n                    );\n                    obj[\"abstand\"] = Math.round(distanceInMeters);\n\n                    if (bimschDist === null || bimschDist > distanceInMeters) {\n                      if (bimsch !== null) {\n                        allBimsch.push(bimsch);\n                      }\n                      bimsch = obj;\n                      bimschDist = distanceInMeters;\n                    } else {\n                      allBimsch.push(obj);\n                    }\n                  } else if (key === \"stadtFlurstuecke\") {\n                    const dienststellen = obj.dienststellen.split(\"#\");\n\n                    if (dienststellen.length > 1) {\n                      const dienststellenOld = obj.dienststellen;\n                      const ansprechpartnerArray = [];\n\n                      for (let stelle of dienststellen) {\n                        obj.dienststellen = stelle;\n                        //the field ansprechpartner should not be used for the next search\n                        delete obj.ansprechpartner;\n                        await addAnsprechpartner(\n                          key,\n                          obj,\n                          ansprechpartner,\n                          ansprechpartnerZustaendigkeit\n                        );\n\n                        if (obj.ansprechpartner != undefined) {\n                          ansprechpartnerArray.push(obj.ansprechpartner);\n                        }\n                      }\n                      obj.dienststellen = dienststellenOld;\n                      obj.ansprechpartner = ansprechpartnerArray;\n\n                      if (geom !== null && geom.geometry.type !== 'Point') {\n                        const centerGeom = turfCenter(geom);\n                        if (booleanIntersects(geoj, centerGeom.geometry)) {\n                          obj[\"abstand\"] =  0;\n                        } else {\n                          const distanceInMeters = getDistance(geom, geoj);\n                          obj[\"abstand\"] = Math.round(distanceInMeters);\n                        }\n                      }\n\n                      allFlurstuecke.push(obj);\n//                      hits.push(obj);\n                    } else {\n                      await addAnsprechpartner(\n                        key,\n                        obj,\n                        ansprechpartner,\n                        ansprechpartnerZustaendigkeit\n                      );\n                      if (geom !== null && geom.geometry.type !== 'Point') {\n                        const centerGeom = turfCenter(geom);\n                        if (booleanIntersects(geoj, centerGeom.geometry)) {\n                          obj[\"abstand\"] =  0;\n                        } else {\n                          const distanceInMeters = getDistance(geom, geoj);\n                          obj[\"abstand\"] = Math.round(distanceInMeters);\n                        }\n                      }\n\n                      allFlurstuecke.push(obj);\n//                      hits.push(obj);\n                    }\n                  } else {\n                    await addAnsprechpartner(\n                      key,\n                      obj,\n                      ansprechpartner,\n                      ansprechpartnerZustaendigkeit\n                    );\n\n                    hits.push(obj);\n                  }\n                  obj[\"default_name\"] = obj[nameMapping[key]];\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  \n  if (allFlurstuecke !== null && allFlurstuecke.length > 0) {\n    allFlurstuecke.sort(compareDist);\n    Array.prototype.push.apply(hits, allFlurstuecke);\n  }\n\n  if (trinkwasserbrunnen !== null) {\n    hits.push(trinkwasserbrunnen);\n    allTrinkwasserbrunnen.sort(compareDist);\n    Array.prototype.push.apply(hits, allTrinkwasserbrunnen);\n  }\n\n  if (bimsch !== null) {\n    hits.push(bimsch);\n    allBimsch.sort(compareDist);\n    Array.prototype.push.apply(hits, allBimsch);\n  }\n\n  if (hits) {\n    hits = hits.filter((value, index, arr) => {\n      if (value.typ === \"StoerfallBetriebeKlasse2\") {\n        for (let elA1 of hits) {\n          if (elA1.typ === \"StoerfallBetriebeKlasse1\" && elA1.betrieb === value.betrieb) {\n            return false;\n          }\n        }\n\n        return true;\n      } else {\n        return true;\n      }\n    });\n  }\n\n  return hits;\n};\n\nconst compareDist = (a, b) => {\n  if (a.abstand < b.abstand) {\n    return -1;\n  } else if (a.abstand > b.abstand) {\n    return 1;\n  } else {\n    return 0;\n  }\n};\n\nexport const getDistance = (geom, geojson) => {\n  const geomCenter = turfCenter(geom);\n  const geomCenterCoords = [geomCenter.geometry.coordinates[0], geomCenter.geometry.coordinates[1]];\n  const transformedGeom = proj4(proj4.defs(\"EPSG:3857\"), proj4.defs(\"EPSG:4326\"), geomCenterCoords);\n  const brunnenCenter = turfCenter(geojson);\n  const brunnenCoords = [\n    brunnenCenter.geometry.coordinates[0],\n    brunnenCenter.geometry.coordinates[1],\n  ];\n  const transformedBrunnen = proj4(proj4.defs(\"EPSG:3857\"), proj4.defs(\"EPSG:4326\"), brunnenCoords);\n  const dist = turfDistance(transformedGeom, transformedBrunnen, { unit: \"kilometers\" });\n  //the calculated distance must be multiplied by 1.6, caused by the used longitudes/latitudes\n  const distanceInMeters = dist * 1000 * 1.6;\n\n  return distanceInMeters;\n};\n\nexport const addAnsprechpartner = async (\n  daqKey,\n  dataObject,\n  ansprechpartner,\n  ansprechpartnerZustaendigkeit\n) => {\n  const table = daqTableMapping[daqKey];\n  const keys = Object.keys(dataObject);\n  let found = false;\n\n  for (const key of keys) {\n    if (key !== \"geojson\" && dataObject[key] != undefined) {\n      const anprechreferenz = await ansprechpartnerZustaendigkeit.get({\n        tabelle: table,\n        referenz: dataObject[key],\n        referenzfeld: key,\n      });\n\n      if (anprechreferenz) {\n        const anspr = await ansprechpartner.get({ id: \"\" + anprechreferenz.data.ansprechpartner });\n\n        if (anspr) {\n          removeNullValues(anspr.data);\n          dataObject[\"ansprechpartner\"] = anspr.data;\n          found = true;\n        }\n        break;\n      }\n    }\n  }\n\n  if (found === false) {\n    const anprechreferenz = await ansprechpartnerZustaendigkeit.get({\n      tabelle: table,\n      referenz: \"null\",\n      referenzfeld: \"null\",\n    });\n\n    if (anprechreferenz) {\n      const anspr = await ansprechpartner.get({ id: \"\" + anprechreferenz.data.ansprechpartner });\n\n      if (anspr) {\n        removeNullValues(anspr.data);\n        dataObject[\"ansprechpartner\"] = anspr.data;\n      }\n    }\n  }\n\n  return dataObject;\n};\n\nexport const removeNullValues = (obj) => {\n  const keys = Object.keys(obj);\n\n  for (const key of keys) {\n    if (obj[key] === null) {\n      obj[key] = undefined;\n    }\n  }\n};\n\nexport const offlineDataAvailable = async (db, daqKeys) => {\n  let lastTime = null;\n\n  for (const key of daqKeys) {\n    const metaTable = await db.table(\"daq_meta\");\n\n    if (metaTable != null) {\n      const tableObjects = await metaTable.get({ name: key });\n\n      if (tableObjects != null) {\n        lastTime = tableObjects.time;\n      } else {\n        console.log(\"offline data for key \" + key + \" not available\");\n        return null;\n      }\n    }\n  }\n\n  return lastTime;\n};\n","import { faSearch, faMap, faSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport bboxPolygon from \"@turf/bbox-polygon\";\nimport turfCenter from \"@turf/center\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Color from \"color\";\nimport \"leaflet/dist/leaflet.css\";\nimport { useContext, useEffect, useState } from \"react\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport { FeatureCollectionDisplay } from \"react-cismap\";\nimport { ResponsiveTopicMapContext } from \"react-cismap/contexts/ResponsiveTopicMapContextProvider\";\nimport { TopicMapContext } from \"react-cismap/contexts/TopicMapContextProvider\";\nimport { md5FetchText } from \"react-cismap/tools/fetching\";\nimport { getGazDataForTopicIds } from \"react-cismap/tools/gazetteerHelper\";\nimport \"react-cismap/topicMaps.css\";\nimport TopicMapComponent from \"react-cismap/topicmaps/TopicMapComponent\";\nimport Control from \"react-leaflet-control\";\nimport { daqKeys, db } from \"./App\";\nimport \"./App.css\";\nimport InfoBox, { modes } from \"./components/InfoBox\";\nimport MyMenu from \"./components/Menu\";\nimport InfoPanel from \"./components/SecondaryInfo\";\nimport Crosshair from \"./Crosshair\";\nimport { searchForFeatures } from \"./search\";\n\nconst host = \"https://wupp-topicmaps-data.cismet.de\";\n\nconst getData = async (setGazData) => {\n  const prefix = \"GazDataForStories\";\n  const sources = {};\n\n  //  sources.stoerfallbetrieb = await md5ActionFetchDAQ4Dexie(prefix, 'url', 'xxx', 'daqStoerfallBetriebeKlasse1');\n  sources.adressen = await md5FetchText(prefix, host + \"/data/3857/adressen.json\");\n  sources.bezirke = await md5FetchText(prefix, host + \"/data/3857/bezirke.json\");\n  sources.quartiere = await md5FetchText(prefix, host + \"/data/3857/quartiere.json\");\n  sources.pois = await md5FetchText(prefix, host + \"/data/3857/pois.json\");\n  sources.kitas = await md5FetchText(prefix, host + \"/data/3857/kitas.json\");\n\n  const gazData = getGazDataForTopicIds(sources, [\n    \"pois\",\n    \"kitas\",\n    \"bezirke\",\n    \"quartiere\",\n    \"adressen\",\n  ]);\n\n  setGazData(gazData);\n};\n\nconst convertToFeature = (_item) => {\n  const item = JSON.parse(JSON.stringify(_item));\n\n  const geometry = item?.geojson;\n  const selected = false;\n  const type = \"Feature\";\n  let text = item?.bezeichnung;\n  switch (item.typ) {\n    case \"naturschutzgebiete\":\n      text = item?.nrw_name;\n      item.color = \"#649351\";\n      break;\n    case \"landschaftsschutzgebiete\":\n      text = \"Landschaftsschutzgebiet\";\n      item.color = \"#97C146\";\n\n      break;\n    case \"stadtFlurstuecke\":\n      text = item?.flurstueck;\n      item.color = \"#dddddd\";\n      item.opcaity = 0.3;\n      break;\n    case \"trinkwasserbrunnen\":\n      text = item?.str_name + \" \" + item?.hsnr;\n      item.color = \"#A7DBD8\";\n      item.opcaity = 0.3;\n\n      break;\n    case \"bimschWuppertal\":\n      text = item?.b_firma1;\n      item.color = \"#774F38\";\n\n      break;\n    case \"bimschNrw\":\n      text = item?.b_firma1;\n      item.color = \"#774F38\";\n\n      break;\n    case \"wasserschutzgebiete\":\n      text = item?.zone;\n      item.color = \"#69D2E7\";\n\n      break;\n    case \"StoerfallBetriebeKlasse1\":\n      text = item?.betrieb;\n      item.color = \"#DD4A36\";\n      break;\n    case \"StoerfallBetriebeKlasse2\":\n      text = item?.betrieb;\n      item.color = \"#DD4A36\";\n      item.opacity = 0.3;\n\n      break;\n\n    default:\n      return undefined;\n      break;\n  }\n\n  return {\n    id: item.typ + \".\" + item.id,\n    text,\n    type,\n    selected,\n    geometry,\n    crs: geometry?.crs || {\n      type: \"name\",\n      properties: {\n        name: \"urn:ogc:def:crs:EPSG::25832\",\n      },\n    },\n    properties: item,\n  };\n};\n\nconst style = (feature) => {\n  let color = new Color(feature?.properties?.color || \"#ff0000\");\n  let linecolor = new Color(feature?.properties?.color || \"#ff0000\").darken(0.5);\n\n  return {\n    fillColor: color,\n    color: linecolor,\n    opacity: 0.5,\n    fillOpacity: feature?.properties?.opacity || 0.6,\n\n    weight: 0.5,\n  };\n};\n\nfunction UmweltalarmMap({ loggedOut, initialised }) {\n  const { routedMapRef } = useContext(TopicMapContext);\n  const mapRef = routedMapRef?.leafletMap?.leafletElement;\n  const currentZoom = mapRef?.getZoom();\n  const [gazData, setGazData] = useState([]);\n  const [isFeatureCollectionVisible, setFeatureCollectionVisible] = useState(false);\n\n  const [hits, setHits] = useState([]);\n  const [searchMode, setSearchMode] = useState(modes.CENTER);\n  const [featureCollection, setFeatureCollection] = useState([]);\n  const [bbPoly, setBBPoly] = useState();\n  const { windowSize } = useContext(ResponsiveTopicMapContext);\n\n  useEffect(() => {\n    getData(setGazData);\n  }, []);\n\n  useEffect(() => {\n    const features = [];\n    for (const hit of hits || []) {\n      const f = convertToFeature(hit);\n      if (f) {\n        features.push(f);\n      }\n    }\n    setFeatureCollection(features);\n  }, [hits]);\n  console.log(\"featureCollection\", featureCollection);\n  console.log(\"hiots\", hits);\n\n  const searchInWholeWindowEnabled = currentZoom && currentZoom >= 16;\n  return (\n    <div key={initialised != null ? initialised : \"init\"}>\n      <Crosshair />\n      <TopicMapComponent\n        gazData={gazData}\n        modalMenu={<MyMenu />}\n        homeZoom={13}\n        maxZoom={22}\n        secondaryInfo={windowSize && <InfoPanel hits={hits} />}\n        locatorControl={true}\n        mappingBoundsChanged={(boundingBox) => {\n          setHits(undefined);\n          let bbox = [boundingBox.left, boundingBox.bottom, boundingBox.right, boundingBox.top];\n          let bbPoly = bboxPolygon(bbox);\n\n          //   console.log(\"xxx mappingBoundsChanged\", center);\n          let center = turfCenter(bbPoly);\n          console.log(\"sss bbPoly\", bbPoly);\n          console.log(\"sss center\", center);\n\n          searchForFeatures(db, daqKeys, center).then((hits) => {\n            setSearchMode(modes.CENTER);\n            setHits(hits);\n            setBBPoly(bbPoly);\n          });\n        }}\n      >\n        {!loggedOut && (\n          <InfoBox\n            mode={searchMode}\n            isFeatureCollectionVisible={isFeatureCollectionVisible}\n            setFeatureCollectionVisible={setFeatureCollectionVisible}\n            hits={hits}\n          />\n        )}\n        {isFeatureCollectionVisible && (\n          <FeatureCollectionDisplay style={style} featureCollection={featureCollection} />\n        )}\n\n        <Control className='leaflet-bar' position={\"topleft\"}>\n          <button\n            disabled={!searchInWholeWindowEnabled}\n            onClick={() => {\n              setHits();\n\n              searchForFeatures(db, daqKeys, bbPoly).then((hits) => {\n                setSearchMode(modes.WINDOW);\n\n                setHits(hits);\n              });\n            }}\n            className='easy-button-button leaflet-bar-part leaflet-interactive unnamed-state-active'\n          >\n            <span\n              style={{ color: searchInWholeWindowEnabled ? \"#444444\" : \"#bbbbbb\" }}\n              className='fa-layers fa-fw '\n            >\n              <FontAwesomeIcon transform='grow-9' icon={faSearch} size='lg' />\n              <FontAwesomeIcon transform='shrink-8 up-2 left-2.3' icon={faSquare} size='lg' />\n            </span>\n          </button>\n        </Control>\n      </TopicMapComponent>\n    </div>\n  );\n}\n\nexport default UmweltalarmMap;\n","import localforage from \"localforage\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { Alert, Button, Form, Modal } from \"react-bootstrap\";\nimport IconComp from \"react-cismap/commons/Icon\";\nimport { ResponsiveTopicMapContext } from \"react-cismap/contexts/ResponsiveTopicMapContextProvider\";\nimport { apiUrl, appKey, daqKeys, db } from \"../App\";\nimport { CACHE_JWT } from \"react-cismap/tools/fetching\";\nimport {offlineDataAvailable} from \"../search\"\nimport { FeatureCollectionDispatchContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport dayjs from \"dayjs\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\n\ndayjs.extend(customParseFormat);\n\nconst LoginForm = ({\n  setJWT = (jwt) => {\n    console.log(\"you need to set the attribute setJWT in the <Login> component\", jwt);\n  },\n  loginInfo,\n  setLoginInfo = () => {},\n}) => {\n  const { windowSize } = useContext(ResponsiveTopicMapContext);\n  const { setMetaInformation } = useContext(FeatureCollectionDispatchContext);\n  const pwFieldRef = useRef();\n  const userFieldRef = useRef();\n  const _height = windowSize?.height || 800 - 180;\n  const modalBodyStyle = {\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n    maxHeight: _height,\n  };\n  const [user, _setUser] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [cacheDataAvailable, setCacheDataAvailable] = useState(false);\n\n  window.localforage = localforage;\n  const setUser = (user) => {\n    localforage.setItem(\"@\" + appKey + \".\" + \"auth\" + \".\" + \"user\", user);\n    _setUser(user);\n  };\n\n  useEffect(() => {\n    (async () => {\n      const userInCache = await localforage.getItem(\"@\" + appKey + \".\" + \"auth\" + \".\" + \"user\");\n      const dataValueInCache = await offlineDataAvailable(db, daqKeys);\n      console.log('xxx o' + dataValueInCache);\n      console.log('xxx offData' + (dataValueInCache !== null && dataValueInCache !== undefined));\n\n      setCacheDataAvailable(dataValueInCache !== null && dataValueInCache !== undefined);\n      if (dataValueInCache !== null && dataValueInCache !== undefined) {\n        const time = dayjs(dataValueInCache, \"YYYY-MM-DD hh:mm:ss\").toDate();\n        setMetaInformation({time});      \n      }\n      if (userInCache) {\n        setUser(userInCache);\n      }\n      if (userFieldRef?.current) {\n        userFieldRef.current.focus();\n        userFieldRef.current.select();\n      }\n    })();\n  }, []);\n\n  const login = () => {\n    fetch(\"https://umweltalarm-api.cismet.de/users\", {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Basic \" + btoa(user + \"@\" + \"WUNDA_BLAU\" + \":\" + pw),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(function (response) {\n        if (response.status >= 200 && response.status < 300) {\n          response.json().then(function (responseWithJWT) {\n            const jwt = responseWithJWT.jwt;\n            setLoginInfo({\n              color: \"#79BD9A\",\n              text: \"Anmeldung erfolgreich. Daten werden geladen.\",\n            });\n            setTimeout(() => {\n              setJWT(jwt);\n              setLoginInfo();\n            }, 500);\n          });\n        } else {\n          setLoginInfo({\n            color: \"#FF8048\",\n            text: \"Bei der Anmeldung ist ein Fehler aufgetreten. \",\n          });\n          setTimeout(() => {\n            setLoginInfo();\n          }, 2500);\n        }\n      })\n      .catch(function (err) {\n        setLoginInfo({ color: \"#FF3030\", text: \"Bei der Anmeldung ist ein Fehler aufgetreten.\" });\n        setTimeout(() => {\n          setLoginInfo();\n        }, 2500);\n      });\n  };\n\n  return (\n    <Modal\n      style={{\n        zIndex: 3000000000,\n      }}\n      height='100%'\n      size='l'\n      show={true}\n      //   onHide={close}\n      keyboard={false}\n    >\n      <Modal.Header>\n        <Modal.Title>\n          <div>\n            <div>\n              <IconComp name={\"user\"} /> Anmeldung\n            </div>\n          </div>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={modalBodyStyle} id='potenzialflaechen-online' key='login'>\n        <Form>\n          <Form.Group controlId='potenzialflaechen-online-login'>\n            <Form.Label>WuNDa Benutzername</Form.Label>\n            <Form.Control\n              value={user}\n              ref={userFieldRef}\n              onChange={(e) => {\n                setUser(e.target.value);\n              }}\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  // login();\n                  if (pwFieldRef.current) {\n                    pwFieldRef.current.focus();\n                  }\n                }\n              }}\n              placeholder='Login hier eingeben'\n            />\n            {/* <Form.Text className='text-muted'>\n              We'll never share your email with anyone else.\n            </Form.Text> */}\n          </Form.Group>\n\n          <Form.Group controlId='potenzialflaechen-online-pass'>\n            <Form.Label>Passwort</Form.Label>\n            <Form.Control\n              ref={pwFieldRef}\n              value={pw}\n              onChange={(e) => {\n                setPw(e.target.value);\n              }}\n              type='password'\n              placeholder='Password'\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  login();\n                }\n              }}\n            />\n          </Form.Group>\n          <div\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              alignItems: \"baseline\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            {loginInfo?.text && (\n              <div style={{ margin: 10, color: loginInfo?.color || \"black\", maxWidth: 200 }}>\n                <b>{loginInfo?.text}</b>\n              </div>\n            )}\n            <div style={{ flexShrink: 100 }}></div>\n            <div>\n              {cacheDataAvailable === true && (\n                <Button\n                  onClick={(e) => {\n                    setLoginInfo({\n                      color: \"#79BD9A\",\n                      text: \"Alte Daten werden aus dem Cache übernommen.\",\n                    });\n                    setTimeout(() => {\n                      setJWT(CACHE_JWT);\n                      setLoginInfo();\n                    }, 500);\n                  }}\n                  style={{ margin: 5, marginTop: 30 }}\n                  variant='secondary'\n                >\n                  Offline arbeiten\n                </Button>\n              )}\n              <Button\n                onClick={(e) => {\n                  login();\n                }}\n                style={{ margin: 5, marginTop: 30 }}\n                variant='primary'\n              >\n                Anmeldung\n              </Button>\n            </div>\n          </div>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n};\nexport default LoginForm;\n","import { useContext } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport IconComp from \"react-cismap/commons/Icon\";\nimport { FeatureCollectionContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport ReactLoading from \"react-loading\";\n\nconst Waiting = ({ waiting }) => {\n  const { selectedFeature } = useContext(FeatureCollectionContext);\n\n  return (\n    <Modal\n      style={{\n        zIndex: 3000000000,\n      }}\n      height='200'\n      size='s'\n      show={waiting !== undefined}\n      //   onHide={close}\n      keyboard={false}\n    >\n      <Modal.Header>\n        <Modal.Title>\n          <IconComp name={waiting?.icon} /> {waiting?.title}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"baseline\" }}>\n          <ReactLoading type={\"cylon\"} color={selectedFeature?.properties.color} />{\" \"}\n          <div style={{ marginLeft: 20 }}>{waiting?.text}</div>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default Waiting;\n","import { useContext } from \"react\";\nimport { ResponsiveTopicMapContext } from \"react-cismap/contexts/ResponsiveTopicMapContextProvider\";\nimport { FeatureCollectionContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\n\nimport { CACHE_JWT } from \"react-cismap/tools/fetching\";\n\nconst Title = ({ logout, jwt }) => {\n  const { windowSize } = useContext(ResponsiveTopicMapContext);\n  const { metaInformation } = useContext(FeatureCollectionContext);\n  let dateInfo;\n  if (metaInformation) {\n    const t = metaInformation.time;\n    const d = new Date(t);\n    dateInfo = d.toLocaleString();\n  }\n\n  let secondaryInfo, jwtPayload, actiontext;\n  if (jwt === CACHE_JWT) {\n    secondaryInfo = \"Daten aus dem Cache\"; //;+ metaInformation.time;\n    actiontext = \"anmelden und Daten aktualisieren\";\n  } else {\n    try {\n      jwtPayload = atob(jwt.split(\".\")[1]);\n      secondaryInfo = JSON.parse(jwtPayload).sub;\n      actiontext = \"abmelden\";\n    } catch (e) {}\n  }\n  const titleContent = (\n    <div>\n      <b>Umweltalarm</b> (\n      {secondaryInfo + (dateInfo !== undefined ? \", \" + dateInfo : \"\")})\n      <div style={{ float: \"right\", paddingRight: 10 }}>\n        <a\n          style={{ color: \"#337ab7\" }}\n          onClick={() => {\n            logout();\n          }}\n        >\n          {/* <FontAwesomeIcon icon={faRandom} style={{ marginRight: 5 }} /> */}\n          {actiontext}\n        </a>\n      </div>\n    </div>\n  );\n\n  return (\n    <table\n      style={{\n        width: (windowSize?.width || 300) - 54 - 12 - 38 - 12 + \"px\",\n        height: \"30px\",\n        position: \"absolute\",\n        left: 54,\n        top: 12,\n        zIndex: 555,\n      }}\n    >\n      <tbody>\n        <tr>\n          <td\n            style={{\n              textAlign: \"center\",\n              verticalAlign: \"middle\",\n              background: \"#ffffff\",\n              color: \"black\",\n              opacity: \"0.9\",\n              paddingLeft: \"10px\",\n            }}\n          >\n            {titleContent}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default Title;\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"react-cismap/topicMaps.css\";\nimport TopicMapContextProvider from \"react-cismap/contexts/TopicMapContextProvider\";\nimport UmweltalarmMap from \"./UmweltalarmMap\";\nimport { MappingConstants } from \"react-cismap\";\nimport { getInternetExplorerVersion } from \"react-cismap/tools/browserHelper\";\nimport { defaultLayerConf } from \"react-cismap/tools/layerFactory\";\nimport { useEffect, useState } from \"react\";\nimport localforage from \"localforage\";\nimport {\n  md5ActionFetchDAQ4Dexie,\n  initTables,\n  indexAnsprechpartner,\n  indexAnsprechpartnerZustaendigkeit,\n} from \"./md5Fetching\";\nimport LoginForm from \"./components/LoginForm\";\nimport Waiting from \"./components/Waiting\";\nimport Title from \"./components/TitleControl\";\nimport MapLibreLayer from \"react-cismap/vector/MapLibreLayer\";\n\nconst host = \"https://wupp-topicmaps-data.cismet.de\";\nexport const appKey = \"umweltalarm.Online.Wuppertal\";\nexport const apiUrl = \"https://umweltalarm-api.cismet.de\";\nexport const daqKeys = [\n  \"StoerfallBetriebeKlasse1\",\n  \"StoerfallBetriebeKlasse2\",\n  \"wasserverbaende\",\n  \"wasserschutzgebiete\",\n  \"autobahnmeisterei\",\n  \"landschaftsschutzgebiete\",\n  \"naturschutzgebiete\",\n  \"strassenmeisterei\",\n  \"bimschNrw\",\n  \"bimschWuppertal\",\n  \"trinkwasserbrunnen\",\n  \"stadtFlurstuecke\",\n];\nexport const db = initTables(appKey, daqKeys);\n\nfunction App() {\n  let backgroundModes;\n  useEffect(() => {\n    document.title = \"Umweltalarm Wuppertal\";\n  }, []);\n\n  const [jwt, _setJWT] = useState();\n  const [loggedOut, setLoggedOut] = useState();\n  const [waiting, setWaiting] = useState();\n  const [loginInfo, setLoginInfo] = useState();\n  const [initialised, setInitialised] = useState();\n  var keysChecked = 0;\n  var newDataRetrieved = false;\n\n  const setJWT = (jwt) => {\n    localforage.setItem(\"@\" + appKey + \".\" + \"auth\" + \".\" + \"jwt\", jwt);\n    _setJWT(jwt);\n  };\n\n  useEffect(() => {\n    (async () => {\n      const jwtInCache = await localforage.getItem(\"@\" + appKey + \".\" + \"auth\" + \".\" + \"jwt\");\n      if (jwtInCache) {\n        setJWT(jwtInCache);\n        setLoggedOut(false);\n      } else {\n        setJWT(undefined);\n        setLoggedOut(true);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (jwt) {\n      for (const daqKey of daqKeys) {\n        md5ActionFetchDAQ4Dexie(appKey, apiUrl, jwt, daqKey, db)\n          .then(\n            (stoerfallResult) => {\n              ++keysChecked;\n\n              if (stoerfallResult.data && Array.isArray(stoerfallResult.data)) {\n                newDataRetrieved = true;\n              }\n\n              if (keysChecked > daqKeys.length - 1 && newDataRetrieved === true) {\n                //reload the hits after the data retrieval is complete\n                setInitialised(\"initialised complete\");\n              }\n            },\n            (problem) => {\n              if (problem.status === 401) {\n                setJWT(undefined);\n                setLoginInfo({ color: \"#F9D423\", text: \"Bitte melden Sie sich erneut an.\" });\n                setTimeout(() => {\n                  setLoginInfo();\n                }, 2500);\n              }\n            }\n          )\n          .catch((e) => {\n            console.log(\"xxx error \", e);\n          });\n      }\n\n      md5ActionFetchDAQ4Dexie(appKey, apiUrl, jwt, \"ansprechpartner\", db)\n        .then(\n          (stoerfallResult) => {\n            if (stoerfallResult !== undefined && Array.isArray(stoerfallResult.data)) {\n              indexAnsprechpartner(stoerfallResult.data, \"ansprechpartner\", db);\n            }\n          },\n          (problem) => {\n            if (problem.status === 401) {\n              setJWT(undefined);\n              setLoginInfo({ color: \"#F9D423\", text: \"Bitte melden Sie sich erneut an.\" });\n              setTimeout(() => {\n                setLoginInfo();\n              }, 2500);\n            }\n          }\n        )\n        .catch((e) => {\n          console.log(\"xxx error \", e);\n        });\n\n      md5ActionFetchDAQ4Dexie(appKey, apiUrl, jwt, \"ansprechpartnerZustaendigkeit\", db)\n        .then(\n          (stoerfallResult) => {\n            if (stoerfallResult !== undefined && Array.isArray(stoerfallResult.data)) {\n              console.log(\"Ansprechpartner referenz\");\n              indexAnsprechpartnerZustaendigkeit(\n                stoerfallResult.data,\n                \"ansprechpartnerZustaendigkeit\",\n                db\n              );\n            }\n          },\n          (problem) => {\n            if (problem.status === 401) {\n              setJWT(undefined);\n              setLoginInfo({ color: \"#F9D423\", text: \"Bitte melden Sie sich erneut an.\" });\n              setTimeout(() => {\n                setLoginInfo();\n              }, 2500);\n            }\n          }\n        )\n        .catch((e) => {\n          console.log(\"xxx error \", e);\n        });\n\n      setLoggedOut(false);\n    } else {\n      setLoggedOut(true);\n      //      setDynGazData([]);\n    }\n  }, [jwt]);\n\n  if (getInternetExplorerVersion() === -1) {\n    backgroundModes = [\n      {\n        title: \"Stadtplan\",\n        mode: \"default\",\n        layerKey: \"stadtplan\",\n      },\n      {\n        title: \"Stadtplan (Vektordaten light)\",\n        mode: \"default\",\n        layerKey: \"vector\",\n      },\n\n      { title: \"Luftbildkarte\", mode: \"default\", layerKey: \"lbk\" },\n    ];\n  } else {\n    backgroundModes = [\n      {\n        title: \"Stadtplan\",\n        mode: \"default\",\n        layerKey: \"stadtplan\",\n      },\n\n      { title: \"Luftbildkarte\", mode: \"default\", layerKey: \"lbk\" },\n    ];\n  }\n  const backgroundConfigurations = {\n    lbk: {\n      layerkey: \"cismetText|trueOrtho2020@40\",\n      layerkey_: \"wupp-plan-live@100|trueOrtho2020@75|rvrSchrift@100\",\n      src: \"/images/rain-hazard-map-bg/ortho.png\",\n      title: \"Luftbildkarte\",\n    },\n    stadtplan: {\n      layerkey: \"wupp-plan-live@60\",\n      src: \"/images/rain-hazard-map-bg/citymap.png\",\n      title: \"Stadtplan\",\n    },\n    vector: {\n      layerkey: \"cismetLight\",\n      src: \"/images/rain-hazard-map-bg/citymap.png\",\n      title: \"Stadtplan\",\n    },\n  };\n\n  // const baseLayerConf = JSON.parse(JSON.stringify(defaultLayerConf));\n  // TODO problems in settings preview map wehen doing the immutable way\n  const baseLayerConf = { ...defaultLayerConf };\n\n  if (baseLayerConf.namedLayers.cismetLight == undefined) {\n    baseLayerConf.namedLayers.cismetLight = {\n      type: \"vector\",\n      style: \"https://omt.map-hosting.de/styles/cismet-light/style.json\",\n      pane: \"backgroundvectorLayers\",\n    };\n  }\n  if (baseLayerConf.namedLayers.cismetText == undefined) {\n    baseLayerConf.namedLayers.cismetText = {\n      type: \"vector\",\n      style: \"https://omt.map-hosting.de/styles/cismet-text/style.json\",\n      pane: \"backgroundlayerTooltips\",\n    };\n  }\n\n  return (\n    <TopicMapContextProvider\n      persistenceSettings={{\n        ui: [\"XappMenuVisible\", \"appMenuActiveMenuSection\", \"collapsedInfoBox\"],\n        featureCollection: [\"filterState\", \"filterMode\", \"clusteringEnabled\"],\n        responsive: [],\n        styling: [\n          \"activeAdditionalLayerKeys\",\n          \"namedMapStyle\",\n          \"selectedBackground\",\n          \"markerSymbolSize\",\n        ],\n      }}\n      additionalLayerConfiguration={{\n        brunnen: {\n          title: <span>Trinkwasserbrunnen</span>,\n          initialActive: true,\n          layer: (\n            <MapLibreLayer\n              key={\"brunnen\"}\n              style_='http://localhost:888/styles/brunnen/style.json'\n              style='https://omt.map-hosting.de/styles/brunnen/style.json'\n              pane='additionalLayers0'\n            />\n          ),\n        },\n        kanal: {\n          title: <span>Kanalnetz</span>,\n          initialActive: true,\n          layer: (\n            <MapLibreLayer\n              key={\"kanal\"}\n              style_='http://localhost:888/styles/kanal/style.json'\n              style='https://omt.map-hosting.de/styles/kanal/style.json'\n              pane='additionalLayers1'\n            />\n          ),\n        },\n        gewaesser: {\n          title: <span>Gewässernetz</span>,\n          initialActive: true,\n          layer: (\n            <MapLibreLayer\n              key={\"gewaesser\"}\n              style_='http://localhost:888/styles/gewaesser/style.json'\n              style='https://omt.map-hosting.de/styles/gewaesser/style.json'\n              pane='additionalLayers2'\n            />\n          ),\n        },\n      }}\n      baseLayerConf={baseLayerConf}\n      backgroundConfigurations={backgroundConfigurations}\n      backgroundModes={backgroundModes}\n      referenceSystem={MappingConstants.crs3857}\n      mapEPSGCode='3857'\n      referenceSystemDefinition={MappingConstants.proj4crs3857def}\n      maskingPolygon='POLYGON((668010.063156992 6750719.23021889,928912.612468322 6757273.20343972,930494.610325512 6577553.43685138,675236.835570551 6571367.64964125,668010.063156992 6750719.23021889))'\n    >\n      {loggedOut && jwt === undefined && (\n        <LoginForm\n          key={\"login.\"}\n          setJWT={setJWT}\n          loginInfo={loginInfo}\n          setLoginInfo={setLoginInfo}\n        />\n      )}\n      {!loggedOut && (\n        <Title\n          logout={() => {\n            setJWT(undefined);\n            setLoggedOut(true);\n            setLoginInfo({ color: \"#69D2E7\", text: \"Sie wurden erfolgreich abgemeldet.\" });\n            setTimeout(() => {\n              setLoginInfo();\n            }, 2500);\n          }}\n          jwt={jwt}\n        />\n      )}\n      <Waiting waiting={waiting} />\n\n      <UmweltalarmMap loggedOut={loggedOut} initialised={initialised} />\n    </TopicMapContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}