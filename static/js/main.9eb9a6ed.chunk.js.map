{"version":3,"sources":["version.js","components/MenuFooter.js","components/Menu.js","Crosshair.js","md5Fetching.js","search.js","components/InfoBox.js","components/SecondaryInfo.js","UmweltalarmMap.js","components/LoginForm.js","components/Waiting.js","components/TitleControl.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["APPERSION","getApplicationVersion","Footer","setAppMenuActiveMenuSection","useContext","UIDispatchContext","style","fontSize","className","onClick","scroller","scrollTo","containerId","document","title","href","target","reactCismapVersion","rel","MyMenu","ModalApplicationMenu","menuIcon","menuTitle","menuIntroduction","menuSections","DefaultSettingsPanel","skipFilterTitleSettings","skipClusteringSettings","skipSymbolsizeSetting","Section","sectionKey","sectionTitle","sectionBsStyle","sectionContent","ConfigurableDocBlocks","configs","getSimpleHelpForTM","undefined","menuFooter","MenuFooter","Comp","windowSize","ResponsiveTopicMapContext","position","top","height","width","backgroundColor","zIndex","pointerEvents","left","borderRadius","md5ActionFetchDAQ4Dexie","prefix","apiUrl","jwt","daqKey","db","a","table","get","name","allObjects","md5InCache","md5","console","log","taskParameters","parameters","fd","FormData","append","Blob","JSON","stringify","type","time","Promise","resolve","reject","data","fetch","method","headers","Authorization","body","response","status","json","content","res","result","parse","newData","update","id","add","geojson","indexGeometries","desc","exception","index","Flatbush","length","tableObject","clear","el","geo","getBoundsFromArea","i","push","bulkPut","finish","changes","indexAnsprechpartner","indexAnsprechpartnerZustaendigkeit","tabelle","referenz","referenzfeld","area","bboxArray","turf","bbox","nameMapping","daqTableMapping","searchForFeatures","daqKeys","geom","hits","geomBounds","ansprechpartner","ansprechpartnerZustaendigkeit","trinkwasserbrunnen","trinkwasserbrunnenDist","bimsch","bimschDist","allBimsch","allTrinkwasserbrunnen","key","metaTable","tableObjects","otable","serIndex","pol_index","from","indizes","search","o","obj","geoj","booleanIntersects","distanceInMeters","getDistance","addAnsprechpartner","Math","round","sort","compareDist","Array","prototype","apply","b","abstand","geomCoords","geometry","coordinates","transformedGeom","proj4","defs","brunnenCenter","turfCenter","brunnenCoords","transformedBrunnen","turfDistance","unit","dataObject","keys","Object","found","anprechreferenz","anspr","removeNullValues","offlineDataAvailable","lastTime","InfoBox","collapsedInfoBox","UIContext","setCollapsedInfoBox","setSecondaryInfoVisible","hitsObject","isArray","typ","brunnen","strassenmeisterei","schutzgebiete","autobahnmeisterei","wasserschutzgebiete","verbaende","stoerfallbetriebe","stadtFlurstuecke","header","textAlign","verticalAlign","background","color","opacity","paddingLeft","paddingTop","paddingBottom","activeStyle","border","borderStyle","flexGrow","inactiveStyle","subtextStyle","minHeight","gridStyle","display","gridGap","gridTemplateColumns","flexDirection","flexWrap","justifyContent","alignContent","symbols","paddingRight","active","spinner","text","icon","faFaucet","faIndustry","faHandHoldingWater","default_name","faExclamationCircle","faCity","faTree","ResponsiveInfoBox","panelClick","pixelwidth","isCollapsible","handleResponsiveDesign","infoStyle","padding","secondaryInfoBoxElements","alwaysVisibleDiv","collapsibleDiv","fixedRow","objectifyHits","hitObject","hit","footer","getAnsprechpartnerLinks","links","tel","IconLink","tooltip","iconname","email","url","getAnsprechpartner","float","firma","bemerkung","getSeparator","borderBottom","marginBottom","marginTop","xcolor","InfoPanel","history","TopicMapContext","lat","URLSearchParams","location","long","showRawData","subSections","value","valFunc","join","wasserverbaende","SecondaryInfoPanelSection","bsStyle","map","flurstueck","dienststellen","replace","bimschWuppertal","bimschNrw","naturschutzgebiete","landschaftsschutzgebiete","StoerfallBetriebeKlasse1","StoerfallBetriebeKlasse2","alignItems","marginLeft","str_name","hsnr","zusatz","betrieb","lage","anlag_bez","b_firma1","zone","sg_typ","sg_nummer","hitsForRawDisplay","hitObjectForRawDisplay","SecondaryInfo","titleIconName","mainSection","bezeichnung","groesse","toLocaleString","stadtbezirke","sb","quartiere","q","eigentuemer","e","host","getData","setGazData","setInfoData","sources","md5FetchText","adressen","bezirke","pois","kitas","gazData","getGazDataForTopicIds","UmweltalarmMap","loggedOut","useState","setHits","useEffect","Crosshair","TopicMapComponent","modalMenu","homeZoom","maxZoom","secondaryInfo","locatorControl","mappingBoundsChanged","boundingBox","bottom","right","bbPoly","bboxPolygon","center","then","dayjs","extend","customParseFormat","LoginForm","setJWT","loginInfo","setLoginInfo","setMetaInformation","FeatureCollectionDispatchContext","pwFieldRef","useRef","userFieldRef","modalBodyStyle","overflowY","overflowX","maxHeight","user","_setUser","pw","setPw","cacheDataAvailable","setCacheDataAvailable","window","localforage","setUser","setItem","appKey","getItem","userInCache","dataValueInCache","toDate","current","focus","select","login","btoa","responseWithJWT","setTimeout","catch","err","Modal","size","show","keyboard","Header","Title","Icon","Body","Form","Group","controlId","Label","Control","ref","onChange","onKeyPress","event","placeholder","margin","maxWidth","flexShrink","Button","CACHE_JWT","variant","Waiting","waiting","selectedFeature","FeatureCollectionContext","properties","dateInfo","jwtPayload","actiontext","logout","metaInformation","t","Date","atob","split","sub","titleContent","Dexie","schema","version","stores","initTables","App","backgroundModes","_setJWT","setLoggedOut","jwtInCache","stoerfallResult","problem","getInternetExplorerVersion","mode","layerKey","baseLayerConf","defaultLayerConf","namedLayers","cismetLight","pane","cismetText","TopicMapContextProvider","persistenceSettings","ui","featureCollection","responsive","styling","additionalLayerConfiguration","initialActive","layer","MapLibreLayer","style_","kanal","gewaesser","backgroundConfigurations","lbk","layerkey","layerkey_","src","stadtplan","vector","referenceSystem","MappingConstants","crs3857","mapEPSGCode","referenceSystemDefinition","proj4crs3857def","maskingPolygon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9eb9a6ed.chunk.js","sourcesContent":["const APPERSION = \"0.7.7\";\nconst APPHASH = \"#fc87d82082ea757cc42200738738b1d9d5e3c7ad\";\n\nexport const getApplicationVersion = () => {\n  /*eslint-disable no-useless-concat*/\n  if (APPERSION === \"%APPLICATION\" + \"_\" + \"VERSION%\") {\n    return \"dev-hot-reload\";\n  } else {\n    return APPERSION;\n  }\n};\nexport const getApplicationHash = () => {\n  if (APPHASH === \"%APPLICATION\" + \"_\" + \"HASH%\") {\n    return \"#dev-hot-reload\";\n  } else {\n    return APPHASH;\n  }\n};\n","import { useContext } from \"react\";\nimport { UIDispatchContext } from \"react-cismap/contexts/UIContextProvider\";\nimport { version as reactCismapVersion } from \"react-cismap/meta\";\nimport { scroller } from \"react-scroll\";\nimport { getApplicationVersion } from \"../version\";\n\nconst Footer = () => {\n  const { setAppMenuActiveMenuSection } = useContext(UIDispatchContext);\n\n  return (\n    <div style={{ fontSize: \"11px\" }}>\n      <b>Hintergrundkarten</b>: Stadtkarte 2.0 © RVR | True Orthophoto 2020 © Stadt Wuppertal |\n      Openmaptiles basierte Vectorkarte (hosted by cismet){\" \"}\n      <a\n        className='pleaseRenderAsLink'\n        onClick={() => {\n          setAppMenuActiveMenuSection(\"help\");\n          scroller.scrollTo(\"Datengrundlage\", { containerId: \"myMenu\" });\n        }}\n      >\n        (Details und Nutzungsbedingungen)\n      </a>\n      <br />\n      <div>\n        <b>\n          {document.title} v{getApplicationVersion()}\n        </b>\n        :{\" \"}\n        <a href='https://cismet.de/' target='_cismet'>\n          cismet GmbH\n        </a>{\" \"}\n        auf Basis von{\" \"}\n        <a href='http://leafletjs.com/' target='_more'>\n          Leaflet\n        </a>{\" \"}\n        und{\" \"}\n        <a href='https://cismet.de/#refs' target='_cismet'>\n          cids | react-cismap v{reactCismapVersion}\n        </a>{\" \"}\n        |{\" \"}\n        <a\n          target='_blank'\n          rel='noopener noreferrer'\n          href='https://cismet.de/datenschutzerklaerung.html'\n        >\n          Datenschutzerklärung (Privacy Policy)\n        </a>\n      </div>\n    </div>\n  );\n};\nexport default Footer;\n","import { useContext } from \"react\";\nimport { UIDispatchContext } from \"react-cismap/contexts/UIContextProvider\";\nimport { getSimpleHelpForTM } from \"react-cismap/tools/uiHelper\";\nimport ConfigurableDocBlocks from \"react-cismap/topicmaps/ConfigurableDocBlocks\";\nimport DefaultSettingsPanel from \"react-cismap/topicmaps/menu/DefaultSettingsPanel\";\nimport ModalApplicationMenu from \"react-cismap/topicmaps/menu/ModalApplicationMenu\";\nimport Section from \"react-cismap/topicmaps/menu/Section\";\nimport MenuFooter from \"./MenuFooter\";\n\nconst MyMenu = () => {\n  const { setAppMenuActiveMenuSection } = useContext(UIDispatchContext);\n  const simpleHelp = undefined;\n  return (\n    <ModalApplicationMenu\n      menuIcon={\"bars\"}\n      menuTitle={\"Einstellungen und Kompaktanleitung\"}\n      menuIntroduction={\n        <span>\n          Über <strong>Einstellungen</strong> können Sie die Darstellung der Hintergrundkarte und\n          der Objekte an Ihre Vorlieben anpassen. Wählen Sie <strong>Kompaktanleitung</strong> für\n          detailliertere Bedienungsinformationen.enungsinformationen.\n        </span>\n      }\n      menuSections={[\n        <DefaultSettingsPanel\n          key='settings'\n          skipFilterTitleSettings={true}\n          skipClusteringSettings={true}\n          skipSymbolsizeSetting={true}\n        />,\n\n        <Section\n          key='help'\n          sectionKey='help'\n          sectionTitle='Kompaktanleitung'\n          sectionBsStyle='default'\n          sectionContent={\n            <ConfigurableDocBlocks configs={getSimpleHelpForTM(document.title, simpleHelp)} />\n          }\n        />,\n      ]}\n      menuFooter={<MenuFooter />}\n    />\n  );\n};\nexport default MyMenu;\n","import { useContext } from \"react\";\n\nimport { ResponsiveTopicMapContext } from \"react-cismap/contexts/ResponsiveTopicMapContextProvider\";\n\nconst Comp = () => {\n  const { windowSize } = useContext(ResponsiveTopicMapContext);\n\n  return (\n    <div>\n      <div\n        style={{\n          position: \"absolute\",\n          top: (windowSize?.height || 500) / 2 - 1,\n          width: windowSize?.width || \"100%\",\n          height: \"2px\",\n          backgroundColor: \"#00000023\",\n          zIndex: \"100000\",\n          pointerEvents: \"none\",\n        }}\n      ></div>\n      <div\n        style={{\n          position: \"absolute\",\n          left: (windowSize?.width || 500) / 2 - 1,\n          height: windowSize?.height || \"100%\",\n          width: \"2px\",\n          backgroundColor: \"#00000023\",\n          zIndex: \"100000\",\n          pointerEvents: \"none\",\n        }}\n      ></div>\n      <div\n        style={{\n          borderRadius: \"50%\",\n          position: \"absolute\",\n          left: (windowSize?.width || 500) / 2 - 10,\n          top: (windowSize?.height || 500) / 2 - 10,\n          height: \"20px\",\n          width: \"20px\",\n          backgroundColor: \"#00000023\",\n          zIndex: \"100000\",\n          pointerEvents: \"none\",\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default Comp;\n","import Dexie from 'dexie';\nimport Flatbush from 'flatbush';\nimport turf from 'turf';\n\nexport const CACHE_JWT = \"--cached--data--\";\n\nexport const initTables = (prefix, daqKeys) => {\n    var db = new Dexie(prefix);\n    var schema = {};\n    for (const key of daqKeys) {\n        schema[key] = \"gid\";\n    }\n    schema['daq_meta'] = \"++id,name,md5,time\";\n    schema['anprechp'] = \"id\";\n    schema['zustaendigkeit'] = \"id,tabelle,referenzfeld,referenz,[tabelle+referenzfeld+referenz]\";\n\n    db.version(10).stores(schema);\n\n    return db;\n}\n\nexport const md5ActionFetchDAQ4Dexie = async (prefix, apiUrl, jwt, daqKey, db) => {\n    const allObjects = await db.table('daq_meta').get({name: daqKey});\n    var md5InCache = null;\n\n    if (allObjects != null) {\n        md5InCache = allObjects.md5;\n    }\n  \n    console.log(\"DAQ for \" + daqKey);\n\n    let taskParameters = {\n      parameters: {\n        daqKey,\n        md5: md5InCache || \"-\",\n      },\n    };\n  \n    let fd = new FormData();\n    fd.append(\n      \"taskparams\",\n      new Blob([JSON.stringify(taskParameters)], {\n        type: \"application/json\",\n      })\n    );\n  \n    if (jwt === CACHE_JWT) {\n      const data = 'data retrieved';\n      \n      //go for result.time after the new version of the action is live\n      const time = allObjects.time;\n      return new Promise((resolve, reject) => {\n        resolve({ data, time });\n      });\n    } else {\n      const response = await fetch(\n        apiUrl + \"/actions/WUNDA_BLAU.dataAquisition/tasks?resultingInstanceType=result\",\n        {\n          method: \"POST\",\n          // method: \"GET\",\n          headers: {\n            Authorization: \"Bearer \" + jwt,\n            // \"Content-Type\": \"application/json\",\n            // Accept: \"application/json\",\n          },\n          body: fd,\n        }\n      );\n  \n      if (response.status >= 200 && response.status < 300) {\n        const content = await response.json();\n        if (content.res) {\n          try {\n            const result = JSON.parse(content.res);\n            let status = result.status;\n            let data, time;\n  \n            if (status === 200) {\n              console.log(\"DAQ cache miss for \" + daqKey);\n  \n              data = JSON.parse(result.content);\n              time = result.time;\n              var newData = {};\n              newData['md5'] = result.md5;\n              newData['time'] = time;\n              newData['name'] = daqKey;\n              console.log('new md5: ' + newData.md5);\n\n              if (allObjects != null) {\n                await db.table('daq_meta').update(allObjects.id, newData);\n              } else {\n                db.table('daq_meta').add(newData);\n              } \n//              console.time(\"index time\"+daqKey)\n              if (data && data[0] && data[0].geojson) {\n                await indexGeometries(data, daqKey, prefix, db);\n              }\n//              console.timeEnd(\"index time\"+daqKey)\n            } else if (status === 304) {\n              console.log(\"DAQ cache hit for \" + daqKey);\n              //go for result.time after the new version of the action is live\n\n              if (allObjects != null) {\n                time = allObjects.time;\n                data = 'data retrieved';\n              }\n            }\n  \n            return new Promise((resolve, reject) => {\n              resolve({ data, time });\n            });\n          } catch (e) {\n            return new Promise((resolve, reject) => {\n              reject({\n                status: 500,\n                desc:\n                  \"error when parsing the server result. probably the content has the wrong structure\",\n                content,\n                exception: e,\n              });\n            });\n          }\n        } else {\n          return new Promise((resolve, reject) => {\n            reject({\n              status: 500,\n              desc: \"error when parsing the server result.\",\n              content,\n            });\n          });\n        }\n      } else if (response.status === 401) {\n        return new Promise((resolve, reject) => {\n          reject({ status: response.status, desc: \"unauthorized\" });\n        });\n      } else {\n        return new Promise((resolve, reject) => {\n          reject({ status: response.status, desc: \"unknown\" });\n        });\n      }\n    }\n  };\n  \n\n  export const indexGeometries = async (content, table, prefix, db) => {\n    const index = new Flatbush(content.length);\n    const tableObject = db.table(table);\n    await tableObject.clear();\n\n    const data=[];\n\n    for (const el of content) {\n      const geo = getBoundsFromArea(el.geojson);\n      var i = index.add(geo[0][1], geo[0][0], geo[1][1], geo[1][0]);\n      var newData = {};\n      newData['gid'] = i;\n      newData['data'] = el;\n      data.push(newData);\n    }\n\n    await tableObject.bulkPut(data);\n    index.finish();\n    \n    const allObjects = await db.table('daq_meta').get({name: table});\n    var changes = {};\n    changes['pol_index'] = index.data;\n    await db.table('daq_meta').update(allObjects.id, changes);\n  }\n\n  export const indexAnsprechpartner = async (content, table, db) => {\n    const tableObject = db.table('anprechp');\n    await tableObject.clear();\n\n    const data=[];\n    var i = 0;\n\n    for (const el of content) {\n      var newData = {};\n      newData['id'] = el.id;\n      newData['data'] = el;\n      data.push(newData);\n    }\n\n    await tableObject.bulkPut(data);\n  }\n\n  export const indexAnsprechpartnerZustaendigkeit = async (content, table, db) => {\n    const tableObject = db.table('zustaendigkeit');\n    await tableObject.clear();\n\n    const data=[];\n    var i = 0;\n\n    for (const el of content) {\n      var newData = {};\n      newData['id'] = el.id;\n      newData['tabelle'] = el.tabelle;\n      newData['referenz'] = el.referenz;\n      newData['referenzfeld'] = el.referenzfeld;\n      newData['data'] = el;\n      data.push(newData);\n    }\n\n    await tableObject.bulkPut(data);\n  }\n\n  export const getBoundsFromArea = (area) => {\n    const bboxArray = turf.bbox(area);\n    const corner1 = [bboxArray[1], bboxArray[0]];\n    const corner2 = [bboxArray[3], bboxArray[2]];\n    var bounds = [corner1, corner2];\n\n    return bounds;\n  }","import Flatbush from 'flatbush';\nimport {getBoundsFromArea} from \"./md5Fetching\";\nimport booleanIntersects from \"@turf/boolean-intersects\";\nimport turfDistance from \"@turf/distance\";\nimport turfCenter from \"@turf/center\";\nimport proj4 from \"proj4\";\n\nexport const nameMapping = {};\nnameMapping['StoerfallBetriebeKlasse1']='betrieb';\nnameMapping['StoerfallBetriebeKlasse2']='betrieb';\nnameMapping['wasserverbaende']='name';\nnameMapping['wasserschutzgebiete']='zone';\nnameMapping['autobahnmeisterei']='bezirk';\nnameMapping['landschaftsschutzgebiete']='sg_typ';\nnameMapping['naturschutzgebiete']='sg_nummer';\nnameMapping['strassenmeisterei']='bezirk';\nnameMapping['bimschNrw']='astnr';\nnameMapping['bimschWuppertal']='astnr';\nnameMapping['trinkwasserbrunnen']='str_name';\nnameMapping['stadtFlurstuecke']='dienststellen';\n\nexport const daqTableMapping = {};\ndaqTableMapping['StoerfallBetriebeKlasse1']='stoerfallbetriebe_klasse1';\ndaqTableMapping['StoerfallBetriebeKlasse2']='stoerfallbetriebe_klasse2';\ndaqTableMapping['wasserverbaende']='wasserverbaende';\ndaqTableMapping['wasserschutzgebiete']='wasserschutzgebiete';\ndaqTableMapping['autobahnmeisterei']='autobahnmeisterei';\ndaqTableMapping['landschaftsschutzgebiete']='landschaftsschutzgebiete';\ndaqTableMapping['naturschutzgebiete']='sg_naturschutzgebietetyp';\ndaqTableMapping['strassenmeisterei']='strassenmeisterei';\ndaqTableMapping['bimschNrw']='bimsch_nrw';\ndaqTableMapping['bimschWuppertal']='bimsch_wuppertal';\ndaqTableMapping['trinkwasserbrunnen']='trinkwasserbrunnen';\ndaqTableMapping['stadtFlurstuecke']='stadt_flurstuecke';\n\nexport const searchForFeatures = async (db, daqKeys, geom) => {\n    var hits = [];\n    const geomBounds = getBoundsFromArea(geom);\n    var ansprechpartner = db.table('anprechp');\n    var ansprechpartnerZustaendigkeit = db.table('zustaendigkeit');\n    var trinkwasserbrunnen = null;\n    var trinkwasserbrunnenDist = null;\n    var bimsch = null;\n    var bimschDist = null;\n    var allBimsch = [];\n    var allTrinkwasserbrunnen = [];\n\n    for (const key of daqKeys) {\n        const metaTable = await db.table('daq_meta');\n\n        if (metaTable) {\n            const tableObjects = await metaTable.get({name: key});\n            const otable  = await db.table(key);\n\n            if (tableObjects) {\n                var serIndex = tableObjects.pol_index;\n\n                if (serIndex != null) {\n                    const index = Flatbush.from(serIndex);\n                    var indizes = index.search(geomBounds[0][1], geomBounds[0][0], geomBounds[1][1], geomBounds[1][0]);\n\n                    if (indizes != null) {\n                        for (var i of indizes) {\n                            var o = await otable.get(i);\n\n                            if (o != null) {\n                                var obj = o.data;\n                                obj['typ'] = key;\n                                obj['default_name'] = obj[nameMapping[key]];\n                                var geoj = obj.geojson;\n                            \n                                if (booleanIntersects(geoj, geom)) {\n                                    if (key === 'trinkwasserbrunnen') {\n                                        var distanceInMeters = getDistance(geom, geoj);\n                                        await addAnsprechpartner(key, obj, ansprechpartner, ansprechpartnerZustaendigkeit)\n                                        obj['abstand'] = Math.round(distanceInMeters);\n\n                                        if (trinkwasserbrunnenDist === null || trinkwasserbrunnenDist > distanceInMeters) {\n                                            if (trinkwasserbrunnen !== null) {\n                                                allTrinkwasserbrunnen.push(trinkwasserbrunnen);\n                                            }\n                                            trinkwasserbrunnen = obj;\n                                            trinkwasserbrunnenDist = distanceInMeters;\n                                        } else {\n                                            allTrinkwasserbrunnen.push(obj);\n                                        }\n                                    } else if (key === 'bimschNrw' || key === 'bimschWuppertal') {\n                                        distanceInMeters = getDistance(geom, geoj);\n                                        await addAnsprechpartner(key, obj, ansprechpartner, ansprechpartnerZustaendigkeit)\n                                        obj['abstand'] = Math.round(distanceInMeters);\n\n                                        if (bimschDist === null || bimschDist > distanceInMeters) {\n                                            if (bimsch !== null) {\n                                                allBimsch.push(bimsch);\n                                            }\n                                            bimsch = obj;\n                                            bimschDist = distanceInMeters;\n                                        } else {\n                                            allBimsch.push(obj);\n                                        }\n                                    } else {\n                                        await addAnsprechpartner(key, obj, ansprechpartner, ansprechpartnerZustaendigkeit)\n                                        hits.push(obj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    if (trinkwasserbrunnen !== null) {\n        hits.push(trinkwasserbrunnen);\n        allTrinkwasserbrunnen.sort(compareDist);\n        Array.prototype.push.apply(hits, allTrinkwasserbrunnen);\n    } \n\n    if (bimsch !== null) {\n        hits.push(bimsch);\n        allBimsch.sort(compareDist);\n        Array.prototype.push.apply(hits, allBimsch);\n    }\n\n    return hits;\n}\n\nconst compareDist = (a, b) => {\n    if (a.abstand < b.abstand) {\n        return -1;\n    } else if (a.abstand > b.abstand) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\nexport const getDistance = (geom, geojson) => {\n    var geomCoords = [geom.geometry.coordinates[0], geom.geometry.coordinates[1]];\n    var transformedGeom = proj4(proj4.defs(\"EPSG:3857\"), proj4.defs(\"EPSG:4326\"), geomCoords);\n    var brunnenCenter = turfCenter(geojson);\n    var brunnenCoords = [brunnenCenter.geometry.coordinates[0], brunnenCenter.geometry.coordinates[1]];\n    var transformedBrunnen = proj4(proj4.defs(\"EPSG:3857\"), proj4.defs(\"EPSG:4326\"), brunnenCoords);\n    var dist = turfDistance(transformedGeom, transformedBrunnen, {unit: 'kilometers'});\n    var distanceInMeters = dist * 1000 * 1.6;\n\n    return distanceInMeters;\n}\n\nexport const addAnsprechpartner = async (daqKey, dataObject, ansprechpartner, ansprechpartnerZustaendigkeit) => {\n    var table = daqTableMapping[daqKey];\n    var keys = Object.keys(dataObject);\n    var found = false;\n\n    for (const key of keys) {\n        if (key !== 'geojson' && dataObject[key] != undefined) {\n            var anprechreferenz = await ansprechpartnerZustaendigkeit.get({tabelle: table, referenz: dataObject[key], referenzfeld: key});\n            \n            if (anprechreferenz) {\n                var anspr = await ansprechpartner.get({id: '' + anprechreferenz.data.ansprechpartner});\n\n                if (anspr) {\n                    removeNullValues(anspr.data);\n                    dataObject['ansprechpartner'] = anspr.data;\n                    found = true;\n                }\n                break;\n            }\n        }\n    }\n\n    if (found === false) {\n        var anprechreferenz = await ansprechpartnerZustaendigkeit.get({tabelle: table, referenz: 'null', referenzfeld: 'null'});\n\n        if (anprechreferenz) {\n            var anspr = await ansprechpartner.get({id: '' + anprechreferenz.data.ansprechpartner});\n            \n            if (anspr) {\n                removeNullValues(anspr.data);\n                dataObject['ansprechpartner'] = anspr.data;\n            }\n        }\n    }\n\n    return dataObject;\n}\n\nexport const removeNullValues = (obj) => {\n    var keys = Object.keys(obj);\n\n    for (const key of keys) {\n        if (obj[key] === null) {\n            obj[key] = undefined;\n        }\n    }\n}\n\nexport const offlineDataAvailable = async (db, daqKeys) => {\n    var lastTime = null;\n\n    for (const key of daqKeys) {\n        const metaTable = await db.table('daq_meta');\n\n        if (metaTable != null) {\n            const tableObjects = await metaTable.get({name: key});\n\n            if (tableObjects != null) {\n                lastTime = tableObjects.time;\n            } else {\n                console.log('offline data for key ' + key + ' not available');\n                return null;\n            }\n        }\n    }\n\n    return lastTime;\n}","import ResponsiveInfoBox from \"react-cismap/topicmaps/ResponsiveInfoBox\";\nimport { useContext } from \"react\";\nimport { UIContext, UIDispatchContext } from \"react-cismap/contexts/UIContextProvider\";\nimport IconComp from \"react-cismap/commons/Icon\";\nimport {\n  faArchive,\n  faBiohazard,\n  faCity,\n  faFaucet,\n  faHandHoldingWater,\n  faIndustry,\n  faLeaf,\n  faRoad,\n  faWater,\n  faTree,\n  faExclamationCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Icon } from \"react-fa\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport Loadable from \"react-loading-overlay\";\n\nconst InfoBox = ({ hits }) => {\n  const { collapsedInfoBox } = useContext(UIContext);\n  const { setCollapsedInfoBox, setSecondaryInfoVisible } = useContext(UIDispatchContext);\n  var hitsObject = {};\n\n  if (Array.isArray(hits)) {\n    for (var el of hits) {\n      switch (el.typ) {\n        case \"trinkwasserbrunnen\":\n          if (hitsObject.brunnen === undefined) {\n            hitsObject.brunnen = [];\n          }\n          hitsObject.brunnen.push(el);\n          break;\n        case \"bimschNrw\":\n        case \"bimschWuppertal\":\n          if (hitsObject.bimsch === undefined) {\n            hitsObject.bimsch = [];\n          }\n          hitsObject.bimsch.push(el);\n          break;\n        case \"strassenmeisterei\":\n          if (hitsObject.strassenmeisterei === undefined) {\n            hitsObject.strassenmeisterei = [];\n          }\n          hitsObject.strassenmeisterei.push(el);\n          break;\n        case \"naturschutzgebiete\":\n        case \"landschaftsschutzgebiete\":\n          if (hitsObject.schutzgebiete === undefined) {\n            hitsObject.schutzgebiete = [];\n          }\n          hitsObject.schutzgebiete.push(el);\n          break;\n        case \"autobahnmeisterei\":\n          if (hitsObject.autobahnmeisterei === undefined) {\n            hitsObject.autobahnmeisterei = [];\n          }\n          hitsObject.autobahnmeisterei.push(el);\n          break;\n        case \"wasserschutzgebiete\":\n          if (hitsObject.wasserschutzgebiete === undefined) {\n            hitsObject.wasserschutzgebiete = [];\n          }\n          hitsObject.wasserschutzgebiete.push(el);\n          break;\n        case \"wasserverbaende\":\n          if (hitsObject.verbaende === undefined) {\n            hitsObject.verbaende = [];\n          }\n          hitsObject.verbaende.push(el);\n          break;\n        case \"StoerfallBetriebeKlasse1\":\n        case \"StoerfallBetriebeKlasse2\":\n          if (hitsObject.stoerfallbetriebe === undefined) {\n            hitsObject.stoerfallbetriebe = [];\n          }\n          hitsObject.stoerfallbetriebe.push(el);\n          break;\n        case \"stadtFlurstuecke\":\n          if (hitsObject.stadtFlurstuecke === undefined) {\n            hitsObject.stadtFlurstuecke = [];\n          }\n          hitsObject.stadtFlurstuecke.push(el);\n          break;\n      }\n    }\n  }\n\n  const header = (\n    <table style={{ width: \"100%\" }}>\n      <tbody>\n        <tr>\n          <td\n            style={{\n              textAlign: \"left\",\n              verticalAlign: \"top\",\n              background: \"grey\",\n              color: \"black\",\n              opacity: \"0.9\",\n              paddingLeft: \"0px\",\n              paddingTop: \"0px\",\n              paddingBottom: \"0px\",\n            }}\n          >\n            <span> Analyseergebnis: ({Array.isArray(hits) ? hits.length : \"-\"})</span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n\n  let fontSize = 30;\n  let activeStyle = { border: 0, borderStyle: \"solid\", fontSize, textAlign: \"center\", flexGrow: 1 };\n  let inactiveStyle = {\n    border: 0,\n    borderStyle: \"solid\",\n    fontSize,\n    textAlign: \"center\",\n    color: \"#dddddd\",\n    flexGrow: 1,\n  };\n  let subtextStyle = { fontSize: 12, minHeight: \"18px\" };\n\n  let gridStyle = {\n    display: \"grid\",\n    gridGap: \"5px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\",\n    verticalAlign: \"center\",\n  };\n  if (collapsedInfoBox === true) {\n    fontSize = 23;\n    subtextStyle = { fontSize: 9, minHeight: \"15px\" };\n    gridStyle = {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"center\",\n      verticalAlign: \"center\",\n      alignContent: \"space-around\",\n    };\n  }\n\n  let symbols = (\n    <div\n      style={{ paddingRight: 9 }}\n      onClick={() => {\n        setSecondaryInfoVisible(true);\n      }}\n    >\n      <Loadable active={hits === undefined} spinner text={\"Suchen\"}>\n        <div style={gridStyle}>\n          {/* Trinkwasserbrunnen */}\n          <div style={hitsObject?.brunnen !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faFaucet} />\n            <div style={subtextStyle}>\n              {hitsObject?.brunnen !== undefined\n                ? hitsObject?.brunnen[0].abstand + \" m\" + (hitsObject?.brunnen.length > 1 ? ' (+' + (hitsObject?.brunnen.length - 1) + ')' : '')\n                : \"\"}\n            </div>\n          </div>\n          {/* Autobahnmeisterei */}\n          {/* <div style={hitsObject?.autobahnmeisterei !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faRoad} />\n            <div style={subtextStyle}>{(hitsObject?.autobahnmeisterei !== undefined ? hitsObject?.autobahnmeisterei[0].default_name : '')}</div>\n          </div> */}\n          {/* Straßenmeisterei */}\n          {/* <div style={hitsObject?.strassenmeisterei !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faRoad} />\n            <div style={subtextStyle}>{(hitsObject?.strassenmeisterei !== undefined ? hitsObject?.strassenmeisterei[0].default_name : '')}</div>\n          </div> */}\n          {/* BIMSchG */}\n          <div style={hitsObject?.bimsch !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faIndustry} />\n            <div style={subtextStyle}>\n              {hitsObject?.bimsch !== undefined\n                ? (hitsObject?.bimsch[0].typ === \"bimschNrw\" ? \"BRD - \" : \"UIB - \") +\n                  hitsObject?.bimsch[0].abstand +\n                  \" m\"  + (hitsObject?.bimsch.length > 1 ? ' (+' + (hitsObject?.bimsch.length - 1) + ')' : '')\n                : \"\"}\n            </div>\n          </div>\n          {/* Wasserschutzgebiete */}\n          <div style={hitsObject?.wasserschutzgebiete !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faHandHoldingWater} />\n            <div style={subtextStyle}>\n              {hitsObject?.wasserschutzgebiete !== undefined\n                ? hitsObject?.wasserschutzgebiete[0].default_name  + (hitsObject?.wasserschutzgebiete.length > 1 ? ' (+' + (hitsObject?.wasserschutzgebiete.length - 1) + ')' : '')\n                : \"\"}\n            </div>\n          </div>\n          {/* Verbände */}\n          {/* <div style={hitsObject?.verbaende !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faWater} />\n            <div style={subtextStyle}>\n              {hitsObject?.verbaende !== undefined ? hitsObject?.verbaende[0].default_name : \"\"}\n            </div>\n          </div> */}\n          {/* Störfallbetriebe */}\n          <div style={hitsObject?.stoerfallbetriebe !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faExclamationCircle} />\n            <div style={subtextStyle}>\n              {hitsObject?.stoerfallbetriebe !== undefined\n                ? hitsObject?.stoerfallbetriebe[0].default_name  + (hitsObject?.stoerfallbetriebe[0].typ === 'StoerfallBetriebeKlasse1' ?  '-A1' :  '-A2') + (hitsObject?.stoerfallbetriebe.length > 1 ? ' (+' + (hitsObject?.stoerfallbetriebe.length - 1) + ')' : '')\n                : \"\"}\n            </div>\n          </div>\n          {/* städt. Flurstücke */}\n          <div style={hitsObject?.stadtFlurstuecke !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faCity} />\n            <div style={subtextStyle}>\n              {hitsObject?.stadtFlurstuecke !== undefined\n                ? hitsObject?.stadtFlurstuecke[0].default_name + (hitsObject?.stadtFlurstuecke.length > 1 ? ' (+' + (hitsObject?.stadtFlurstuecke.length - 1) + ')' : '')\n                : \"\"}\n            </div>\n          </div>\n          {/* Landschafts und Naturschutzgebiete */}\n          <div style={hitsObject?.schutzgebiete !== undefined ? activeStyle : inactiveStyle}>\n            <FontAwesomeIcon style={{ fontSize }} icon={faTree} />\n            <div style={subtextStyle}>\n              {hitsObject?.schutzgebiete !== undefined\n                ? (hitsObject?.schutzgebiete[0].typ === 'naturschutzgebiete' ? 'NSG' : 'LSG') + (hitsObject?.schutzgebiete.length > 1 ? ' (+' + (hitsObject?.schutzgebiete.length - 1) + ')' : '')\n                : \"\"}\n            </div>\n          </div>\n        </div>\n      </Loadable>\n    </div>\n  );\n  return (\n    <ResponsiveInfoBox\n      panelClick={() => {}}\n      pixelwidth={300}\n      header={header}\n      collapsedInfoBox={collapsedInfoBox}\n      setCollapsedInfoBox={setCollapsedInfoBox}\n      isCollapsible={true}\n      handleResponsiveDesign={true}\n      infoStyle={{ padding: \"0px\" }}\n      secondaryInfoBoxElements={undefined}\n      alwaysVisibleDiv={collapsedInfoBox ? symbols : <div />}\n      collapsibleDiv={!collapsedInfoBox ? symbols : <div />}\n      fixedRow={true}\n    />\n  );\n};\nexport default InfoBox;\n","import React, { useContext } from \"react\";\nimport { FeatureCollectionContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport SecondaryInfoPanelSection from \"react-cismap/topicmaps/SecondaryInfoPanelSection\";\nimport SecondaryInfo from \"react-cismap/topicmaps/SecondaryInfo\";\nimport { TopicMapContext } from \"react-cismap/contexts/TopicMapContextProvider\";\nimport IconLink from \"react-cismap/commons/IconLink\";\nimport { getApplicationVersion } from \"../version\";\nimport { version as reactCismapVersion } from \"react-cismap/meta\";\n\nconst objectifyHits = (hits) => {\n  const hitObject = {};\n\n  // const testAnsprechpartner = {\n  //   organisation: \"cismet GmbH\",\n  //   name: \"Thorsten Hell\",\n  //   email: \"th@cismet.de\",\n  //   tel: \"0681 965901 20\",\n  //   bemerkung: \"nur zum testen\",\n  // };\n  if (hits) {\n    for (const hit of hits) {\n//      hit.ansprechpartner = testAnsprechpartner;\n      if (hitObject[hit.typ]) {\n        hitObject[hit.typ].push(hit);\n      } else {\n        hitObject[hit.typ] = [hit];\n      }\n    }\n  }\n  return hitObject;\n};\n\nconst footer = (\n  <div style={{ fontSize: \"11px\" }}>\n    <div>\n      <b>\n        {document.title} v{getApplicationVersion()}\n      </b>\n      :{\" \"}\n      <a href='https://cismet.de/' target='_cismet'>\n        cismet GmbH\n      </a>{\" \"}\n      auf Basis von{\" \"}\n      <a href='http://leafletjs.com/' target='_more'>\n        Leaflet\n      </a>{\" \"}\n      und{\" \"}\n      <a href='https://cismet.de/#refs' target='_cismet'>\n        cids | react-cismap v{reactCismapVersion}\n      </a>{\" \"}\n      |{\" \"}\n      <a\n        target='_blank'\n        rel='noopener noreferrer'\n        href='https://cismet.de/datenschutzerklaerung.html'\n      >\n        Datenschutzerklärung (Privacy Policy)\n      </a>\n    </div>\n  </div>\n);\n\nconst getAnsprechpartnerLinks = (ansprechpartner) => {\n  console.log(\"ansprechpartner\", ansprechpartner);\n\n  let links = [];\n  if (ansprechpartner.tel) {\n    links.push(\n      <span style={{ padding: 4 }}>\n        <IconLink\n          key={`IconLink.tel`}\n          tooltip='Ansprechpartner Anrufen'\n          href={\"tel:\" + ansprechpartner.tel}\n          iconname='phone'\n        />\n      </span>\n    );\n  }\n  if (ansprechpartner.email) {\n    links.push(\n      <span style={{ padding: 4 }}>\n        <IconLink\n          key={`IconLink.email`}\n          tooltip='E-Mail an Ansprechpartner schreiben'\n          href={\"mailto:\" + ansprechpartner.email}\n          iconname='envelope-square'\n          target='_blank'\n        />\n      </span>\n    );\n  }\n  if (ansprechpartner.url) {\n    links.push(\n      <span style={{ padding: 4 }}>\n        <IconLink\n          key={`IconLink.web`}\n          tooltip='Webseite'\n          href={ansprechpartner.url}\n          target='_blank'\n          iconname='external-link-square'\n        />\n      </span>\n    );\n  }\n  return links;\n};\n\nconst getAnsprechpartner = (ansprechpartner) => {\n  return (\n      <div>\n        <div style={{paddingLeft: \"auto\", paddingRight: \"auto\"}}>\n          <b>Ansprechpartner</b>\n        </div>\n        <div style={{\n          paddingLeft: 10,\n          paddingRight: 10,\n          float: \"right\",\n          paddingBottom: \"5px\",\n        }}> \n          {getAnsprechpartnerLinks(ansprechpartner)}\n        </div>\n        <div>\n          {ansprechpartner.firma}\n        </div>\n        <div>\n          {ansprechpartner.name}\n        </div>\n        <div>\n          {ansprechpartner.bemerkung}\n        </div>\n      </div>\n    );\n}\n\nconst getSeparator = (name) => {\n  return (\n    <div style={{width: \"100%\", height: \"12px\", borderBottom: \"1px solid #eeeeee\", textAlign: \"center\", marginBottom: \"15px\", marginTop: \"5px\"}}>\n    <span style={{fontSize: \"16px\", backgroundColor: \"#FFFFFF\", xcolor: \"#aaa\",padding: \"0 10px\"}}>\n      {name}\n    </span>\n</div>                \n);\n}\n\nconst getNewDistance = (distance, steps) => {\n  if (distance % steps == 0) {\n    return distance;\n  } else {\n    return (steps - distance % steps) + distance;\n  }\n}\n\nconst InfoPanel = ({ hits }) => {\n  const { history } = useContext(TopicMapContext);\n  const lat = new URLSearchParams(history.location.search).get(\"lat\");\n  const long = new URLSearchParams(history.location.search).get(\"lng\");\n  const showRawData = new URLSearchParams(history.location.search).get(\"showRawData\") !== null;\n\n  const hitObject = objectifyHits(hits);\n\n  if (hits !== undefined) {\n    const subSections = [];\n\n    const display = (desc, value, valFunc) => {\n      if (value && valFunc === undefined && Array.isArray(value) === false) {\n        return (\n          <div>\n            <b>{desc}:</b> {value}\n          </div>\n        );\n      } else if (value && valFunc === undefined && Array.isArray(value) === true) {\n        return (\n          <div>\n            <b>{desc}:</b> {value.join(\", \")}\n          </div>\n        );\n      } else if (value && valFunc !== undefined) {\n        return (\n          <div>\n            <b>{desc}:</b> {valFunc(value)}\n          </div>\n        );\n      }\n    };\n\n    if (hits !== undefined) {\n\n      if (hitObject.wasserverbaende || hitObject.autobahnmeisterei || hitObject.strassenmeisterei || hitObject.stadtFlurstuecke) {\n        subSections.push(\n          <SecondaryInfoPanelSection key='standort' bsStyle='success' header={\"Zuständigkeiten\"}>\n            {hitObject.wasserverbaende && getSeparator('Wasserverband')}\n\n            {hitObject.wasserverbaende &&\n              hitObject.wasserverbaende.map((value, index) => {\n                return (\n                  <div key={\"wasserverbaende_\" + index}>\n                    <div>\n                      <b>Name: </b>\n                      {value.name}\n                    </div>\n                    <br />\n                    {value.ansprechpartner && getAnsprechpartner(value.ansprechpartner)}\n                  </div>\n                );\n              })}\n\n            {hitObject.autobahnmeisterei && getSeparator('Autobahnmeisterei')}\n            {/* mehrere möglich*/}\n            {hitObject.autobahnmeisterei &&\n              hitObject.autobahnmeisterei.map((value, index) => {\n                return (\n                  <div key={\"autm_\"+index}>\n                    {index > 0 && <br></br>}\n                    <div>\n                      <b>zuständige Autobahnmeisterei: </b>\n                      {value.default_name}\n                    </div>\n                    <br />\n                    {value.ansprechpartner && getAnsprechpartner(value.ansprechpartner)}\n                  </div>\n                );\n              })}\n              \n            {hitObject.strassenmeisterei && getSeparator('Straßenmeisterei')}\n            {hitObject.strassenmeisterei && (\n              <div>\n                <div\n                  style={{\n                    paddingLeft: 10,\n                    paddingRight: 10,\n                    float: \"right\",\n                    paddingBottom: \"5px\",\n                  }}\n                >\n                </div>\n                <div\n                  style={{\n                    paddingLeft: 10,\n                    paddingRight: 10,\n                    float: \"right\",\n                    paddingBottom: \"5px\",\n                  }}\n                ></div>\n\n                <div>\n                  <b>zuständige Straßenmeisterei: </b>\n                  {hitObject.strassenmeisterei[0].default_name}\n                </div>\n                <br />\n                {hitObject.strassenmeisterei[0].ansprechpartner && getAnsprechpartner(hitObject.strassenmeisterei[0].ansprechpartner)}\n              </div>\n            )}\n\n            {hitObject.stadtFlurstuecke && getSeparator('Städtische Flurstücke')}\n\n            {hitObject.stadtFlurstuecke &&\n              hitObject.stadtFlurstuecke.map((value, index) => {\n                return (\n                  <div key={\"stadtFlurstuecke_\" + index}>\n                    {index > 0 && <br></br>}\n                    <div>\n                      <b>Flurstück: </b>\n                      {value.flurstueck}\n                    </div>\n                    <div>\n                      <b>Dienststelle: </b>\n                      {value.dienststellen.replace('#', ',')}\n                    </div>\n                    <br />\n                    {value.ansprechpartner && getAnsprechpartner(value.ansprechpartner)}\n                  </div>\n                );\n              })}\n          </SecondaryInfoPanelSection>\n        );\n      }\n\n\n      if (hitObject.trinkwasserbrunnen || hitObject.bimschWuppertal || hitObject.bimschNrw || hitObject.wasserschutzgebiete \n          || hitObject.naturschutzgebiete || hitObject.landschaftsschutzgebiete || hitObject.StoerfallBetriebeKlasse1 || hitObject.StoerfallBetriebeKlasse2) {\n        var distance = null;\n\n        subSections.push(\n          <SecondaryInfoPanelSection key='standort' bsStyle='primary' header={\"Schutzgebiete und Anlagen\"}>\n            {hitObject.trinkwasserbrunnen && getSeparator('Trinkwasserbrunnen')}\n\n            {hitObject.trinkwasserbrunnen &&\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  alignItems: \"baseline\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <div style={{width: \"100%\"}}>\n                <div>\n                  <span style={{ display: 'inline-block', width: 70, marginBottom: 5}} ><b>Abstand</b></span>\n                </div>\n              \n                {hitObject.trinkwasserbrunnen &&\n                  hitObject.trinkwasserbrunnen.map((value, index) => {\n                    return (\n                      <div>\n                        {index > 0 && <br></br>}\n                        <span style={{ display: 'inline-block', width: 70}}>\n                          <b>{value.abstand} m</b>\n                        </span>\n                        <span key={\"trinkwasserbrunnen_\" + index} style={{ marginLeft: 70}}>\n                          <b>Adresse: </b>\n                          {value.str_name + ' ' + value.hsnr + (value.zusatz ? value.zusatz : '')}\n                        </span>\n                        <br />\n                        <br />\n                        <div key={\"trinkwasser_anprechpa_\" + index} style={{ marginLeft: 140, width: 'auto'}}>\n                          {value.ansprechpartner && getAnsprechpartner(value.ansprechpartner)}\n                        </div>\n                      </div>\n                    );\n                  })}\n              </div>\n            </div>\n          }\n          {hitObject.bimschWuppertal && getSeparator('BImschG-Anlage Wuppertal')}\n\n          {hitObject.bimschWuppertal &&\n            hitObject.bimschWuppertal.map((value, index) => {\n              return (\n                <div key={\"bimschWupp_\"+index}>\n                  {index > 0 && <br></br>}\n                  <div>\n                    <b>Betrieb: </b>\n                    {value.betrieb}\n                  </div>\n                  <div>\n                    <b>Lage: </b>\n                    {value.lage}\n                  </div>\n                  <br />\n                  {value.ansprechpartner && getAnsprechpartner(value.ansprechpartner)}\n                </div>\n              );\n            })}\n\n          {hitObject.bimschNrw && getSeparator('BImschG-Anlage NRW')}\n\n          {hitObject.bimschNrw &&\n              hitObject.bimschNrw.map((value, index) => {\n                return (\n                  <div key={\"bimschNrw_\"+index}>\n                    {index > 0 && <br></br>}\n                    <div>\n                      <b>Anlagenbezeichnung: </b>\n                      {value.anlag_bez}\n                    </div>\n                    <div>\n                      <b>Firma: </b>\n                      {value.b_firma1}\n                    </div>\n                    <br />\n                    {value.ansprechpartner && getAnsprechpartner(value.ansprechpartner)}\n                  </div>\n                );\n              })}\n\n          {hitObject.wasserschutzgebiete && getSeparator('Wasserschutzgebiet')}\n\n          {/* mehrere möglich*/}\n          {hitObject.wasserschutzgebiete &&\n            hitObject.wasserschutzgebiete.map((value, index) => {\n              return (\n                <div key={\"wasser_\"+index}>\n                  {index > 0 && <br></br>}\n                  <div>\n                    <b>Zone: </b>\n                    {value.zone}\n                  </div>\n                  <br />\n                  {value.ansprechpartner && getAnsprechpartner(value.ansprechpartner)}\n                </div>\n              );\n            })}\n\n          {hitObject.naturschutzgebiete && getSeparator('Schutzgebiet')}\n\n          {/* mehrere möglich*/}\n          {hitObject.naturschutzgebiete &&\n            hitObject.naturschutzgebiete.map((value, index) => {\n              return (\n                <div key={\"natur_\"+index}>\n                  {index > 0 && <br></br>}\n                  <div>\n                    <b>Schutzgebietstyp: </b>\n                    {value.sg_typ === 'NS' ? 'Naturschutzgebiet' : value.sg_typ}\n                  </div>\n                  <div>\n                    <b>Schutzgebiet-Nummer: </b>\n                    {value.sg_nummer}\n                  </div>\n                  <br />\n                  {value.ansprechpartner && getAnsprechpartner(value.ansprechpartner)}\n                </div>\n              );\n            })}            \n\n          {hitObject.landschaftsschutzgebiete && getSeparator('Schutzgebiet')}\n\n          {/* mehrere möglich*/}\n          {hitObject.landschaftsschutzgebiete &&\n            hitObject.landschaftsschutzgebiete.map((value, index) => {\n              return (\n                <div key={\"landschaft_\" + index}>\n                  {index > 0 && <br></br>}\n                  <div>\n                    <b>Schutzgebietstyp: </b>\n                    {value.sg_typ === 'LS' ? 'Landschaftsschutzgebiet' : value.sg_typ}\n                  </div>\n                  <br />\n                  {value.ansprechpartner && getAnsprechpartner(value.ansprechpartner)}\n                </div>\n              );\n            })}\n\n          {hitObject.StoerfallBetriebeKlasse1 && getSeparator('Störfallbetrieb Abstandsklasse 1')}\n\n          {hitObject.StoerfallBetriebeKlasse1 &&\n            hitObject.StoerfallBetriebeKlasse1.map((value, index) => {\n              return (\n                <div key={\"stoer1_\"+index}>\n                  {index > 0 && <br></br>}\n                  <div>\n                    <b>Betrieb: </b>\n                    {value.betrieb}\n                  </div>\n                  <div>\n                    <b>Lage: </b>\n                    {value.lage}\n                  </div>\n                  <br />\n                  {value.ansprechpartner && getAnsprechpartner(value.ansprechpartner)}\n                </div>\n              );\n            })}\n\n            {hitObject.StoerfallBetriebeKlasse2 && getSeparator('Störfallbetrieb Abstandsklasse 2')}\n\n            {hitObject.StoerfallBetriebeKlasse2 &&\n            hitObject.StoerfallBetriebeKlasse2.map((value, index) => {\n              return (\n                <div key={\"stoer2_\"+index}>\n                  {index > 0 && <br></br>}\n                  <div>\n                    <b>Betrieb: </b>\n                    {value.betrieb}\n                  </div>\n                  <div>\n                    <b>Lage: </b>\n                    {value.lage}\n                  </div>\n                  <br />\n                  {value.ansprechpartner && getAnsprechpartner(value.ansprechpartner)}\n                </div>\n              );\n            })}\n          </SecondaryInfoPanelSection>\n        );\n      }\n\n      if (showRawData) {\n        //remove the geometries\n        const hitsForRawDisplay = JSON.parse(JSON.stringify(hits));\n\n        for (const hit of hitsForRawDisplay) {\n          delete hit.geojson;\n        }\n\n        const hitObjectForRawDisplay = objectifyHits(hitsForRawDisplay);\n\n        subSections.push(\n          <SecondaryInfoPanelSection\n            key='standort'\n            bsStyle='info'\n            header={\"Trefferobjekte (Raw Data ohne Geometrie): \" + hits.length + \" Treffer\"}\n          >\n            <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n              <pre key='hitObject'>{JSON.stringify(hitObjectForRawDisplay, null, 2)}</pre>\n              {/* <pre key='hits'>{JSON.stringify(hitsForRawDisplay, null, 2)}</pre> */}\n            </div>\n          </SecondaryInfoPanelSection>\n        );\n      }\n    }\n    return (\n      <SecondaryInfo\n        titleIconName='info-circle'\n        title={\n          \"Datenblatt zu: \" +\n          Math.round(lat * 10000) / 10000 +\n          \", \" +\n          Math.round(long * 1000) / 1000\n        }\n        mainSection={\n          <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n            <div>\n              Die Suche an der angegebene Position hat insgesamt {hits.length} Treffer ergeben:\n              {display(\"Bezeichnung\", hits?.bezeichnung)}\n              {display(\"Flächengröße\", hits?.groesse, (a) => (\n                <span>\n                  {a.toLocaleString()} m² (circa{\" \"}\n                  {(Math.round((a / 10000) * 10) / 10).toLocaleString()} ha)\n                </span>\n              ))}\n              {display(\"Stadtbezirk(e)\", hits?.stadtbezirke, (sb) => sb.join(\", \"))}\n              {display(\"Quartier(e)\", hits?.quartiere, (q) => q.join(\", \"))}\n              {display(\"Eigentümer\", hits?.eigentuemer, (e) => e.join(\", \"))}\n            </div>\n          </div>\n        }\n        subSections={subSections}\n        footer={footer}\n      />\n    );\n  } else {\n    return null;\n  }\n};\nexport default InfoPanel;\n","import bboxPolygon from \"@turf/bbox-polygon\";\nimport booleanIntersects from \"@turf/boolean-intersects\";\nimport turfCenter from \"@turf/center\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport { useEffect, useState, useContext } from \"react\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport { md5FetchJSON, md5FetchText } from \"react-cismap/tools/fetching\";\nimport { getGazDataForTopicIds } from \"react-cismap/tools/gazetteerHelper\";\nimport \"react-cismap/topicMaps.css\";\nimport ResponsiveInfoBox from \"react-cismap/topicmaps/ResponsiveInfoBox\";\nimport TopicMapComponent from \"react-cismap/topicmaps/TopicMapComponent\";\nimport \"./App.css\";\nimport MyMenu from \"./components/Menu\";\nimport Crosshair from \"./Crosshair\";\nimport { md5ActionFetchDAQ4Dexie, initTables } from \"./md5Fetching\";\nimport { searchForFeatures } from \"./search\";\nimport { appKey, daqKeys, db } from \"./App\";\nimport buffer from \"@turf/buffer\";\nimport circle from \"@turf/circle\";\nimport InfoBox from \"./components/InfoBox\";\nimport InfoPanel from \"./components/SecondaryInfo\";\nimport { ResponsiveTopicMapContext } from \"react-cismap/contexts/ResponsiveTopicMapContextProvider\";\n\nconst host = \"https://wupp-topicmaps-data.cismet.de\";\n\nconst getData = async (setGazData, setInfoData) => {\n  const prefix = \"GazDataForStories\";\n  const sources = {};\n\n  //  sources.stoerfallbetrieb = await md5ActionFetchDAQ4Dexie(prefix, 'url', 'xxx', 'daqStoerfallBetriebeKlasse1');\n  sources.adressen = await md5FetchText(prefix, host + \"/data/3857/adressen.json\");\n  sources.bezirke = await md5FetchText(prefix, host + \"/data/3857/bezirke.json\");\n  sources.quartiere = await md5FetchText(prefix, host + \"/data/3857/quartiere.json\");\n  sources.pois = await md5FetchText(prefix, host + \"/data/3857/pois.json\");\n  sources.kitas = await md5FetchText(prefix, host + \"/data/3857/kitas.json\");\n\n  const gazData = getGazDataForTopicIds(sources, [\n    \"pois\",\n    \"kitas\",\n    \"bezirke\",\n    \"quartiere\",\n    \"adressen\",\n  ]);\n\n  setGazData(gazData);\n};\n\nfunction UmweltalarmMap({ loggedOut }) {\n  const [gazData, setGazData] = useState([]);\n  const [infoData, setInfoData] = useState([]);\n  const [hits, setHits] = useState([]);\n  const { windowSize } = useContext(ResponsiveTopicMapContext);\n\n  useEffect(() => {\n    getData(setGazData, setInfoData);\n  }, []);\n  return (\n    <div>\n      <Crosshair />\n      <TopicMapComponent\n        gazData={gazData}\n        modalMenu={<MyMenu />}\n        homeZoom={13}\n        maxZoom={22}\n        secondaryInfo={windowSize && <InfoPanel hits={hits} />}\n        locatorControl={true}\n        mappingBoundsChanged={(boundingBox) => {\n          setHits(undefined);\n          let bbox = [boundingBox.left, boundingBox.bottom, boundingBox.right, boundingBox.top];\n          let bbPoly = bboxPolygon(bbox);\n          //   console.log(\"xxx mappingBoundsChanged\", center);\n          let center = turfCenter(bbPoly);\n          //          console.log(center.geometry.coordinates);\n          const hits = searchForFeatures(db, daqKeys, center).then((hits) => {\n            setHits(hits);\n          });\n        }}\n      >\n        {!loggedOut && <InfoBox hits={hits} />}\n      </TopicMapComponent>\n    </div>\n  );\n}\n\nexport default UmweltalarmMap;\n","import localforage from \"localforage\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { Alert, Button, Form, Modal } from \"react-bootstrap\";\nimport IconComp from \"react-cismap/commons/Icon\";\nimport { ResponsiveTopicMapContext } from \"react-cismap/contexts/ResponsiveTopicMapContextProvider\";\nimport { apiUrl, appKey, daqKeys, db } from \"../App\";\nimport { CACHE_JWT } from \"react-cismap/tools/fetching\";\nimport {offlineDataAvailable} from \"../search\"\nimport { FeatureCollectionDispatchContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport dayjs from \"dayjs\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\n\ndayjs.extend(customParseFormat);\n\nconst LoginForm = ({\n  setJWT = (jwt) => {\n    console.log(\"you need to set the attribute setJWT in the <Login> component\", jwt);\n  },\n  loginInfo,\n  setLoginInfo = () => {},\n}) => {\n  const { windowSize } = useContext(ResponsiveTopicMapContext);\n  const { setMetaInformation } = useContext(FeatureCollectionDispatchContext);\n  const pwFieldRef = useRef();\n  const userFieldRef = useRef();\n  const _height = windowSize?.height || 800 - 180;\n  const modalBodyStyle = {\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n    maxHeight: _height,\n  };\n  const [user, _setUser] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [cacheDataAvailable, setCacheDataAvailable] = useState(false);\n\n  window.localforage = localforage;\n  const setUser = (user) => {\n    localforage.setItem(\"@\" + appKey + \".\" + \"auth\" + \".\" + \"user\", user);\n    _setUser(user);\n  };\n\n  useEffect(() => {\n    (async () => {\n      const userInCache = await localforage.getItem(\"@\" + appKey + \".\" + \"auth\" + \".\" + \"user\");\n      const dataValueInCache = await offlineDataAvailable(db, daqKeys);\n      console.log('xxx o' + dataValueInCache);\n      console.log('xxx offData' + (dataValueInCache !== null && dataValueInCache !== undefined));\n\n      setCacheDataAvailable(dataValueInCache !== null && dataValueInCache !== undefined);\n      if (dataValueInCache !== null && dataValueInCache !== undefined) {\n        const time = dayjs(dataValueInCache, \"YYYY-MM-DD hh:mm:ss\").toDate();\n        setMetaInformation({time});      \n      }\n      if (userInCache) {\n        setUser(userInCache);\n      }\n      if (userFieldRef?.current) {\n        userFieldRef.current.focus();\n        userFieldRef.current.select();\n      }\n    })();\n  }, []);\n\n  const login = () => {\n    fetch(\"https://umweltalarm-api.cismet.de/users\", {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Basic \" + btoa(user + \"@\" + \"WUNDA_BLAU\" + \":\" + pw),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(function (response) {\n        if (response.status >= 200 && response.status < 300) {\n          response.json().then(function (responseWithJWT) {\n            const jwt = responseWithJWT.jwt;\n            setLoginInfo({\n              color: \"#79BD9A\",\n              text: \"Anmeldung erfolgreich. Daten werden geladen.\",\n            });\n            setTimeout(() => {\n              setJWT(jwt);\n              setLoginInfo();\n            }, 500);\n          });\n        } else {\n          setLoginInfo({\n            color: \"#FF8048\",\n            text: \"Bei der Anmeldung ist ein Fehler aufgetreten. \",\n          });\n          setTimeout(() => {\n            setLoginInfo();\n          }, 2500);\n        }\n      })\n      .catch(function (err) {\n        setLoginInfo({ color: \"#FF3030\", text: \"Bei der Anmeldung ist ein Fehler aufgetreten.\" });\n        setTimeout(() => {\n          setLoginInfo();\n        }, 2500);\n      });\n  };\n\n  return (\n    <Modal\n      style={{\n        zIndex: 3000000000,\n      }}\n      height='100%'\n      size='l'\n      show={true}\n      //   onHide={close}\n      keyboard={false}\n    >\n      <Modal.Header>\n        <Modal.Title>\n          <div>\n            <div>\n              <IconComp name={\"user\"} /> Anmeldung\n            </div>\n          </div>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={modalBodyStyle} id='potenzialflaechen-online' key='login'>\n        <Form>\n          <Form.Group controlId='potenzialflaechen-online-login'>\n            <Form.Label>WuNDa Benutzername</Form.Label>\n            <Form.Control\n              value={user}\n              ref={userFieldRef}\n              onChange={(e) => {\n                setUser(e.target.value);\n              }}\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  // login();\n                  if (pwFieldRef.current) {\n                    pwFieldRef.current.focus();\n                  }\n                }\n              }}\n              placeholder='Login hier eingeben'\n            />\n            {/* <Form.Text className='text-muted'>\n              We'll never share your email with anyone else.\n            </Form.Text> */}\n          </Form.Group>\n\n          <Form.Group controlId='potenzialflaechen-online-pass'>\n            <Form.Label>Passwort</Form.Label>\n            <Form.Control\n              ref={pwFieldRef}\n              value={pw}\n              onChange={(e) => {\n                setPw(e.target.value);\n              }}\n              type='password'\n              placeholder='Password'\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  login();\n                }\n              }}\n            />\n          </Form.Group>\n          <div\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              alignItems: \"baseline\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            {loginInfo?.text && (\n              <div style={{ margin: 10, color: loginInfo?.color || \"black\", maxWidth: 200 }}>\n                <b>{loginInfo?.text}</b>\n              </div>\n            )}\n            <div style={{ flexShrink: 100 }}></div>\n            <div>\n              {cacheDataAvailable === true && (\n                <Button\n                  onClick={(e) => {\n                    setLoginInfo({\n                      color: \"#79BD9A\",\n                      text: \"Alte Daten werden aus dem Cache übernommen.\",\n                    });\n                    setTimeout(() => {\n                      setJWT(CACHE_JWT);\n                      setLoginInfo();\n                    }, 500);\n                  }}\n                  style={{ margin: 5, marginTop: 30 }}\n                  variant='secondary'\n                >\n                  Offline arbeiten\n                </Button>\n              )}\n              <Button\n                onClick={(e) => {\n                  login();\n                }}\n                style={{ margin: 5, marginTop: 30 }}\n                variant='primary'\n              >\n                Anmeldung\n              </Button>\n            </div>\n          </div>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n};\nexport default LoginForm;\n","import { useContext } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport IconComp from \"react-cismap/commons/Icon\";\nimport { FeatureCollectionContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport ReactLoading from \"react-loading\";\n\nconst Waiting = ({ waiting }) => {\n  const { selectedFeature } = useContext(FeatureCollectionContext);\n\n  return (\n    <Modal\n      style={{\n        zIndex: 3000000000,\n      }}\n      height='200'\n      size='s'\n      show={waiting !== undefined}\n      //   onHide={close}\n      keyboard={false}\n    >\n      <Modal.Header>\n        <Modal.Title>\n          <IconComp name={waiting?.icon} /> {waiting?.title}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"baseline\" }}>\n          <ReactLoading type={\"cylon\"} color={selectedFeature?.properties.color} />{\" \"}\n          <div style={{ marginLeft: 20 }}>{waiting?.text}</div>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default Waiting;\n","import { useContext } from \"react\";\nimport { ResponsiveTopicMapContext } from \"react-cismap/contexts/ResponsiveTopicMapContextProvider\";\nimport { FeatureCollectionContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\n\nimport { CACHE_JWT } from \"react-cismap/tools/fetching\";\n\nconst Title = ({ logout, jwt }) => {\n  const { windowSize } = useContext(ResponsiveTopicMapContext);\n  const { metaInformation } = useContext(FeatureCollectionContext);\n  let dateInfo;\n  if (metaInformation) {\n    const t = metaInformation.time;\n    const d = new Date(t);\n    dateInfo = d.toLocaleString();\n  }\n\n  let secondaryInfo, jwtPayload, actiontext;\n  if (jwt === CACHE_JWT) {\n    secondaryInfo = \"Daten aus dem Cache\"; //;+ metaInformation.time;\n    actiontext = \"anmelden und Daten aktualisieren\";\n  } else {\n    try {\n      jwtPayload = atob(jwt.split(\".\")[1]);\n      secondaryInfo = JSON.parse(jwtPayload).sub;\n      actiontext = \"abmelden\";\n    } catch (e) {}\n  }\n  const titleContent = (\n    <div>\n      <b>Umweltalarm</b> (\n      {secondaryInfo + (dateInfo !== undefined ? \", \" + dateInfo : \"\")})\n      <div style={{ float: \"right\", paddingRight: 10 }}>\n        <a\n          style={{ color: \"#337ab7\" }}\n          onClick={() => {\n            logout();\n          }}\n        >\n          {/* <FontAwesomeIcon icon={faRandom} style={{ marginRight: 5 }} /> */}\n          {actiontext}\n        </a>\n      </div>\n    </div>\n  );\n\n  return (\n    <table\n      style={{\n        width: (windowSize?.width || 300) - 54 - 12 - 38 - 12 + \"px\",\n        height: \"30px\",\n        position: \"absolute\",\n        left: 54,\n        top: 12,\n        zIndex: 555,\n      }}\n    >\n      <tbody>\n        <tr>\n          <td\n            style={{\n              textAlign: \"center\",\n              verticalAlign: \"middle\",\n              background: \"#ffffff\",\n              color: \"black\",\n              opacity: \"0.9\",\n              paddingLeft: \"10px\",\n            }}\n          >\n            {titleContent}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default Title;\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"react-cismap/topicMaps.css\";\nimport TopicMapContextProvider from \"react-cismap/contexts/TopicMapContextProvider\";\nimport UmweltalarmMap from \"./UmweltalarmMap\";\nimport { MappingConstants } from \"react-cismap\";\nimport { getInternetExplorerVersion } from \"react-cismap/tools/browserHelper\";\nimport { defaultLayerConf } from \"react-cismap/tools/layerFactory\";\nimport { useEffect, useState } from \"react\";\nimport localforage from \"localforage\";\nimport {\n  md5ActionFetchDAQ4Dexie,\n  initTables,\n  indexAnsprechpartner,\n  indexAnsprechpartnerZustaendigkeit,\n} from \"./md5Fetching\";\nimport LoginForm from \"./components/LoginForm\";\nimport Waiting from \"./components/Waiting\";\nimport Title from \"./components/TitleControl\";\nimport MapLibreLayer from \"react-cismap/vector/MapLibreLayer\";\n\nconst host = \"https://wupp-topicmaps-data.cismet.de\";\nexport const appKey = \"umweltalarm.Online.Wuppertal\";\nexport const apiUrl = \"https://umweltalarm-api.cismet.de\";\nexport const daqKeys = [\n  \"StoerfallBetriebeKlasse1\",\n  \"StoerfallBetriebeKlasse2\",\n  \"wasserverbaende\",\n  \"wasserschutzgebiete\",\n  \"autobahnmeisterei\",\n  \"landschaftsschutzgebiete\",\n  \"naturschutzgebiete\",\n  \"strassenmeisterei\",\n  \"bimschNrw\",\n  \"bimschWuppertal\",\n  \"trinkwasserbrunnen\",\n  \"stadtFlurstuecke\",\n];\nexport const db = initTables(appKey, daqKeys);\n\nfunction App() {\n  let backgroundModes;\n  useEffect(() => {\n    document.title = \"Umweltalarm Wuppertal\";\n  }, []);\n\n  const [jwt, _setJWT] = useState();\n  const [loggedOut, setLoggedOut] = useState();\n  const [waiting, setWaiting] = useState();\n  const [loginInfo, setLoginInfo] = useState();\n\n  const setJWT = (jwt) => {\n    localforage.setItem(\"@\" + appKey + \".\" + \"auth\" + \".\" + \"jwt\", jwt);\n    _setJWT(jwt);\n  };\n\n  useEffect(() => {\n    (async () => {\n      const jwtInCache = await localforage.getItem(\"@\" + appKey + \".\" + \"auth\" + \".\" + \"jwt\");\n      if (jwtInCache) {\n        setJWT(jwtInCache);\n        setLoggedOut(false);\n      } else {\n        setJWT(undefined);\n        setLoggedOut(true);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (jwt) {\n      for (const daqKey of daqKeys) {\n        md5ActionFetchDAQ4Dexie(appKey, apiUrl, jwt, daqKey, db)\n          .then(\n            (stoerfallResult) => {\n              //              alert('drin ' + daqKey);\n            },\n            (problem) => {\n              if (problem.status === 401) {\n                setJWT(undefined);\n                setLoginInfo({ color: \"#F9D423\", text: \"Bitte melden Sie sich erneut an.\" });\n                setTimeout(() => {\n                  setLoginInfo();\n                }, 2500);\n              }\n              //              setDynGazData([]);\n            }\n          )\n          .catch((e) => {\n            console.log(\"xxx error \", e);\n          });\n      }\n\n      md5ActionFetchDAQ4Dexie(appKey, apiUrl, jwt, \"ansprechpartner\", db)\n        .then(\n          (stoerfallResult) => {\n            if (stoerfallResult !== undefined && Array.isArray(stoerfallResult.data)) {\n              indexAnsprechpartner(stoerfallResult.data, \"ansprechpartner\", db);\n            }\n          },\n          (problem) => {\n            if (problem.status === 401) {\n              setJWT(undefined);\n              setLoginInfo({ color: \"#F9D423\", text: \"Bitte melden Sie sich erneut an.\" });\n              setTimeout(() => {\n                setLoginInfo();\n              }, 2500);\n            }\n          }\n        )\n        .catch((e) => {\n          console.log(\"xxx error \", e);\n        });\n\n      md5ActionFetchDAQ4Dexie(appKey, apiUrl, jwt, \"ansprechpartnerZustaendigkeit\", db)\n        .then(\n          (stoerfallResult) => {\n            if (stoerfallResult !== undefined && Array.isArray(stoerfallResult.data)) {\n              console.log(\"Ansprechpartner referenz\");\n              indexAnsprechpartnerZustaendigkeit(\n                stoerfallResult.data,\n                \"ansprechpartnerZustaendigkeit\",\n                db\n              );\n            }\n          },\n          (problem) => {\n            if (problem.status === 401) {\n              setJWT(undefined);\n              setLoginInfo({ color: \"#F9D423\", text: \"Bitte melden Sie sich erneut an.\" });\n              setTimeout(() => {\n                setLoginInfo();\n              }, 2500);\n            }\n          }\n        )\n        .catch((e) => {\n          console.log(\"xxx error \", e);\n        });\n\n      setLoggedOut(false);\n    } else {\n      setLoggedOut(true);\n      //      setDynGazData([]);\n    }\n  }, [jwt]);\n\n  if (getInternetExplorerVersion() === -1) {\n    backgroundModes = [\n      {\n        title: \"Stadtplan\",\n        mode: \"default\",\n        layerKey: \"stadtplan\",\n      },\n      {\n        title: \"Stadtplan (Vektordaten light)\",\n        mode: \"default\",\n        layerKey: \"vector\",\n      },\n\n      { title: \"Luftbildkarte\", mode: \"default\", layerKey: \"lbk\" },\n    ];\n  } else {\n    backgroundModes = [\n      {\n        title: \"Stadtplan\",\n        mode: \"default\",\n        layerKey: \"stadtplan\",\n      },\n\n      { title: \"Luftbildkarte\", mode: \"default\", layerKey: \"lbk\" },\n    ];\n  }\n  const backgroundConfigurations = {\n    lbk: {\n      layerkey: \"cismetText|trueOrtho2020@40\",\n      layerkey_: \"wupp-plan-live@100|trueOrtho2020@75|rvrSchrift@100\",\n      src: \"/images/rain-hazard-map-bg/ortho.png\",\n      title: \"Luftbildkarte\",\n    },\n    stadtplan: {\n      layerkey: \"wupp-plan-live@60\",\n      src: \"/images/rain-hazard-map-bg/citymap.png\",\n      title: \"Stadtplan\",\n    },\n    vector: {\n      layerkey: \"cismetLight\",\n      src: \"/images/rain-hazard-map-bg/citymap.png\",\n      title: \"Stadtplan\",\n    },\n  };\n\n  // const baseLayerConf = JSON.parse(JSON.stringify(defaultLayerConf));\n  // TODO problems in settings preview map wehen doing the immutable way\n  const baseLayerConf = { ...defaultLayerConf };\n\n  if (baseLayerConf.namedLayers.cismetLight == undefined) {\n    baseLayerConf.namedLayers.cismetLight = {\n      type: \"vector\",\n      style: \"https://omt.map-hosting.de/styles/cismet-light/style.json\",\n      pane: \"backgroundvectorLayers\",\n    };\n  }\n  if (baseLayerConf.namedLayers.cismetText == undefined) {\n    baseLayerConf.namedLayers.cismetText = {\n      type: \"vector\",\n      style: \"https://omt.map-hosting.de/styles/cismet-text/style.json\",\n      pane: \"backgroundlayerTooltips\",\n    };\n  }\n\n  return (\n    <TopicMapContextProvider\n      persistenceSettings={{\n        ui: [\"XappMenuVisible\", \"appMenuActiveMenuSection\", \"collapsedInfoBox\"],\n        featureCollection: [\"filterState\", \"filterMode\", \"clusteringEnabled\"],\n        responsive: [],\n        styling: [\n          \"activeAdditionalLayerKeys\",\n          \"namedMapStyle\",\n          \"selectedBackground\",\n          \"markerSymbolSize\",\n        ],\n      }}\n      additionalLayerConfiguration={{\n        brunnen: {\n          title: <span>Trinkwasserbrunnen</span>,\n          initialActive: true,\n          layer: (\n            <MapLibreLayer\n              key={\"brunnen\"}\n              style_='http://localhost:888/styles/brunnen/style.json'\n              style='https://omt.map-hosting.de/styles/brunnen/style.json'\n              pane='additionalLayers0'\n            />\n          ),\n        },\n        kanal: {\n          title: <span>Kanalnetz</span>,\n          initialActive: true,\n          layer: (\n            <MapLibreLayer\n              key={\"kanal\"}\n              style_='http://localhost:888/styles/kanal/style.json'\n              style='https://omt.map-hosting.de/styles/kanal/style.json'\n              pane='additionalLayers1'\n            />\n          ),\n        },\n        gewaesser: {\n          title: <span>Gewässernetz</span>,\n          initialActive: true,\n          layer: (\n            <MapLibreLayer\n              key={\"gewaesser\"}\n              style_='http://localhost:888/styles/gewaesser/style.json'\n              style='https://omt.map-hosting.de/styles/gewaesser/style.json'\n              pane='additionalLayers2'\n            />\n          ),\n        },\n      }}\n      baseLayerConf={baseLayerConf}\n      backgroundConfigurations={backgroundConfigurations}\n      backgroundModes={backgroundModes}\n      referenceSystem={MappingConstants.crs3857}\n      mapEPSGCode='3857'\n      referenceSystemDefinition={MappingConstants.proj4crs3857def}\n      maskingPolygon='POLYGON((668010.063156992 6750719.23021889,928912.612468322 6757273.20343972,930494.610325512 6577553.43685138,675236.835570551 6571367.64964125,668010.063156992 6750719.23021889))'\n    >\n      {loggedOut && jwt === undefined && (\n        <LoginForm\n          key={\"login.\"}\n          setJWT={setJWT}\n          loginInfo={loginInfo}\n          setLoginInfo={setLoginInfo}\n        />\n      )}\n      {!loggedOut && (\n        <Title\n          logout={() => {\n            setJWT(undefined);\n            setLoggedOut(true);\n            setLoginInfo({ color: \"#69D2E7\", text: \"Sie wurden erfolgreich abgemeldet.\" });\n            setTimeout(() => {\n              setLoginInfo();\n            }, 2500);\n          }}\n          jwt={jwt}\n        />\n      )}\n      <Waiting waiting={waiting} />\n\n      <UmweltalarmMap loggedOut={loggedOut} />\n    </TopicMapContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}