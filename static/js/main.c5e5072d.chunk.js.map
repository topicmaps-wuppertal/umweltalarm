{"version":3,"sources":["version.js","components/MenuFooter.js","components/Menu.js","Crosshair.js","md5Fetching.js","search.js","UmweltalarmMap.js","components/LoginForm.js","components/Waiting.js","components/TitleControl.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["APPERSION","Footer","setAppMenuActiveMenuSection","useContext","UIDispatchContext","style","fontSize","className","onClick","scroller","scrollTo","containerId","document","title","href","target","reactCismapVersion","rel","MyMenu","ModalApplicationMenu","menuIcon","menuTitle","menuIntroduction","menuSections","DefaultSettingsPanel","skipFilterTitleSettings","skipClusteringSettings","skipSymbolsizeSetting","Section","sectionKey","sectionTitle","sectionBsStyle","sectionContent","ConfigurableDocBlocks","configs","getSimpleHelpForTM","undefined","menuFooter","MenuFooter","Comp","windowSize","ResponsiveTopicMapContext","position","top","height","width","backgroundColor","zIndex","pointerEvents","left","borderRadius","md5ActionFetchDAQ4Dexie","prefix","apiUrl","jwt","daqKey","db","a","cachePrefix","table","get","name","allObjects","md5InCache","md5","console","log","taskParameters","parameters","fd","FormData","append","Blob","JSON","stringify","type","time","Promise","resolve","reject","data","fetch","method","headers","Authorization","body","response","status","json","content","res","result","parse","newData","Object","update","id","add","indexGeometries","desc","exception","index","Flatbush","length","tableObject","clear","el","geo","getBoundsFromArea","geojson","i","finish","changes","area","bboxArray","turf","bbox","nameMapping","searchForFeatures","daqKeys","geom","hits","geomBounds","key","tableObjects","otable","serIndex","pol_index","from","indizes","search","o","obj","geoj","booleanIntersects","push","offlineDataAvailable","lastTime","UmweltalarmMap","useState","gazData","setHits","Crosshair","TopicMapComponent","modalMenu","homeZoom","maxZoom","mappingBoundsChanged","boundingBox","bottom","right","bbPoly","bboxPolygon","center","turfCenter","then","ResponsiveInfoBox","header","textAlign","verticalAlign","background","color","opacity","paddingLeft","paddingTop","paddingBottom","pixelwidth","isCollapsible","alwaysVisibleDiv","collapsibleDiv","map","entry","typ","default_name","fixedRow","dayjs","extend","customParseFormat","LoginForm","setJWT","loginInfo","setLoginInfo","setMetaInformation","FeatureCollectionDispatchContext","pwFieldRef","useRef","userFieldRef","modalBodyStyle","overflowY","overflowX","maxHeight","user","_setUser","pw","setPw","cacheDataAvailable","setCacheDataAvailable","window","localforage","setUser","setItem","appKey","useEffect","getItem","userInCache","dataValueInCache","toDate","current","focus","select","login","btoa","responseWithJWT","text","setTimeout","catch","err","Modal","size","show","keyboard","Header","Title","Icon","Body","Form","Group","controlId","Label","Control","value","ref","onChange","e","onKeyPress","event","placeholder","display","alignItems","flexDirection","justifyContent","margin","maxWidth","flexShrink","Button","CACHE_JWT","marginTop","variant","Waiting","waiting","selectedFeature","FeatureCollectionContext","icon","properties","marginLeft","dateInfo","secondaryInfo","jwtPayload","actiontext","logout","metaInformation","t","Date","toLocaleString","atob","split","sub","titleContent","float","paddingRight","Dexie","schema","version","stores","initTables","App","backgroundModes","_setJWT","loggedOut","setLoggedOut","jwtInCache","stoerfallResult","problem","alert","getInternetExplorerVersion","mode","layerKey","baseLayerConf","defaultLayerConf","namedLayers","cismetLight","style_","xpane","cismetText","iconOpacity","textOpacity","TopicMapContextProvider","backgroundConfigurations","lbk","layerkeyx","layerkey","src","stadtplan","vector","referenceSystem","MappingConstants","crs3857","mapEPSGCode","referenceSystemDefinition","proj4crs3857def","maskingPolygon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c5e5072d.chunk.js","sourcesContent":["const APPERSION = \"0.3.0\";\nconst APPHASH = \"#bb8f5055c860dc90c8451df4aed5357133e38889\";\n\nexport const getApplicationVersion = () => {\n  /*eslint-disable no-useless-concat*/\n  if (APPERSION === \"%APPLICATION\" + \"_\" + \"VERSION%\") {\n    return \"dev-hot-reload\";\n  } else {\n    return APPERSION;\n  }\n};\nexport const getApplicationHash = () => {\n  if (APPHASH === \"%APPLICATION\" + \"_\" + \"HASH%\") {\n    return \"#dev-hot-reload\";\n  } else {\n    return APPHASH;\n  }\n};\n","import { useContext } from \"react\";\nimport { UIDispatchContext } from \"react-cismap/contexts/UIContextProvider\";\nimport { version as reactCismapVersion } from \"react-cismap/meta\";\nimport { scroller } from \"react-scroll\";\nimport { getApplicationVersion } from \"../version\";\n\nconst Footer = () => {\n  const { setAppMenuActiveMenuSection } = useContext(UIDispatchContext);\n\n  return (\n    <div style={{ fontSize: \"11px\" }}>\n      <b>Hintergrundkarten</b>: Stadtkarte 2.0 © RVR | True Orthophoto 2020 © Stadt Wuppertal |\n      Openmaptiles basierte Vectorkarte (hosted by cismet){\" \"}\n      <a\n        className='pleaseRenderAsLink'\n        onClick={() => {\n          setAppMenuActiveMenuSection(\"help\");\n          scroller.scrollTo(\"Datengrundlage\", { containerId: \"myMenu\" });\n        }}\n      >\n        (Details und Nutzungsbedingungen)\n      </a>\n      <br />\n      <div>\n        <b>\n          {document.title} v{getApplicationVersion()}\n        </b>\n        :{\" \"}\n        <a href='https://cismet.de/' target='_cismet'>\n          cismet GmbH\n        </a>{\" \"}\n        auf Basis von{\" \"}\n        <a href='http://leafletjs.com/' target='_more'>\n          Leaflet\n        </a>{\" \"}\n        und{\" \"}\n        <a href='https://cismet.de/#refs' target='_cismet'>\n          cids | react-cismap v{reactCismapVersion}\n        </a>{\" \"}\n        |{\" \"}\n        <a\n          target='_blank'\n          rel='noopener noreferrer'\n          href='https://cismet.de/datenschutzerklaerung.html'\n        >\n          Datenschutzerklärung (Privacy Policy)\n        </a>\n      </div>\n    </div>\n  );\n};\nexport default Footer;\n","import { useContext } from \"react\";\nimport { UIDispatchContext } from \"react-cismap/contexts/UIContextProvider\";\nimport { getSimpleHelpForTM } from \"react-cismap/tools/uiHelper\";\nimport ConfigurableDocBlocks from \"react-cismap/topicmaps/ConfigurableDocBlocks\";\nimport DefaultSettingsPanel from \"react-cismap/topicmaps/menu/DefaultSettingsPanel\";\nimport ModalApplicationMenu from \"react-cismap/topicmaps/menu/ModalApplicationMenu\";\nimport Section from \"react-cismap/topicmaps/menu/Section\";\nimport MenuFooter from \"./MenuFooter\";\n\nconst MyMenu = () => {\n  const { setAppMenuActiveMenuSection } = useContext(UIDispatchContext);\n  const simpleHelp = undefined;\n  return (\n    <ModalApplicationMenu\n      menuIcon={\"bars\"}\n      menuTitle={\"Einstellungen und Kompaktanleitung\"}\n      menuIntroduction={\n        <span>\n          Über <strong>Einstellungen</strong> können Sie die Darstellung der Hintergrundkarte und\n          der Objekte an Ihre Vorlieben anpassen. Wählen Sie <strong>Kompaktanleitung</strong> für\n          detailliertere Bedienungsinformationen.enungsinformationen.\n        </span>\n      }\n      menuSections={[\n        <DefaultSettingsPanel\n          key='settings'\n          skipFilterTitleSettings={true}\n          skipClusteringSettings={true}\n          skipSymbolsizeSetting={true}\n        />,\n\n        <Section\n          key='help'\n          sectionKey='help'\n          sectionTitle='Kompaktanleitung'\n          sectionBsStyle='default'\n          sectionContent={\n            <ConfigurableDocBlocks configs={getSimpleHelpForTM(document.title, simpleHelp)} />\n          }\n        />,\n      ]}\n      menuFooter={<MenuFooter />}\n    />\n  );\n};\nexport default MyMenu;\n","import { useContext } from \"react\";\n\nimport { ResponsiveTopicMapContext } from \"react-cismap/contexts/ResponsiveTopicMapContextProvider\";\n\nconst Comp = () => {\n  const { windowSize } = useContext(ResponsiveTopicMapContext);\n\n  return (\n    <div>\n      <div\n        style={{\n          position: \"absolute\",\n          top: (windowSize?.height || 500) / 2 - 1,\n          width: windowSize?.width || \"100%\",\n          height: \"2px\",\n          backgroundColor: \"#00000023\",\n          zIndex: \"100000\",\n          pointerEvents: \"none\",\n        }}\n      ></div>\n      <div\n        style={{\n          position: \"absolute\",\n          left: (windowSize?.width || 500) / 2 - 1,\n          height: windowSize?.height || \"100%\",\n          width: \"2px\",\n          backgroundColor: \"#00000023\",\n          zIndex: \"100000\",\n          pointerEvents: \"none\",\n        }}\n      ></div>\n      <div\n        style={{\n          borderRadius: \"50%\",\n          position: \"absolute\",\n          left: (windowSize?.width || 500) / 2 - 10,\n          top: (windowSize?.height || 500) / 2 - 10,\n          height: \"20px\",\n          width: \"20px\",\n          backgroundColor: \"#00000023\",\n          zIndex: \"100000\",\n          pointerEvents: \"none\",\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default Comp;\n","import Dexie from 'dexie';\nimport Flatbush from 'flatbush';\nimport turf from 'turf';\n\nexport const CACHE_JWT = \"--cached--data--\";\n\nexport const initTables = (prefix, daqKeys) => {\n    var db = new Dexie(prefix);\n    var schema = new Object();\n    for (const key of daqKeys) {\n        schema[key] = \"gid\";\n    }\n    schema['daq_meta'] = \"++id,name,md5,time\";\n    db.version(7).stores(schema);\n\n    return db;\n}\n\nexport const md5ActionFetchDAQ4Dexie = async (prefix, apiUrl, jwt, daqKey, db) => {\n    const cachePrefix = \"@\" + prefix + \"..\" + apiUrl + \".\" + daqKey;\n    const md5Key = cachePrefix + \".md5\";\n    const dataKey = cachePrefix + \".data\";\n    const timeKey = cachePrefix + \".time\";\n\n    const allObjects = await db.table('daq_meta').get({name: daqKey});\n    var md5InCache = null;\n\n    if (allObjects != null) {\n        md5InCache = allObjects.md5;\n    }\n  \n    console.log(\"DAQ for \" + daqKey);\n\n    let taskParameters = {\n      parameters: {\n        daqKey,\n        md5: md5InCache || \"-\",\n      },\n    };\n  \n    let fd = new FormData();\n    fd.append(\n      \"taskparams\",\n      new Blob([JSON.stringify(taskParameters)], {\n        type: \"application/json\",\n      })\n    );\n  \n    if (jwt === CACHE_JWT) {\n      const data = 'data retrieved';\n      \n      //go for result.time after the new version of the action is live\n      const time = allObjects.time;\n      return new Promise((resolve, reject) => {\n        resolve({ data, time });\n      });\n    } else {\n      const response = await fetch(\n        apiUrl + \"/actions/WUNDA_BLAU.dataAquisition/tasks?resultingInstanceType=result\",\n        {\n          method: \"POST\",\n          // method: \"GET\",\n          headers: {\n            Authorization: \"Bearer \" + jwt,\n            // \"Content-Type\": \"application/json\",\n            // Accept: \"application/json\",\n          },\n          body: fd,\n        }\n      );\n  \n      if (response.status >= 200 && response.status < 300) {\n        const content = await response.json();\n        if (content.res) {\n          try {\n            const result = JSON.parse(content.res);\n            let status = result.status;\n            let data, time;\n  \n            if (status === 200) {\n              console.log(\"DAQ cache miss for \" + daqKey);\n  \n              data = JSON.parse(result.content);\n              time = result.time;\n              var newData = new Object();\n              newData['md5'] = result.md5;\n              newData['time'] = time;\n              newData['name'] = daqKey;\n              console.log('new md5: ' + newData.md5);\n\n              if (allObjects != null) {\n                await db.table('daq_meta').update(allObjects.id, newData);\n              } else {\n                db.table('daq_meta').add(newData);\n              } \n              await indexGeometries(data, daqKey, prefix, db);\n            } else if (status === 304) {\n              console.log(\"DAQ cache hit for \" + daqKey);\n              //go for result.time after the new version of the action is live\n\n              if (allObjects != null) {\n                time = allObjects.time;\n                data = 'data retrieved';\n              }\n            }\n  \n            return new Promise((resolve, reject) => {\n              resolve({ data, time });\n            });\n          } catch (e) {\n            return new Promise((resolve, reject) => {\n              reject({\n                status: 500,\n                desc:\n                  \"error when parsing the server result. probably the content has the wrong structure\",\n                content,\n                exception: e,\n              });\n            });\n          }\n        } else {\n          return new Promise((resolve, reject) => {\n            reject({\n              status: 500,\n              desc: \"error when parsing the server result.\",\n              content,\n            });\n          });\n        }\n      } else if (response.status === 401) {\n        return new Promise((resolve, reject) => {\n          reject({ status: response.status, desc: \"unauthorized\" });\n        });\n      } else {\n        return new Promise((resolve, reject) => {\n          reject({ status: response.status, desc: \"unknown\" });\n        });\n      }\n    }\n  };\n  \n\n  export const indexGeometries = async (content, table, prefix, db) => {\n    const index = new Flatbush(content.length);\n    const tableObject = db.table(table);\n    await tableObject.clear();\n\n    for (const el of content) {\n      const geo = getBoundsFromArea(el.geojson);\n      var i = index.add(geo[0][1], geo[0][0], geo[1][1], geo[1][0]);\n      var newData = new Object();\n      newData['gid'] = i;\n      newData['data'] = el;//JSON.stringify(el);\n      await tableObject.add(newData);\n    }\n\n    index.finish();\n    \n    const allObjects = await db.table('daq_meta').get({name: table});\n    var changes = new Object();\n    changes['pol_index'] = index.data;\n    await db.table('daq_meta').update(allObjects.id, changes);\n  }\n\n\n  export const getBoundsFromArea = (area) => {\n    const bboxArray = turf.bbox(area);\n    const corner1 = [bboxArray[1], bboxArray[0]];\n    const corner2 = [bboxArray[3], bboxArray[2]];\n    var bounds = [corner1, corner2];\n\n    return bounds;\n  }","import Flatbush from 'flatbush';\nimport {getBoundsFromArea, OBJECT_TABLE_EXT} from \"./md5Fetching\";\nimport booleanIntersects from \"@turf/boolean-intersects\";\n\nexport const nameMapping = new Object();\nnameMapping['StoerfallBetriebeKlasse1']='betrieb';\nnameMapping['StoerfallBetriebeKlasse2']='betrieb';\nnameMapping['wasserverbaende']='name';\nnameMapping['wasserschutzgebiete']='zone';\nnameMapping['autobahnmeisterei']='bezirk';\nnameMapping['landschaftsschutzgebiete']='sg_typ';\nnameMapping['naturschutzgebiete']='sg_typ';\nnameMapping['strassenmeisterei']='bezirk';\nnameMapping['bimschNrw']='astnr';\nnameMapping['bimschWuppertal']='astnr';\nnameMapping['trinkwasserbrunnen']='str_name';\nnameMapping['stadtFlurstuecke']='flurstueck';\n\nexport const searchForFeatures = async (db, daqKeys, geom) => {\n    var hits = [];\n    const geomBounds = getBoundsFromArea(geom);\n\n    for (const key of daqKeys) {\n        const tableObjects = await db.table('daq_meta').get({name: key});\n        const otable  = await db.table(key);\n\n        if (tableObjects != null) {\n            var serIndex = tableObjects.pol_index;\n            if (serIndex != null) {\n                const index = Flatbush.from(serIndex);\n                var indizes = index.search(geomBounds[0][1], geomBounds[0][0], geomBounds[1][1], geomBounds[1][0]);\n\n                if (indizes != null) {\n                    for (var i of indizes) {\n                        var o = await otable.get(i);\n                        var obj = o.data;\n                        obj['typ'] = key;\n                        obj['default_name'] = obj[nameMapping[key]];\n                        var geoj = obj.geojson;\n                      \n\n                        if (booleanIntersects(geoj, geom)) {\n                            hits.push(obj);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return hits;\n}\n\n\nexport const offlineDataAvailable = async (db, daqKeys) => {\n    var lastTime = null;\n\n    for (const key of daqKeys) {\n        const tableObjects = await db.table('daq_meta').get({name: key});\n\n        if (tableObjects != null) {\n            lastTime = tableObjects.time;\n        } else {\n            console.log('offline data for key ' + key + ' not available');\n            return null;\n        }\n    }\n\n    return lastTime;\n}","import bboxPolygon from \"@turf/bbox-polygon\";\nimport booleanIntersects from \"@turf/boolean-intersects\";\nimport turfCenter from \"@turf/center\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport { useEffect, useState } from \"react\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport { md5FetchJSON, md5FetchText } from \"react-cismap/tools/fetching\";\nimport { getGazDataForTopicIds } from \"react-cismap/tools/gazetteerHelper\";\nimport \"react-cismap/topicMaps.css\";\nimport ResponsiveInfoBox from \"react-cismap/topicmaps/ResponsiveInfoBox\";\nimport TopicMapComponent from \"react-cismap/topicmaps/TopicMapComponent\";\nimport \"./App.css\";\nimport MyMenu from \"./components/Menu\";\nimport Crosshair from \"./Crosshair\";\nimport { md5ActionFetchDAQ4Dexie, initTables } from \"./md5Fetching\";\nimport {searchForFeatures} from \"./search\"\nimport {appKey, daqKeys, db} from \"./App\";\nimport buffer from \"@turf/buffer\"\nimport circle from \"@turf/circle\"\n\nconst host = \"https://wupp-topicmaps-data.cismet.de\";\n\nconst getData = async (setGazData, setInfoData) => {\n  const prefix = \"GazDataForStories\";\n  const sources = {};\n\n//  sources.stoerfallbetrieb = await md5ActionFetchDAQ4Dexie(prefix, 'url', 'xxx', 'daqStoerfallBetriebeKlasse1');\n  sources.adressen = await md5FetchText(prefix, host + \"/data/3857/adressen.json\");\n  sources.bezirke = await md5FetchText(prefix, host + \"/data/3857/bezirke.json\");\n  sources.quartiere = await md5FetchText(prefix, host + \"/data/3857/quartiere.json\");\n  sources.pois = await md5FetchText(prefix, host + \"/data/3857/pois.json\");\n  sources.kitas = await md5FetchText(prefix, host + \"/data/3857/kitas.json\");\n\n  const gazData = getGazDataForTopicIds(sources, [\n    \"pois\",\n    \"kitas\",\n    \"bezirke\",\n    \"quartiere\",\n    \"adressen\",\n  ]);\n\n  setGazData(gazData);\n\n  const ns = await md5FetchJSON(prefix, host + \"/data/3857/naturschutzgebiete.json\");\n  const ls = await md5FetchJSON(prefix, host + \"/data/3857/landschaftsschutzgebiete.json\");\n  for (const f of ns) {\n    f.crs = {\n      type: \"name\",\n      properties: {\n        name: \"urn:ogc:def:crs:EPSG::25832\",\n      },\n    };\n  }\n  for (const f of ls) {\n    f.crs = {\n      type: \"name\",\n      properties: {\n        name: \"urn:ogc:def:crs:EPSG::25832\",\n      },\n    };\n  }\n  setInfoData([ns, ls]);\n};\n\nfunction UmweltalarmMap() {\n  const [gazData, setGazData] = useState([]);\n  const [infoData, setInfoData] = useState([]);\n  const [hits, setHits] = useState([]);\n//  useEffect(() => {\n//    getData(setGazData, setInfoData);\n//  }, []);\n  return (\n    <div>\n      <Crosshair />\n      <TopicMapComponent\n        gazData={gazData}\n        modalMenu={<MyMenu />}\n        homeZoom={13}\n        maxZoom={22}\n        mappingBoundsChanged={(boundingBox) => {\n          setHits(undefined);\n          let bbox = [boundingBox.left, boundingBox.bottom, boundingBox.right, boundingBox.top];\n          let bbPoly = bboxPolygon(bbox);\n          let center = turfCenter(bbPoly);\n          //   console.log(\"xxx mappingBoundsChanged\", center);\n          console.log(center);\n//          console.log( buffer(center, 1, {units: 'meters'} ) );\n//          console.log( circle(center, 1, {units: 'meters'} ) );\n          const hits = searchForFeatures(db, daqKeys, center).then((hits)=>{\n            setHits(hits);\n          });\n        }}\n      >\n        <ResponsiveInfoBox\n          //   panelClick={panelClick}\n          header={\n            <table style={{ width: \"100%\" }}>\n              <tbody>\n                <tr>\n                  <td\n                    style={{\n                      textAlign: \"left\",\n                      verticalAlign: \"top\",\n                      background: \"grey\",\n                      color: \"black\",\n                      opacity: \"0.9\",\n                      paddingLeft: \"3px\",\n                      paddingTop: \"0px\",\n                      paddingBottom: \"0px\",\n                    }}\n                  >\n                    <span>Umweltalarm</span>\n                  </td>\n                </tr>\n              </tbody>{\" \"}\n            </table>\n          }\n          pixelwidth={300}\n          isCollapsible={false}\n          alwaysVisibleDiv={<span>Analyseergebnis ({(hits !== undefined ? hits.length : '-')})</span>}\n          collapsibleDiv={\n            <div>\n              {hits === undefined && <span>Suche ...</span>}\n              {hits !== undefined && hits.length === 0 && <span>keine Besonderheiten</span>}\n              {hits !== undefined && hits.length > 0 && (\n                <div>\n                  es wurden folgende Treffer gefunden:\n                  {hits.map((entry, index) => {\n                    return <div key={index}>{entry.typ + ': ' + entry.default_name}</div>;\n                  })}\n                </div>\n              )}\n            </div>\n          }\n          fixedRow={true}\n        />\n      </TopicMapComponent>\n    </div>\n  );\n}\n\nexport default UmweltalarmMap;\n","import localforage from \"localforage\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { Alert, Button, Form, Modal } from \"react-bootstrap\";\nimport IconComp from \"react-cismap/commons/Icon\";\nimport { ResponsiveTopicMapContext } from \"react-cismap/contexts/ResponsiveTopicMapContextProvider\";\nimport { apiUrl, appKey, daqKeys, db } from \"../App\";\nimport { CACHE_JWT } from \"react-cismap/tools/fetching\";\nimport {offlineDataAvailable} from \"../search\"\nimport { FeatureCollectionDispatchContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport dayjs from \"dayjs\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\n\ndayjs.extend(customParseFormat);\n\nconst LoginForm = ({\n  setJWT = (jwt) => {\n    console.log(\"you need to set the attribute setJWT in the <Login> component\", jwt);\n  },\n  loginInfo,\n  setLoginInfo = () => {},\n}) => {\n  const { windowSize } = useContext(ResponsiveTopicMapContext);\n  const { setMetaInformation } = useContext(FeatureCollectionDispatchContext);\n  const pwFieldRef = useRef();\n  const userFieldRef = useRef();\n  const _height = windowSize?.height || 800 - 180;\n  const modalBodyStyle = {\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n    maxHeight: _height,\n  };\n  const [user, _setUser] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [cacheDataAvailable, setCacheDataAvailable] = useState(false);\n\n  window.localforage = localforage;\n  const setUser = (user) => {\n    localforage.setItem(\"@\" + appKey + \".\" + \"auth\" + \".\" + \"user\", user);\n    _setUser(user);\n  };\n\n  useEffect(() => {\n    (async () => {\n      const userInCache = await localforage.getItem(\"@\" + appKey + \".\" + \"auth\" + \".\" + \"user\");\n      const dataValueInCache = await offlineDataAvailable(db, daqKeys);\n      console.log('xxx o' + dataValueInCache);\n      console.log('xxx offData' + (dataValueInCache !== null && dataValueInCache !== undefined));\n\n      setCacheDataAvailable(dataValueInCache !== null && dataValueInCache !== undefined);\n      if (dataValueInCache !== null && dataValueInCache !== undefined) {\n        const time = dayjs(dataValueInCache, \"YYYY-MM-DD hh:mm:ss\").toDate();\n        setMetaInformation({time});      \n      }\n      if (userInCache) {\n        setUser(userInCache);\n      }\n      if (userFieldRef?.current) {\n        userFieldRef.current.focus();\n        userFieldRef.current.select();\n      }\n    })();\n  }, []);\n\n  const login = () => {\n    fetch(\"https://potenzialflaechen-online-api.cismet.de/users\", {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Basic \" + btoa(user + \"@\" + \"WUNDA_BLAU\" + \":\" + pw),\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(function (response) {\n        if (response.status >= 200 && response.status < 300) {\n          response.json().then(function (responseWithJWT) {\n            const jwt = responseWithJWT.jwt;\n            setLoginInfo({\n              color: \"#79BD9A\",\n              text: \"Anmeldung erfolgreich. Daten werden geladen.\",\n            });\n            setTimeout(() => {\n              setJWT(jwt);\n              setLoginInfo();\n            }, 500);\n          });\n        } else {\n          setLoginInfo({\n            color: \"#FF8048\",\n            text: \"Bei der Anmeldung ist ein Fehler aufgetreten. \",\n          });\n          setTimeout(() => {\n            setLoginInfo();\n          }, 2500);\n        }\n      })\n      .catch(function (err) {\n        setLoginInfo({ color: \"#FF3030\", text: \"Bei der Anmeldung ist ein Fehler aufgetreten.\" });\n        setTimeout(() => {\n          setLoginInfo();\n        }, 2500);\n      });\n  };\n\n  return (\n    <Modal\n      style={{\n        zIndex: 3000000000,\n      }}\n      height='100%'\n      size='l'\n      show={true}\n      //   onHide={close}\n      keyboard={false}\n    >\n      <Modal.Header>\n        <Modal.Title>\n          <div>\n            <div>\n              <IconComp name={\"user\"} /> Anmeldung\n            </div>\n          </div>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={modalBodyStyle} id='potenzialflaechen-online' key='login'>\n        <Form>\n          <Form.Group controlId='potenzialflaechen-online-login'>\n            <Form.Label>WuNDa Benutzername</Form.Label>\n            <Form.Control\n              value={user}\n              ref={userFieldRef}\n              onChange={(e) => {\n                setUser(e.target.value);\n              }}\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  // login();\n                  if (pwFieldRef.current) {\n                    pwFieldRef.current.focus();\n                  }\n                }\n              }}\n              placeholder='Login hier eingeben'\n            />\n            {/* <Form.Text className='text-muted'>\n              We'll never share your email with anyone else.\n            </Form.Text> */}\n          </Form.Group>\n\n          <Form.Group controlId='potenzialflaechen-online-pass'>\n            <Form.Label>Passwort</Form.Label>\n            <Form.Control\n              ref={pwFieldRef}\n              value={pw}\n              onChange={(e) => {\n                setPw(e.target.value);\n              }}\n              type='password'\n              placeholder='Password'\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  login();\n                }\n              }}\n            />\n          </Form.Group>\n          <div\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              alignItems: \"baseline\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            {loginInfo?.text && (\n              <div style={{ margin: 10, color: loginInfo?.color || \"black\", maxWidth: 200 }}>\n                <b>{loginInfo?.text}</b>\n              </div>\n            )}\n            <div style={{ flexShrink: 100 }}></div>\n            <div>\n              {cacheDataAvailable === true && (\n                <Button\n                  onClick={(e) => {\n                    setLoginInfo({\n                      color: \"#79BD9A\",\n                      text: \"Alte Daten werden aus dem Cache übernommen.\",\n                    });\n                    setTimeout(() => {\n                      setJWT(CACHE_JWT);\n                      setLoginInfo();\n                    }, 500);\n                  }}\n                  style={{ margin: 5, marginTop: 30 }}\n                  variant='secondary'\n                >\n                  Offline arbeiten\n                </Button>\n              )}\n              <Button\n                onClick={(e) => {\n                  login();\n                }}\n                style={{ margin: 5, marginTop: 30 }}\n                variant='primary'\n              >\n                Anmeldung\n              </Button>\n            </div>\n          </div>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n};\nexport default LoginForm;\n","import { useContext } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport IconComp from \"react-cismap/commons/Icon\";\nimport { FeatureCollectionContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport ReactLoading from \"react-loading\";\n\nconst Waiting = ({ waiting }) => {\n  const { selectedFeature } = useContext(FeatureCollectionContext);\n\n  return (\n    <Modal\n      style={{\n        zIndex: 3000000000,\n      }}\n      height='200'\n      size='s'\n      show={waiting !== undefined}\n      //   onHide={close}\n      keyboard={false}\n    >\n      <Modal.Header>\n        <Modal.Title>\n          <IconComp name={waiting?.icon} /> {waiting?.title}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"baseline\" }}>\n          <ReactLoading type={\"cylon\"} color={selectedFeature?.properties.color} />{\" \"}\n          <div style={{ marginLeft: 20 }}>{waiting?.text}</div>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default Waiting;\n","import { useContext } from \"react\";\nimport { ResponsiveTopicMapContext } from \"react-cismap/contexts/ResponsiveTopicMapContextProvider\";\nimport { FeatureCollectionContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\n\nimport { CACHE_JWT } from \"react-cismap/tools/fetching\";\n\nconst Title = ({ logout, jwt }) => {\n  const { windowSize } = useContext(ResponsiveTopicMapContext);\n  const { metaInformation } = useContext(FeatureCollectionContext);\n  let dateInfo;\n  if (metaInformation) {\n    const t = metaInformation.time;\n    const d = new Date(t);\n    dateInfo = d.toLocaleString();\n  }\n\n  let secondaryInfo, jwtPayload, actiontext;\n  if (jwt === CACHE_JWT) {\n    secondaryInfo = \"Daten aus dem Cache\"; //;+ metaInformation.time;\n    actiontext = \"anmelden und Daten aktualisieren\";\n  } else {\n    try {\n      jwtPayload = atob(jwt.split(\".\")[1]);\n      secondaryInfo = JSON.parse(jwtPayload).sub;\n      actiontext = \"abmelden\";\n    } catch (e) {}\n  }\n  const titleContent = (\n    <div>\n      <b>Umweltalarm</b> (\n      {secondaryInfo + (dateInfo !== undefined ? \", \" + dateInfo : \"\")})\n      <div style={{ float: \"right\", paddingRight: 10 }}>\n        <a\n          style={{ color: \"#337ab7\" }}\n          onClick={() => {\n            logout();\n          }}\n        >\n          {/* <FontAwesomeIcon icon={faRandom} style={{ marginRight: 5 }} /> */}\n          {actiontext}\n        </a>\n      </div>\n    </div>\n  );\n\n  return (\n    <table\n      style={{\n        width: (windowSize?.width || 300) - 54 - 12 - 38 - 12 + \"px\",\n        height: \"30px\",\n        position: \"absolute\",\n        left: 54,\n        top: 12,\n        zIndex: 555,\n      }}\n    >\n      <tbody>\n        <tr>\n          <td\n            style={{\n              textAlign: \"center\",\n              verticalAlign: \"middle\",\n              background: \"#ffffff\",\n              color: \"black\",\n              opacity: \"0.9\",\n              paddingLeft: \"10px\",\n            }}\n          >\n            {titleContent}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default Title;\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"react-cismap/topicMaps.css\";\nimport TopicMapContextProvider from \"react-cismap/contexts/TopicMapContextProvider\";\nimport UmweltalarmMap from \"./UmweltalarmMap\";\nimport { MappingConstants } from \"react-cismap\";\nimport { getInternetExplorerVersion } from \"react-cismap/tools/browserHelper\";\nimport { defaultLayerConf } from \"react-cismap/tools/layerFactory\";\nimport { useEffect, useState } from \"react\";\nimport localforage from \"localforage\";\nimport { md5ActionFetchDAQ4Dexie, initTables } from \"./md5Fetching\";\nimport LoginForm from \"./components/LoginForm\";\nimport Waiting from \"./components/Waiting\";\nimport Title from \"./components/TitleControl\";\n\n\nconst host = \"https://wupp-topicmaps-data.cismet.de\";\nexport const appKey = \"umweltalarm.Online.Wuppertal\";\nexport const apiUrl = \"https://potenzialflaechen-online-api.cismet.de\";\nexport const daqKeys = ['StoerfallBetriebeKlasse1', 'StoerfallBetriebeKlasse2', 'wasserverbaende', 'wasserschutzgebiete', 'autobahnmeisterei', 'landschaftsschutzgebiete', 'naturschutzgebiete', 'strassenmeisterei', 'bimschNrw', 'bimschWuppertal', 'trinkwasserbrunnen', 'stadtFlurstuecke'];\nexport const db = initTables(appKey, daqKeys);\n\n\nfunction App() {\n  let backgroundModes;\n  useEffect(() => {\n    document.title = \"Umweltalarm Wuppertal\";\n  }, []);\n\n  const [jwt, _setJWT] = useState();\n  const [loggedOut, setLoggedOut] = useState();\n  const [waiting, setWaiting] = useState();\n  const [loginInfo, setLoginInfo] = useState();\n\n  const setJWT = (jwt) => {\n    localforage.setItem(\"@\" + appKey + \".\" + \"auth\" + \".\" + \"jwt\", jwt);\n    _setJWT(jwt);\n  };\n    \n  useEffect(() => {\n    (async () => {\n      const jwtInCache = await localforage.getItem(\"@\" + appKey + \".\" + \"auth\" + \".\" + \"jwt\");\n      if (jwtInCache) {\n        setJWT(jwtInCache);\n        setLoggedOut(false);\n      } else {\n        setJWT(undefined);\n        setLoggedOut(true);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (jwt) {\n\n      for (const daqKey of daqKeys) {\n        md5ActionFetchDAQ4Dexie(appKey, apiUrl, jwt, daqKey, db)\n          .then(\n            (stoerfallResult) => {\n//              alert('drin ' + daqKey);\n            },\n            (problem) => {\n              if (problem.status === 401) {\n                alert(\"error 401\");\n                setJWT(undefined);\n                setLoginInfo({ color: \"#F9D423\", text: \"Bitte melden Sie sich erneut an.\" });\n                setTimeout(() => {\n                  setLoginInfo();\n                }, 2500);\n              }\n//              setDynGazData([]);\n            }\n          )\n          .catch((e) => {\n            console.log(\"xxx error \", e);\n          });\n      }\n      setLoggedOut(false);\n    } else {\n      setLoggedOut(true);\n//      setDynGazData([]);\n    }\n  }, [jwt]);\n\n  if (getInternetExplorerVersion() === -1) {\n    backgroundModes = [\n      {\n        title: \"Stadtplan\",\n        mode: \"default\",\n        layerKey: \"stadtplan\",\n      },\n      {\n        title: \"Stadtplan (Vektordaten light)\",\n        mode: \"default\",\n        layerKey: \"vector\",\n      },\n\n      { title: \"Luftbildkarte\", mode: \"default\", layerKey: \"lbk\" },\n    ];\n  } else {\n    backgroundModes = [\n      {\n        title: \"Stadtplan\",\n        mode: \"default\",\n        layerKey: \"stadtplan\",\n      },\n\n      { title: \"Luftbildkarte\", mode: \"default\", layerKey: \"lbk\" },\n    ];\n  }\n  const backgroundConfigurations = {\n    lbk: {\n      layerkeyx: \"cismetText|trueOrtho2020@60\",\n      layerkey: \"wupp-plan-live@100|trueOrtho2020@75|rvrSchrift@100\",\n      src: \"/images/rain-hazard-map-bg/ortho.png\",\n      title: \"Luftbildkarte\",\n    },\n    stadtplan: {\n      layerkey: \"wupp-plan-live@45\",\n      src: \"/images/rain-hazard-map-bg/citymap.png\",\n      title: \"Stadtplan\",\n    },\n    vector: {\n      layerkey: \"cismetLight\",\n      src: \"/images/rain-hazard-map-bg/citymap.png\",\n      title: \"Stadtplan\",\n    },\n  };\n\n  // const baseLayerConf = JSON.parse(JSON.stringify(defaultLayerConf));\n  // TODO problems in settings preview map wehen doing the immutable way\n  const baseLayerConf = { ...defaultLayerConf };\n\n  if (baseLayerConf.namedLayers.cismetLight == undefined) {\n    baseLayerConf.namedLayers.cismetLight = {\n      type: \"vector\",\n      style_: \"http://0.0.0.0:888/styles/cismetplus/style.json\",\n      style: \"https://omt.map-hosting.de/styles/cismetplus/style.json\",\n      xpane: \"backgroundvectorLayers\",\n    };\n  }\n  if (baseLayerConf.namedLayers.cismetLight == undefined) {\n    baseLayerConf.namedLayers.cismetText = {\n      type: \"vector\",\n      style: \"http://omt.map-hosting.de/styles/klokantech-basic/style.json\",\n\n      opacity: 0.05,\n      iconOpacity: 0.7,\n      textOpacity: 0.7,\n      xpane: \"backgroundlayerTooltips\",\n    };\n  }\n\n  return (\n    <TopicMapContextProvider\n      baseLayerConf={baseLayerConf}\n      backgroundConfigurations={backgroundConfigurations}\n      backgroundModes={backgroundModes}\n      referenceSystem={MappingConstants.crs3857}\n      mapEPSGCode='3857'\n      referenceSystemDefinition={MappingConstants.proj4crs3857def}\n      maskingPolygon='POLYGON((668010.063156992 6750719.23021889,928912.612468322 6757273.20343972,930494.610325512 6577553.43685138,675236.835570551 6571367.64964125,668010.063156992 6750719.23021889))'\n    >\n      {loggedOut && jwt === undefined && (\n        <LoginForm\n          key={\"login.\"}\n          setJWT={setJWT}\n          loginInfo={loginInfo}\n          setLoginInfo={setLoginInfo}\n        />\n      )}\n      {!loggedOut && jwt !== undefined && (\n        <Title\n          logout={() => {\n            setJWT(undefined);\n            setLoggedOut(true);\n            setLoginInfo({ color: \"#69D2E7\", text: \"Sie wurden erfolgreich abgemeldet.\" });\n            setTimeout(() => {\n              setLoginInfo();\n            }, 2500);\n          }}\n          jwt={jwt}\n        />\n      )}\n      <Waiting waiting={waiting} />\n\n      <UmweltalarmMap />\n    </TopicMapContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}